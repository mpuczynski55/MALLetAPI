Subject: [PATCH] fixed
fixed
czasem nie działa usuwanie seta fixed
jak sie dodaje set do grupy to pojawia sie też w bazie usera fixed
permissions
swagger fix
hotfix
hotfix
email template
deleete tests
Delete mallet-api/mallet-api.iml
Delete mallet-core/mallet-core.iml
Delete mallet-api.iml
Delete mallet-core.iml
Delete mallet.iml
Delete .idea directory
Delete .idea directory
timeout
timeout
no ssl
ssl
ssl
ssl
confirmation link
confirmation link
deploy cloud
deploy cloud
deploy cloud
deploy cloud
deploy cloud
send mail i takie tam
fixed delete user
pagerequest
pagerequest
pagerequest
jmeter
sety predefined
poprawic w quarkusie, predefined sets
poprawic w quarkusie
poprawic w quarkusie
poprawic w quarkusie
poprawic w quarkusie
poprawic w quarkusie
delete grouP
sets do create now
GROUPS
GROUPS
hotfix
dupa
Merge remote-tracking branch 'origin/v2' into v2
user set terms
Merge remote-tracking branch 'origin/v2' into v2
:)
revert
hotfix
hotfix
query set by name
dupa
update set
update set
user contains
lukasz
dupa
shit
shit
changes changes
# added UserSetInformationDTO
# handle user operations # error handling # api module # handle basic set operations
# added application.properties
Initial Commit
Initial commit
---
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
+++ b/pom.xml	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>3.1.3</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+
+    <groupId>com.agh</groupId>
+    <artifactId>mallet</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <packaging>pom</packaging>
+    <modules>
+        <module>mallet-core</module>
+        <module>mallet-api</module>
+    </modules>
+
+    <properties>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 58ce96ec15042c6da7102d2e934a5e280947303c)
+++ /dev/null	(revision 58ce96ec15042c6da7102d2e934a5e280947303c)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: mallet-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/pom.xml b/mallet-api/pom.xml
new file mode 100644
--- /dev/null	(revision 8c19b44cd60c8d1f0069e90f3c1c2d9a47b74dec)
+++ b/mallet-api/pom.xml	(revision 8c19b44cd60c8d1f0069e90f3c1c2d9a47b74dec)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>com.agh</groupId>
+        <artifactId>mallet</artifactId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+
+    <artifactId>mallet-api</artifactId>
+
+    <properties>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: mallet-api/src/main/java/com/agh/api/ErrorResponseDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/ErrorResponseDTO.java b/mallet-api/src/main/java/com/agh/api/ErrorResponseDTO.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-api/src/main/java/com/agh/api/ErrorResponseDTO.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,15 @@
+package com.agh.api;
+
+import lombok.Builder;
+
+import java.util.Date;
+
+@Builder
+public record ErrorResponseDTO(
+
+        Date timestamp,
+        int httpCode,
+        String httpStatus,
+        String message,
+        String stackTrace) {
+}
Index: mallet-api/src/main/java/com/agh/api/SetInformationDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/SetInformationDTO.java b/mallet-api/src/main/java/com/agh/api/SetInformationDTO.java
new file mode 100644
--- /dev/null	(revision 93aa097dc5906786ea481d34bfcc0278b57dd1c7)
+++ b/mallet-api/src/main/java/com/agh/api/SetInformationDTO.java	(revision 93aa097dc5906786ea481d34bfcc0278b57dd1c7)
@@ -0,0 +1,18 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record SetInformationDTO(
+        @NonNull
+        Long id,
+        @NonNull
+        String name,
+        @NonNull
+        String identifier,
+        UserDTO creator,
+        @NonNull
+        int numberOfTerms,
+        String description) {
+}
Index: mallet-api/src/main/java/com/agh/api/UserLogInDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/UserLogInDTO.java b/mallet-api/src/main/java/com/agh/api/UserLogInDTO.java
new file mode 100644
--- /dev/null	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
+++ b/mallet-api/src/main/java/com/agh/api/UserLogInDTO.java	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
@@ -0,0 +1,13 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record UserLogInDTO(
+        @NonNull
+        String email,
+        @NonNull
+        String password
+) {
+}
\ No newline at end of file
Index: mallet-api/src/main/java/com/agh/api/UserRegistrationDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/UserRegistrationDTO.java b/mallet-api/src/main/java/com/agh/api/UserRegistrationDTO.java
new file mode 100644
--- /dev/null	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
+++ b/mallet-api/src/main/java/com/agh/api/UserRegistrationDTO.java	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
@@ -0,0 +1,15 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record UserRegistrationDTO(
+        @NonNull
+        String username,
+        @NonNull
+        String password,
+        @NonNull
+        String email
+) {
+}
Index: mallet-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/pom.xml b/mallet-core/pom.xml
new file mode 100644
--- /dev/null	(revision 3d451f5c223c97cd300e31b53e27c6187907985d)
+++ b/mallet-core/pom.xml	(revision 3d451f5c223c97cd300e31b53e27c6187907985d)
@@ -0,0 +1,125 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>com.agh</groupId>
+        <artifactId>mallet</artifactId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+
+    <artifactId>mallet-core</artifactId>
+
+    <properties>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-jpa</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-mail</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.hibernate</groupId>
+            <artifactId>hibernate-core</artifactId>
+            <version>6.3.1.Final</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-validation</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springdoc</groupId>
+            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
+            <version>2.2.0</version>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+            <version>3.12.0</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>com.google.guava</groupId>
+            <artifactId>guava</artifactId>
+            <version>31.1-jre</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.slf4j</groupId>
+            <artifactId>slf4j-api</artifactId>
+            <version>2.0.9</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.postgresql</groupId>
+            <artifactId>postgresql</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-configuration-processor</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-tomcat</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.agh</groupId>
+            <artifactId>mallet-api</artifactId>
+            <version>${version}</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-security</artifactId>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+                <configuration>
+                    <excludes>
+                        <exclude>
+                            <groupId>org.projectlombok</groupId>
+                            <artifactId>lombok</artifactId>
+                        </exclude>
+                    </excludes>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
\ No newline at end of file
Index: mallet-core/src/main/java/com/agh/mallet/MalletApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/MalletApplication.java b/mallet-core/src/main/java/com/agh/mallet/MalletApplication.java
new file mode 100644
--- /dev/null	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
+++ b/mallet-core/src/main/java/com/agh/mallet/MalletApplication.java	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
@@ -0,0 +1,13 @@
+package com.agh.mallet;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class MalletApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(MalletApplication.class, args);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/ServletInitializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/ServletInitializer.java b/mallet-core/src/main/java/com/agh/mallet/ServletInitializer.java
new file mode 100644
--- /dev/null	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
+++ b/mallet-core/src/main/java/com/agh/mallet/ServletInitializer.java	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
@@ -0,0 +1,13 @@
+package com.agh.mallet;
+
+import org.springframework.boot.builder.SpringApplicationBuilder;
+import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
+
+public class ServletInitializer extends SpringBootServletInitializer {
+
+    @Override
+    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
+        return application.sources(MalletApplication.class);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/configuration/PasswordEncoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/configuration/PasswordEncoder.java b/mallet-core/src/main/java/com/agh/mallet/configuration/PasswordEncoder.java
new file mode 100644
--- /dev/null	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
+++ b/mallet-core/src/main/java/com/agh/mallet/configuration/PasswordEncoder.java	(revision 03353efa59288cc1596988fe932562eb4b7837fa)
@@ -0,0 +1,15 @@
+package com.agh.mallet.configuration;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.security.crypto.password.Pbkdf2PasswordEncoder;
+
+@Configuration
+public class PasswordEncoder {
+
+    @Bean
+    public Pbkdf2PasswordEncoder argon2PasswordEncoder() {
+        return Pbkdf2PasswordEncoder.defaultsForSpringSecurity_v5_8();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/common/ExceptionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/common/ExceptionController.java b/mallet-core/src/main/java/com/agh/mallet/domain/common/ExceptionController.java
new file mode 100644
--- /dev/null	(revision edbd74fe03f76bc5396bf44da080077f357f57a2)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/common/ExceptionController.java	(revision edbd74fe03f76bc5396bf44da080077f357f57a2)
@@ -0,0 +1,20 @@
+package com.agh.mallet.domain.common;
+
+import com.agh.api.ErrorResponseDTO;
+import com.agh.mallet.infrastructure.exception.MalletException;
+import com.agh.mallet.infrastructure.mapper.ErrorResponseDTOMapper;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.ControllerAdvice;
+import org.springframework.web.bind.annotation.ExceptionHandler;
+
+@ControllerAdvice
+public class ExceptionController {
+
+    @ExceptionHandler(MalletException.class)
+    public ResponseEntity<ErrorResponseDTO> handleException(MalletException malletException) {
+        ErrorResponseDTO errorResponseDTO = ErrorResponseDTOMapper.from(malletException);
+
+        return new ResponseEntity<>(errorResponseDTO, malletException.getHttpStatus());
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/ExceptionType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/ExceptionType.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/ExceptionType.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/ExceptionType.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,13 @@
+package com.agh.mallet.infrastructure.exception;
+
+public enum ExceptionType {
+
+    NOT_FOUND,
+    LOCKED,
+    INVALID_ARGUMENT,
+    ALREADY_EXISTS,
+    BAD_GATEWAY,
+    CONFLICT,
+    FORBIDDEN
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletException.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletException.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletException.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,68 @@
+package com.agh.mallet.infrastructure.exception;
+
+import org.springframework.http.HttpStatus;
+import org.springframework.web.bind.annotation.ResponseStatus;
+
+public class MalletException extends RuntimeException {
+
+    private HttpStatus httpStatus;
+
+    public MalletException(String message, ExceptionType type) {
+        super(message);
+
+        switch (type) {
+            case NOT_FOUND -> onNotFound();
+            case LOCKED -> onLocked();
+            case INVALID_ARGUMENT -> onInvalid();
+            case ALREADY_EXISTS -> onAlreadyExists();
+            case BAD_GATEWAY -> onBadGateway();
+            case CONFLICT -> onConflict();
+            case FORBIDDEN -> onForbidden();
+            default -> onUnknown();
+        }
+    }
+
+    @ResponseStatus(HttpStatus.NOT_FOUND)
+    private void onNotFound() {
+        this.httpStatus = HttpStatus.NOT_FOUND;
+    }
+
+    @ResponseStatus(HttpStatus.FORBIDDEN)
+    private void onLocked() {
+        this.httpStatus = HttpStatus.FORBIDDEN;
+    }
+
+    @ResponseStatus(HttpStatus.PRECONDITION_FAILED)
+    private void onInvalid() {
+        this.httpStatus = HttpStatus.PRECONDITION_FAILED;
+    }
+
+    @ResponseStatus(HttpStatus.FORBIDDEN)
+    private void onAlreadyExists() {
+        this.httpStatus = HttpStatus.FORBIDDEN;
+    }
+
+    @ResponseStatus(HttpStatus.BAD_GATEWAY)
+    private void onBadGateway() {
+        this.httpStatus = HttpStatus.BAD_GATEWAY;
+    }
+
+    @ResponseStatus(HttpStatus.CONFLICT)
+    private void onConflict() {
+        this.httpStatus = HttpStatus.CONFLICT;
+    }
+
+    @ResponseStatus(HttpStatus.FORBIDDEN)
+    private void onForbidden() {
+        this.httpStatus = HttpStatus.FORBIDDEN;
+    }
+
+    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
+    private void onUnknown() {
+        this.httpStatus = HttpStatus.INTERNAL_SERVER_ERROR;
+    }
+    public HttpStatus getHttpStatus() {
+        return httpStatus;
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ErrorResponseDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ErrorResponseDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ErrorResponseDTOMapper.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ErrorResponseDTOMapper.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,23 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.ErrorResponseDTO;
+import com.agh.mallet.infrastructure.exception.MalletException;
+import org.apache.commons.lang3.exception.ExceptionUtils;
+import org.springframework.http.HttpStatus;
+
+public class ErrorResponseDTOMapper {
+
+    private ErrorResponseDTOMapper() {}
+
+    public static ErrorResponseDTO from(MalletException malletException) {
+        HttpStatus httpStatus = malletException.getHttpStatus();
+
+        return ErrorResponseDTO.builder()
+                .httpCode(httpStatus.value())
+                .httpStatus(httpStatus.toString())
+                .stackTrace(ExceptionUtils.getStackTrace(malletException))
+                .message(malletException.getMessage())
+                .build();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserInformationDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserInformationDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserInformationDTOMapper.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserInformationDTOMapper.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,20 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.UserDetailDTO;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+
+public class UserInformationDTOMapper {
+
+    private UserInformationDTOMapper() {
+    }
+
+    public static UserDetailDTO from(UserJPAEntity user) {
+        return UserDetailDTO.builder()
+                .id(user.getId())
+                .identifier(user.getIdentifier())
+                .username(user.getUsername())
+                .registrationDate(user.getRegistrationDate())
+                .email(user.getEmail())
+                .build();
+    }
+}
Index: mallet-core/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/mallet-core/src/main/resources/application.properties b/mallet-core/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(revision 0958f5072f1eacbe64fa92d2b662d29ccf16ac1a)
+++ b/mallet-core/src/main/resources/application.properties	(revision 0958f5072f1eacbe64fa92d2b662d29ccf16ac1a)
@@ -0,0 +1,19 @@
+spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
+# DATABASE
+spring.datasource.driver-class-name=org.postgresql.Driver
+#spring.datasource.url=jdbc:postgresql://db.fqsrbmwuuorvznqohgjs.supabase.co:5432/postgres?user=postgres&password=yVTCjGtR6R4dI379
+spring.datasource.url=jdbc:postgresql://localhost:5432/spring?user=postgres&password=postgres
+# EMAIL
+spring.mail.host=smtp.gmail.com
+spring.mail.port=587
+spring.mail.username=malletbosses@gmail.com
+spring.mail.password=SzefBoss123!@#
+spring.mail.properties.mail.smtp.auth=true
+spring.mail.properties.mail.smtp.starttls.enable=true
+# ERROR HANDLING
+#server.error.include-message=always
+#logging.level.org.hibernate.SQL=DEBUG
+#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
+
+
+spring.datasource.hikari.connection-timeout=600000
\ No newline at end of file
Index: mallet-api/src/main/java/com/agh/api/TermDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/TermDTO.java b/mallet-api/src/main/java/com/agh/api/TermDTO.java
new file mode 100644
--- /dev/null	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
+++ b/mallet-api/src/main/java/com/agh/api/TermDTO.java	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
@@ -0,0 +1,18 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record TermDTO(
+        @NonNull
+        Long id,
+        @NonNull
+        String term,
+        String definition,
+        Language language,
+        TermDTO translation
+
+) {
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetInformationDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetInformationDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetInformationDTOMapper.java
new file mode 100644
--- /dev/null	(revision 93aa097dc5906786ea481d34bfcc0278b57dd1c7)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetInformationDTOMapper.java	(revision 93aa097dc5906786ea481d34bfcc0278b57dd1c7)
@@ -0,0 +1,37 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.SetInformationDTO;
+import com.agh.api.UserDTO;
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+
+import java.util.Collection;
+import java.util.List;
+import java.util.Objects;
+
+public class SetInformationDTOMapper {
+
+    private SetInformationDTOMapper() {}
+
+    public static List<SetInformationDTO> from(Collection<SetJPAEntity> sets) {
+        return sets.stream()
+                .map(SetInformationDTOMapper::from)
+                .toList();
+    }
+
+    public static SetInformationDTO from(SetJPAEntity set) {
+        UserDTO creator = null;
+        if(Objects.nonNull(set.getCreator())){
+            creator = UserDTOMapper.from(set.getCreator());
+        }
+
+        return SetInformationDTO.builder()
+                .id(set.getId())
+                .name(set.getName())
+                .creator(creator)
+                .identifier(set.getIdentifier())
+                .numberOfTerms(set.getTerms().size())
+                .description(set.getDescription())
+                .build();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermDTOMapper.java
new file mode 100644
--- /dev/null	(revision 0374815327899d7e6c3f41f4a2eda123c5bc5495)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermDTOMapper.java	(revision 0374815327899d7e6c3f41f4a2eda123c5bc5495)
@@ -0,0 +1,43 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.TermDTO;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.infrastructure.utils.LanguageConverter;
+
+import java.util.Collection;
+import java.util.List;
+
+public class TermDTOMapper {
+
+    private TermDTOMapper() {
+    }
+
+    public static List<TermDTO> from(Collection<TermJPAEntity> entities) {
+        return entities.stream()
+                .map(TermDTOMapper::from)
+                .toList();
+    }
+
+    private static TermDTO fromTranslation(TermJPAEntity entity) {
+        return TermDTO.builder()
+                .id(entity.getId())
+                .term(entity.getTerm())
+                .definition(entity.getDefinition())
+                .language(LanguageConverter.from(entity.getLanguage()))
+                .build();
+    }
+
+
+    private static TermDTO from(TermJPAEntity entity) {
+        TermDTO translation =  TermDTOMapper.fromTranslation(entity.getTranslation());
+        TermDTO.TermDTOBuilder builder = TermDTO.builder();
+        return builder
+                .id(entity.getId())
+                .term(entity.getTerm())
+                .definition(entity.getDefinition())
+                .language(LanguageConverter.from(entity.getLanguage()))
+                .translation(translation)
+                .build();
+    }
+}
+
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/NextChunkRebuilder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/NextChunkRebuilder.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/NextChunkRebuilder.java
new file mode 100644
--- /dev/null	(revision 6ee3f3a0cc50df7aaddce2eec7c14a52c393c7d4)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/NextChunkRebuilder.java	(revision 6ee3f3a0cc50df7aaddce2eec7c14a52c393c7d4)
@@ -0,0 +1,53 @@
+package com.agh.mallet.infrastructure.utils;
+
+import jakarta.servlet.http.HttpServletRequest;
+import org.springframework.stereotype.Component;
+import org.springframework.web.context.annotation.RequestScope;
+
+import java.util.Collection;
+
+@Component
+@RequestScope
+public class NextChunkRebuilder {
+
+    private static final String START_POSITION_PARAM_TEMPLATE = "startPosition=%d";
+    private static final String LIMIT_PARAM_TEMPLATE = "limit=%d";
+    private static final String AMPERSAND_CHARACTER = "&";
+    private static final String QUESTION_MARK = "?";
+
+    private final HttpServletRequest servletRequest;
+
+    public NextChunkRebuilder(HttpServletRequest servletRequest) {
+        this.servletRequest = servletRequest;
+    }
+
+    public <T> String rebuild(Collection<T> resultResource,
+                              Integer startPosition,
+                              Integer limit) {
+        if (resultResource.isEmpty() || resultResource.size() < limit) {
+            return null;
+        }
+
+        return rebuild(startPosition, limit);
+    }
+
+    private String rebuild(Integer startPosition,
+                          Integer limit) {
+        String currentStartPositionTemplate = String.format(START_POSITION_PARAM_TEMPLATE, startPosition);
+        String nextChunkStartPositionTemplate = String.format(START_POSITION_PARAM_TEMPLATE, startPosition + 1);
+
+        String currentUrl = servletRequest.getRequestURI();
+
+        String rebuildNextChunkUri = currentUrl
+                .replace(currentStartPositionTemplate, nextChunkStartPositionTemplate);
+
+        if (!rebuildNextChunkUri.contains(nextChunkStartPositionTemplate)) {
+            String limitTemplate = String.format(LIMIT_PARAM_TEMPLATE, limit);
+
+            rebuildNextChunkUri = currentUrl + QUESTION_MARK + limitTemplate + AMPERSAND_CHARACTER + nextChunkStartPositionTemplate;
+        }
+
+        return rebuildNextChunkUri;
+    }
+
+}
Index: mallet-api/src/main/java/com/agh/api/ContributionDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/ContributionDTO.java b/mallet-api/src/main/java/com/agh/api/ContributionDTO.java
new file mode 100644
--- /dev/null	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
+++ b/mallet-api/src/main/java/com/agh/api/ContributionDTO.java	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
@@ -0,0 +1,17 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record ContributionDTO (
+        Long id,
+        @NonNull
+        PermissionType setPermissionType,
+        @NonNull
+        PermissionType groupPermissionType,
+        @NonNull
+        UserDTO contributor
+){
+
+}
Index: mallet-api/src/main/java/com/agh/api/GroupDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupDTO.java b/mallet-api/src/main/java/com/agh/api/GroupDTO.java
new file mode 100644
--- /dev/null	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
+++ b/mallet-api/src/main/java/com/agh/api/GroupDTO.java	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
@@ -0,0 +1,20 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.List;
+
+@Builder
+public record GroupDTO(
+        @NonNull
+        Long id,
+        @NonNull
+        String name,
+        @NonNull
+        List<ContributionDTO> contributions,
+        @NonNull
+        List<SetInformationDTO> sets
+) {
+
+}
\ No newline at end of file
Index: mallet-api/src/main/java/com/agh/api/PermissionType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/PermissionType.java b/mallet-api/src/main/java/com/agh/api/PermissionType.java
new file mode 100644
--- /dev/null	(revision 76957047d34105680c04a95fd0096d6085abeb15)
+++ b/mallet-api/src/main/java/com/agh/api/PermissionType.java	(revision 76957047d34105680c04a95fd0096d6085abeb15)
@@ -0,0 +1,7 @@
+package com.agh.api;
+
+public enum PermissionType {
+    ADMIN,
+    READ_WRITE,
+    READ
+}
Index: mallet-api/src/main/java/com/agh/api/SetBasicDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/SetBasicDTO.java b/mallet-api/src/main/java/com/agh/api/SetBasicDTO.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-api/src/main/java/com/agh/api/SetBasicDTO.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,13 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.List;
+
+@Builder
+public record SetBasicDTO(
+        @NonNull
+        List<SetInformationDTO> sets,
+        String nextChunkUri
+) {}
\ No newline at end of file
Index: mallet-api/src/main/java/com/agh/api/UserDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/UserDTO.java b/mallet-api/src/main/java/com/agh/api/UserDTO.java
new file mode 100644
--- /dev/null	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
+++ b/mallet-api/src/main/java/com/agh/api/UserDTO.java	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
@@ -0,0 +1,13 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record UserDTO(
+        @NonNull
+        Long id,
+        String name,
+        String identifier
+) {
+}
Index: mallet-api/src/main/java/com/agh/api/UserDetailDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/UserDetailDTO.java b/mallet-api/src/main/java/com/agh/api/UserDetailDTO.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-api/src/main/java/com/agh/api/UserDetailDTO.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,21 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.time.LocalDate;
+
+@Builder
+public record UserDetailDTO(
+        @NonNull
+        Long id,
+        @NonNull
+        String identifier,
+        @NonNull
+        String username,
+        @NonNull
+        LocalDate registrationDate,
+        @NonNull
+        String email
+) {
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/set/boundary/SetResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/set/boundary/SetResource.java b/mallet-core/src/main/java/com/agh/mallet/domain/set/boundary/SetResource.java
new file mode 100644
--- /dev/null	(revision b7400f85ac5424d99602cbc4585102d89ce87d4b)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/set/boundary/SetResource.java	(revision b7400f85ac5424d99602cbc4585102d89ce87d4b)
@@ -0,0 +1,78 @@
+package com.agh.mallet.domain.set.boundary;
+
+import com.agh.api.SetBasicDTO;
+import com.agh.api.SetDetailDTO;
+import com.agh.api.SetUpdateDTO;
+import com.agh.mallet.domain.set.control.service.SetService;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.tags.Tag;
+import jakarta.validation.constraints.Max;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PutMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.security.Principal;
+import java.util.Set;
+
+@Tag(name = "Set Resource")
+@RestController
+@RequestMapping(path = "set", produces = MediaType.APPLICATION_JSON_VALUE)
+public class SetResource {
+
+    private static final String BASIC_PATH = "basic";
+
+    private final SetService setService;
+
+    public SetResource(SetService setService) {
+        this.setService = setService;
+    }
+
+    @Operation(
+            summary = "Get sets basic information",
+            description = "Get sets basic information providing primary language." +
+                    "If ids parameter is provided and result exceeds limit param then next chunk uri is returned"
+    )
+    @GetMapping(value = BASIC_PATH)
+    public ResponseEntity<SetBasicDTO> getBasics(@Max(10) @RequestParam(name = "ids", required = false) Set<Long> ids,
+                                                 @RequestParam(name = "topic", required = false) String topic,
+                                                 @RequestParam(name = "startPosition", defaultValue = "0") int startPosition,
+                                                 @RequestParam(name = "limit", defaultValue = "10") int limit,
+                                                 @RequestParam(name = "language", required = false, defaultValue = "EN") String primaryLanguage,
+                                                 @RequestParam(name = "predefined", defaultValue = "false") boolean predefined) {
+        SetBasicDTO setBasicDTO = setService.getBasics(ids, topic, startPosition, limit, primaryLanguage,predefined);
+
+        return new ResponseEntity<>(setBasicDTO, HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Get set detail information",
+            description = "Get set detail information providing primary language and set id. If the terms result exceeds termLimit param then next chunk uri is returned"
+    )
+    @GetMapping
+    public ResponseEntity<SetDetailDTO> get(@RequestParam(name = "id") long id,
+                                            @RequestParam(name = "termStartPosition", defaultValue = "0") int termStartPosition,
+                                            @RequestParam(name = "termLimit", defaultValue = "20") int termLimit,
+                                            @RequestParam(name = "language", defaultValue = "EN") String primaryLanguage) {
+
+        SetDetailDTO setDTO = setService.get(id, termStartPosition, termLimit, primaryLanguage);
+
+        return new ResponseEntity<>(setDTO, HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Sync set"
+    )
+    @PutMapping
+    public ResponseEntity<Object> syncSet(@RequestBody SetUpdateDTO setUpdateDTO, Principal principal) {
+        setService.syncSet(setUpdateDTO, principal.getName());
+
+        return new ResponseEntity<>( HttpStatus.OK);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/set/control/repository/SetRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/set/control/repository/SetRepository.java b/mallet-core/src/main/java/com/agh/mallet/domain/set/control/repository/SetRepository.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/set/control/repository/SetRepository.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,33 @@
+package com.agh.mallet.domain.set.control.repository;
+
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+import com.agh.mallet.domain.term.entity.Language;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
+import org.springframework.data.jpa.repository.Query;
+
+import java.util.List;
+import java.util.Optional;
+
+public interface SetRepository extends JpaRepository<SetJPAEntity, Long>, JpaSpecificationExecutor<SetJPAEntity> {
+
+    @Query("SELECT m FROM SetJPAEntity o JOIN o.terms m WHERE o.id = ?1 AND m.language =?2")
+    Page<TermJPAEntity> findAllTermsBySetIdAndLanguage(long setId, Language language, Pageable pageable);
+
+    @Query("SELECT m FROM SetJPAEntity o JOIN o.terms m WHERE m.language =?1")
+    Page<SetJPAEntity> findAllByTermsLanguage(Language language, Pageable pageable);
+
+    List<SetJPAEntity> findAllByNameContainingIgnoreCase(String topic);
+
+    long countAllByName(String name);
+
+    boolean existsByIdentifier(String identifier);
+
+    @Query("SELECT o FROM SetJPAEntity o where o.isPredefined = true")
+    Page<SetJPAEntity> findAllPredefined(Pageable pageable);
+
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/set/control/service/SetService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/set/control/service/SetService.java b/mallet-core/src/main/java/com/agh/mallet/domain/set/control/service/SetService.java
new file mode 100644
--- /dev/null	(revision 1369c4316cccc0f2854cdbc5cc957f215a0a7406)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/set/control/service/SetService.java	(revision 1369c4316cccc0f2854cdbc5cc957f215a0a7406)
@@ -0,0 +1,214 @@
+package com.agh.mallet.domain.set.control.service;
+
+import com.agh.api.SetBasicDTO;
+import com.agh.api.SetDetailDTO;
+import com.agh.api.SetUpdateDTO;
+import com.agh.api.TermCreateDTO;
+import com.agh.api.TermDTO;
+import com.agh.mallet.domain.group.control.GroupRepository;
+import com.agh.mallet.domain.group.control.UserContributionValidator;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+import com.agh.mallet.domain.set.control.repository.SetRepository;
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+import com.agh.mallet.domain.term.entity.Language;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.infrastructure.exception.MalletForbiddenException;
+import com.agh.mallet.infrastructure.exception.MalletNotFoundException;
+import com.agh.mallet.infrastructure.mapper.SetBasicsDTOMapper;
+import com.agh.mallet.infrastructure.mapper.SetDetailDTOMapper;
+import com.agh.mallet.infrastructure.utils.NextChunkRebuilder;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.stereotype.Service;
+
+import java.text.MessageFormat;
+import java.util.List;
+import java.util.Map;
+import java.util.Objects;
+import java.util.Set;
+import java.util.function.Function;
+import java.util.function.Supplier;
+import java.util.stream.Collectors;
+
+@Service
+public class SetService {
+
+    public static final String SET_NOT_FOUND_ERROR_MSG = "Set with id: {0} was not found";
+    private static final String GROUP_NOT_FOUND_ERROR_MSG = "Group with id: {0} was not found";
+
+    private static final String INSUFFICIENT_PERMISSION_PREFIX_MSG = "Insufficient permission to ";
+    private static final String PERMISSION_SYNC_UPDATE_ERROR_MSG = INSUFFICIENT_PERMISSION_PREFIX_MSG + "update set";
+    private final SetRepository setRepository;
+    private final GroupRepository groupRepository;
+    private final NextChunkRebuilder nextChunkRebuilder;
+
+    public SetService(SetRepository setRepository, GroupRepository groupRepository, NextChunkRebuilder nextChunkRebuilder) {
+        this.setRepository = setRepository;
+        this.groupRepository = groupRepository;
+        this.nextChunkRebuilder = nextChunkRebuilder;
+    }
+
+    public SetBasicDTO getBasics(Set<Long> ids) {
+        List<SetJPAEntity> sets = setRepository.findAllById(ids);
+
+        return SetBasicsDTOMapper.from(sets);
+    }
+
+    public SetBasicDTO getBasics(String topic) {
+        List<SetJPAEntity> sets = setRepository.findAllByNameContainingIgnoreCase(topic);
+
+        return SetBasicsDTOMapper.from(sets);
+    }
+
+    public SetDetailDTO get(long setId,
+                            int startPosition,
+                            int limit,
+                            String primaryLanguage) {
+        if (limit > 30) {
+            limit = 30;
+        }
+        PageRequest pageRequest = PageRequest.of(startPosition,  limit);
+        Language language = Language.from(primaryLanguage);
+
+        List<TermJPAEntity> terms = setRepository.findAllTermsBySetIdAndLanguage(setId, language, pageRequest)
+                .getContent();
+
+        String nextChunkUri = nextChunkRebuilder.rebuild(terms, startPosition, limit);
+
+        return SetDetailDTOMapper.from(setId, terms, nextChunkUri);
+    }
+
+    public SetBasicDTO getBasics(Set<Long> ids,
+                                 String topic,
+                                 int startPosition,
+                                 int limit,
+                                 String primaryLanguage,
+                                 boolean predefined) {
+        if(predefined){
+            return getPredefined(startPosition, limit);
+        }
+        if (Objects.nonNull(ids)) {
+            return getBasics(ids);
+        }
+
+        if (Objects.nonNull(topic)) {
+            return getBasics(topic);
+        }
+
+        if (limit > 10) {
+            limit = 10;
+        }
+
+        PageRequest pageRequest = PageRequest.of(startPosition,  limit);
+        Language language = Language.from(primaryLanguage);
+
+        List<SetJPAEntity> sets = setRepository.findAllByTermsLanguage(language, pageRequest)
+                .getContent();
+
+        String nextChunkUri = nextChunkRebuilder.rebuild(sets, startPosition, limit);
+
+        return SetBasicsDTOMapper.from(sets, nextChunkUri);
+    }
+
+    private SetBasicDTO getPredefined(      int startPosition,
+                                            int limit) {
+        if (limit > 30) {
+            limit = 30;
+        }
+        PageRequest pageRequest = PageRequest.of(startPosition,  limit);
+
+        List<SetJPAEntity> sets = setRepository.findAllPredefined(pageRequest)
+                .getContent();
+
+        String nextChunkUri = nextChunkRebuilder.rebuild(sets, startPosition, limit);
+
+        return SetBasicsDTOMapper.from(sets, nextChunkUri);
+    }
+
+    public SetJPAEntity getById(long id) {
+        return setRepository.findById(id)
+                .orElseThrow(supplySetNotFoundException(id));
+    }
+
+    private Supplier<MalletNotFoundException> supplySetNotFoundException(long setId) {
+        String message = MessageFormat.format(SET_NOT_FOUND_ERROR_MSG, setId);
+        return () -> new MalletNotFoundException(message);
+    }
+
+    public void syncSet(SetUpdateDTO setUpdateDTO, String userEmail) {
+        SetJPAEntity setEntity = getById(setUpdateDTO.id());
+
+        validateUserPermissionsToUpdateSet(userEmail, setEntity, setUpdateDTO);
+
+        setEntity.setDescription(setUpdateDTO.description());
+        setEntity.setName(setUpdateDTO.topic());
+
+        List<TermJPAEntity> termsToCreate = setUpdateDTO.termsToCreate().stream()
+                .map(this::toTermJPAEntity)
+                .collect(Collectors.toList());
+
+        Map<Long, TermDTO> termById = setUpdateDTO.termsToUpdate().stream()
+                .collect(Collectors.toMap(TermDTO::id, Function.identity()));
+
+        Set<TermJPAEntity> terms = setEntity.getTerms();
+        terms.forEach(term -> updateTerms(termById, term));
+        terms.addAll(termsToCreate);
+
+        setRepository.save(setEntity);
+    }
+
+    private TermJPAEntity toTermJPAEntity(TermCreateDTO term) {
+        return new TermJPAEntity(
+                term.term(),
+                Language.from(term.language().name()),
+                term.definition(),
+                toTranslationTermJPAEntity(term)
+        );
+    }
+
+    private TermJPAEntity toTranslationTermJPAEntity(TermCreateDTO term) {
+        return new TermJPAEntity(
+                term.translation().term(),
+                Language.from(term.translation().language().name()),
+                term.translation().definition()
+        );
+    }
+
+    private void updateTerms(Map<Long, TermDTO> termById, TermJPAEntity term) {
+        if (!termById.containsKey(term.getId())) {
+            return;
+        }
+
+        TermDTO newTerm = termById.get(term.getId());
+        term.setTerm(newTerm.term());
+        term.setDefinition(newTerm.definition());
+        TermJPAEntity translationEntity = term.getTranslation();
+        TermDTO newTranslation = newTerm.translation();
+        translationEntity.setDefinition(newTranslation.definition());
+        translationEntity.setTerm(newTranslation.term());
+    }
+
+    private void validateUserPermissionsToUpdateSet(String userEmail,
+                                                    SetJPAEntity setJPAEntity,
+                                                    SetUpdateDTO setUpdateDTO) {
+
+        if (Objects.isNull(setUpdateDTO.groupId()) && !setJPAEntity.getCreator().getEmail().equals(userEmail)) {
+            throw new MalletForbiddenException(PERMISSION_SYNC_UPDATE_ERROR_MSG);
+        }
+
+        Long groupId = setUpdateDTO.groupId();
+        GroupJPAEntity groupEntity = groupRepository.findById(groupId)
+                        .orElseThrow(supplyGroupNotFoundException(groupId));
+        UserContributionValidator.validateUserSetEditPermission(userEmail, groupEntity, PERMISSION_SYNC_UPDATE_ERROR_MSG);
+    }
+
+    private Supplier<MalletNotFoundException> supplyGroupNotFoundException(long groupId) {
+        return () -> {
+            String message = MessageFormat.format(GROUP_NOT_FOUND_ERROR_MSG, groupId);
+            throw new MalletNotFoundException(message);
+        };
+    }
+
+    public void save(SetJPAEntity setJPAEntity){
+        save(setJPAEntity);
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/set/entity/SetJPAEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/set/entity/SetJPAEntity.java b/mallet-core/src/main/java/com/agh/mallet/domain/set/entity/SetJPAEntity.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/set/entity/SetJPAEntity.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,147 @@
+package com.agh.mallet.domain.set.entity;
+
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import jakarta.persistence.CascadeType;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.JoinColumn;
+import jakarta.persistence.JoinTable;
+import jakarta.persistence.ManyToMany;
+import jakarta.persistence.ManyToOne;
+import jakarta.persistence.Table;
+
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Set;
+
+@Entity
+@Table(name = "SET")
+public class SetJPAEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    //TODO RENAME TOPIC??
+    @Column(name = "NAME", nullable = false)
+    private String name;
+
+    @Column(name = "IDENTIFIER", nullable = false, unique = true)
+    private String identifier;
+
+    @Column(name = "DESCRIPTION")
+    private String description;
+
+    @Column(name = "PREDEFINED")
+    private boolean isPredefined;
+
+    @ManyToMany(cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
+    @JoinTable(name = "SETS_TERMS",
+            joinColumns = @JoinColumn(name = "SET_ID"),
+            inverseJoinColumns = @JoinColumn(name = "TERM_ID")
+    )
+    private Set<TermJPAEntity> terms = new HashSet<>();
+
+    @ManyToOne
+    private UserJPAEntity creator;
+
+    public SetJPAEntity() {}
+
+    public SetJPAEntity(String identifier, SetJPAEntity setJPAEntity) {
+        this.name = setJPAEntity.getName();
+        this.identifier = identifier;
+        this.description = setJPAEntity.getDescription();
+        terms.addAll(setJPAEntity.getTerms());
+    }
+
+    public SetJPAEntity(SetJPAEntity setJPAEntity, String identifier) {
+        this.name = setJPAEntity.getName();
+        this.identifier = identifier;
+        this.description = setJPAEntity.getDescription();
+        this.creator= setJPAEntity.getCreator();
+        terms.addAll(setJPAEntity.getTerms());
+    }
+
+    public UserJPAEntity getCreator() {
+        return creator;
+    }
+
+    public SetJPAEntity(String name, String description, String identifier, Set<TermJPAEntity> terms, UserJPAEntity creator) {
+        this.name = name;
+        this.identifier = identifier;
+        this.description = description;
+        this.terms = terms;
+        this.creator = creator;
+    }
+
+    public SetJPAEntity(String name, String identifier, String description, Set<TermJPAEntity> terms) {
+        this.name = name;
+        this.identifier = identifier;
+        this.description = description;
+        this.terms = terms;
+    }
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public Set<TermJPAEntity> getTerms() {
+        return terms;
+    }
+
+    public void setTerms(Set<TermJPAEntity> terms) {
+        this.terms = terms;
+    }
+
+    public void addTerms(Set<TermJPAEntity> terms) {
+        this.terms = terms;
+    }
+
+    public void setCreator(UserJPAEntity creator) {
+        this.creator = creator;
+    }
+
+    public String getIdentifier() {
+        return identifier;
+    }
+
+    public void setIdentifier(String identifier) {
+        this.identifier = identifier;
+    }
+
+    public void removeTerms(Collection<TermJPAEntity> terms){
+        this.getTerms().removeAll(terms);
+    }
+
+    public boolean isPredefined() {
+        return isPredefined;
+    }
+
+    public void setPredefined(boolean predefined) {
+        isPredefined = predefined;
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/set/boundary/UserSetResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/set/boundary/UserSetResource.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/set/boundary/UserSetResource.java
new file mode 100644
--- /dev/null	(revision f602a79ad3765c6b239696169225424764e215cc)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/set/boundary/UserSetResource.java	(revision f602a79ad3765c6b239696169225424764e215cc)
@@ -0,0 +1,82 @@
+package com.agh.mallet.domain.user.set.boundary;
+
+import com.agh.api.SetBasicDTO;
+import com.agh.api.SetCreateDTO;
+import com.agh.mallet.domain.user.set.control.UserSetService;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.tags.Tag;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.DeleteMapping;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.PutMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.ResponseBody;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.security.Principal;
+
+@Tag(name = "User's Set Resource")
+@RestController
+@RequestMapping(path = "user/set", produces = MediaType.APPLICATION_JSON_VALUE)
+public class UserSetResource {
+
+    private final UserSetService userSetService;
+
+    public UserSetResource(UserSetService userSetService) {
+        this.userSetService = userSetService;
+    }
+
+    @Operation(
+            summary = "Get all contributor's sets",
+            description = "Get all contributor's sets. If the terms result exceeds limit param then next chunk uri is returned"
+    )
+    @GetMapping
+    @ResponseBody
+    public ResponseEntity<SetBasicDTO> get(@RequestParam(name = "startPosition", defaultValue = "0") int startPosition,
+                                           @RequestParam(name = "limit", defaultValue = "10") int limit,
+                                           Principal principal) {
+        SetBasicDTO userSets = userSetService.get(startPosition, limit, principal.getName());
+
+        return new ResponseEntity<>(userSets, HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Add set to user's set collection",
+            description = "Add set to user's set collection providing setId"
+    )
+    @PutMapping
+    public ResponseEntity<Object> add(Principal principal, @RequestParam long setId) {
+        userSetService.add(principal.getName(), setId);
+
+        return new ResponseEntity<>(HttpStatus.OK);
+    }
+
+
+    @Operation(
+            summary = "Remove set from user's set collection",
+            description = "Remove set from user's set collection providing setId"
+    )
+    @DeleteMapping
+    public ResponseEntity<Object> remove(Principal principal, @RequestParam long setId) {
+        userSetService.remove(setId, principal.getName());
+
+        return new ResponseEntity<>( HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Create user set"
+    )
+    @PostMapping
+    public ResponseEntity<Long> createSet(@RequestBody SetCreateDTO setCreateDTO, Principal principal) {
+        Long setId = userSetService.create(setCreateDTO, principal.getName());
+
+        return new ResponseEntity<>(setId, HttpStatus.OK);
+    }
+
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/set/control/UserSetService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/set/control/UserSetService.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/set/control/UserSetService.java
new file mode 100644
--- /dev/null	(revision 5ccff644f23bdb304eaa8ca659ddb608a657021d)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/set/control/UserSetService.java	(revision 5ccff644f23bdb304eaa8ca659ddb608a657021d)
@@ -0,0 +1,146 @@
+package com.agh.mallet.domain.user.set.control;
+
+import com.agh.api.SetBasicDTO;
+import com.agh.api.SetCreateDTO;
+import com.agh.api.TermCreateDTO;
+import com.agh.mallet.domain.set.control.repository.SetRepository;
+import com.agh.mallet.domain.set.control.service.SetService;
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+import com.agh.mallet.domain.term.control.repository.TermRepository;
+import com.agh.mallet.domain.term.entity.Language;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.domain.user.user.control.repository.UserRepository;
+import com.agh.mallet.domain.user.user.control.service.UserService;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import com.agh.mallet.infrastructure.mapper.SetBasicsDTOMapper;
+import com.agh.mallet.infrastructure.utils.NextChunkRebuilder;
+import com.agh.mallet.infrastructure.utils.ObjectIdentifierProvider;
+import jakarta.persistence.LockModeType;
+import jakarta.transaction.Transactional;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.jpa.repository.Lock;
+import org.springframework.stereotype.Service;
+
+import java.util.Collection;
+import java.util.List;
+import java.util.Optional;
+import java.util.Set;
+import java.util.stream.Collectors;
+import java.util.stream.Stream;
+
+@Service
+public class UserSetService {
+
+    private final UserService userService;
+    private final SetService setService;
+    private final SetRepository setRepository;
+    private final UserRepository userRepository;
+    private final NextChunkRebuilder nextChunkRebuilder;
+    private final TermRepository termRepository;
+    private final ObjectIdentifierProvider objectIdentifierProvider;
+
+    public UserSetService(UserService userService, SetService setService, SetRepository setRepository, UserRepository userRepository, NextChunkRebuilder nextChunkRebuilder, TermRepository termRepository, ObjectIdentifierProvider objectIdentifierProvider) {
+        this.userService = userService;
+        this.setService = setService;
+        this.setRepository = setRepository;
+        this.userRepository = userRepository;
+        this.nextChunkRebuilder = nextChunkRebuilder;
+        this.termRepository = termRepository;
+        this.objectIdentifierProvider = objectIdentifierProvider;
+    }
+
+    public SetBasicDTO get(int startPosition,
+                           int limit,
+                           String userEmail) {
+        PageRequest pageRequest = PageRequest.of(startPosition, startPosition + limit);
+        List<SetJPAEntity> userSets = userRepository.findAllSetsByUserEmail(userEmail, pageRequest)
+                .getContent();
+        String nextChunkUri = nextChunkRebuilder.rebuild(userSets, startPosition, limit);
+
+        return SetBasicsDTOMapper.from(userSets, nextChunkUri);
+    }
+
+    public void add(String userEmail, long setId) {
+        UserJPAEntity userEntity = userService.getByEmail(userEmail);
+
+        SetJPAEntity setEntity = setService.getById(setId);
+
+        add(setEntity, userEntity);
+    }
+
+    @Lock(LockModeType.WRITE)
+    private void add(SetJPAEntity set, UserJPAEntity user) {
+        String identifier = objectIdentifierProvider.fromSetName(set.getName());
+
+        SetJPAEntity clonedSet = new SetJPAEntity(set, identifier);
+
+        user.addUserSet(clonedSet);
+
+        userService.save(user);
+    }
+
+
+    public void remove(long setId, String userEmail) {
+        UserJPAEntity userEntity = userService.getByEmail(userEmail);
+
+        SetJPAEntity setEntity = setService.getById(setId);
+
+        remove(setEntity, userEntity);
+    }
+
+    private void remove(SetJPAEntity set,
+                        UserJPAEntity user) {
+        termRepository.deleteAll(set.getTerms());
+        user.removeUserSet(set);
+        userService.save(user);
+    }
+
+    @Transactional
+    @Lock(LockModeType.WRITE)
+    public Long create(SetCreateDTO setCreateDTO, String userEmail) {
+        UserJPAEntity userEntity = userService.getByEmail(userEmail);
+        String identifier = objectIdentifierProvider.fromSetName(setCreateDTO.topic());
+
+        Set<TermJPAEntity> mergedTerms = getToCreateAndExistingTerms(setCreateDTO);
+        SetJPAEntity setJPAEntity = new SetJPAEntity(setCreateDTO.topic(), setCreateDTO.description(), identifier, mergedTerms, userEntity);
+
+        userEntity.getUserSets().add(setJPAEntity);
+
+        setRepository.save(setJPAEntity);
+        userService.save(userEntity);
+
+        return setJPAEntity.getId();
+    }
+
+    private Set<TermJPAEntity> getToCreateAndExistingTerms(SetCreateDTO setCreateDTO) {
+        List<TermJPAEntity> existingTerms = termRepository.findAllById(setCreateDTO.existingTermIds());
+        List<TermJPAEntity> termsToCreate = getTermsToCreate(setCreateDTO);
+
+        return Stream.concat(termsToCreate.stream(), existingTerms.stream())
+                .collect(Collectors.toSet());
+    }
+
+    private List<TermJPAEntity> getTermsToCreate(SetCreateDTO setCreateDTO) {
+        return Optional.ofNullable(setCreateDTO.termsToCreate()).stream()
+                .flatMap(Collection::stream)
+                .map(this::toTermJPAEntity)
+                .toList();
+    }
+
+    private TermJPAEntity toTermJPAEntity(TermCreateDTO term) {
+        return new TermJPAEntity(
+                term.term(),
+                Language.from(term.language().name()),
+                term.definition(),
+                toTranslationTermJPAEntity(term)
+        );
+    }
+
+    private TermJPAEntity toTranslationTermJPAEntity(TermCreateDTO term) {
+        return new TermJPAEntity(
+                term.translation().term(),
+                Language.from(term.translation().language().name()),
+                term.translation().definition()
+        );
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/term/boundary/UserTermResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/term/boundary/UserTermResource.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/term/boundary/UserTermResource.java
new file mode 100644
--- /dev/null	(revision 2b19b3807c5928d5c6480d6be870fd6298a0d03b)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/term/boundary/UserTermResource.java	(revision 2b19b3807c5928d5c6480d6be870fd6298a0d03b)
@@ -0,0 +1,41 @@
+package com.agh.mallet.domain.user.term.boundary;
+
+import com.agh.mallet.domain.user.term.control.UserTermService;
+import io.swagger.v3.oas.annotations.Hidden;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.tags.Tag;
+import org.springframework.http.MediaType;
+import org.springframework.web.bind.annotation.PutMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.security.Principal;
+import java.util.Set;
+
+@Tag(name = "User's Term Resource")
+@RestController
+@RequestMapping(path = "user/term", produces = MediaType.APPLICATION_JSON_VALUE)
+public class UserTermResource {
+
+    private static final String ADD_PATH = "/add";
+
+    private final UserTermService userTermService;
+
+    public UserTermResource(UserTermService userTermService) {
+        this.userTermService = userTermService;
+    }
+
+    @Operation(
+            summary = "Add user known terms",
+            description = "Add terms to user known terms providing ids of the terms"
+    )
+    @PutMapping(ADD_PATH)
+    @ResponseBody
+    @Hidden
+    public void addUserKnownTerms(@RequestBody Set<Long> userKnownTermIds, Principal principal) {
+        userTermService.updateKnown(userKnownTermIds,principal.getName());
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/term/control/UserTermService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/term/control/UserTermService.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/term/control/UserTermService.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/term/control/UserTermService.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,37 @@
+package com.agh.mallet.domain.user.term.control;
+
+import com.agh.mallet.domain.user.user.control.service.UserService;
+import com.agh.mallet.domain.user.user.control.utils.UserValidator;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import com.agh.mallet.domain.term.control.repository.TermRepository;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+import java.util.Set;
+
+@Service
+public class UserTermService {
+
+    private final UserService userService;
+    private final TermRepository termRepository;
+    private final UserValidator userValidator;
+
+    public UserTermService(UserService userService, TermRepository termRepository, UserValidator userValidator) {
+        this.userService = userService;
+        this.termRepository = termRepository;
+        this.userValidator = userValidator;
+    }
+
+    public void updateKnown(Set<Long> userKnownTermIds, String userEmail){
+        UserJPAEntity userEntity = userService.getByEmail(userEmail);
+        userValidator.validateActiveness(userEntity);
+
+        List<TermJPAEntity> termsToUpdate = termRepository.findAllById(userKnownTermIds);
+
+        userEntity.getKnownTerms().addAll(termsToUpdate);
+
+        userService.save(userEntity);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/boundary/UserResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/boundary/UserResource.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/boundary/UserResource.java
new file mode 100644
--- /dev/null	(revision 1878377312da5116f23e53160bf3b829165d2ffd)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/boundary/UserResource.java	(revision 1878377312da5116f23e53160bf3b829165d2ffd)
@@ -0,0 +1,112 @@
+package com.agh.mallet.domain.user.user.boundary;
+
+import com.agh.api.GroupBasicDTO;
+import com.agh.api.UserDTO;
+import com.agh.api.UserDetailDTO;
+import com.agh.api.UserLogInDTO;
+import com.agh.api.UserRegistrationDTO;
+import com.agh.mallet.domain.user.user.control.service.UserGroupService;
+import com.agh.mallet.domain.user.user.control.service.ConfirmationTokenService;
+import com.agh.mallet.domain.user.user.control.service.UserService;
+import com.agh.mallet.domain.user.user.control.utils.EmailTemplateProvider;
+import io.swagger.v3.oas.annotations.Hidden;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.tags.Tag;
+import jakarta.validation.Valid;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.DeleteMapping;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.ResponseBody;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.security.Principal;
+import java.util.List;
+
+@Tag(name = "User Resource")
+@RestController
+@RequestMapping(path = "user", produces = MediaType.APPLICATION_JSON_VALUE)
+public class UserResource {
+
+    private static final String REGISTRATION_PATH = "/registration";
+    private static final String EMAIL_CONFIRMATION_PATH = REGISTRATION_PATH + "/confirm";
+    private static final String LOGIN_PATH = "/login";
+    private static final String GROUP_PATH = "/group";
+
+    private final UserService userService;
+    private final UserGroupService userGroupService;
+    private final ConfirmationTokenService confirmationTokenService;
+
+    public UserResource(UserService userService, UserGroupService userGroupService, ConfirmationTokenService confirmationTokenService) {
+        this.userService = userService;
+        this.userGroupService = userGroupService;
+        this.confirmationTokenService = confirmationTokenService;
+    }
+
+    @Operation(
+            summary = "Register user"
+    )
+    @PostMapping(REGISTRATION_PATH)
+    public ResponseEntity<Object> register(@Valid @RequestBody UserRegistrationDTO userRegistrationDTO) {
+        userService.signUp(userRegistrationDTO);
+
+        return new ResponseEntity<>(HttpStatus.OK);
+    }
+
+    @Hidden
+    @GetMapping(value = EMAIL_CONFIRMATION_PATH, produces = MediaType.TEXT_HTML_VALUE)
+    public String confirm(@RequestParam("token") String token) {
+        confirmationTokenService.confirmToken(token);
+
+        return EmailTemplateProvider.getEmailConfirmedTemplate();
+    }
+
+    @Operation(
+            summary = "Log in user"
+    )
+    @PostMapping(path = LOGIN_PATH)
+    public ResponseEntity<UserDetailDTO> logIn(@RequestBody UserLogInDTO userLogInDTO) {
+        UserDetailDTO userDetailDTO = userService.logIn(userLogInDTO);
+
+        return new ResponseEntity<>(userDetailDTO, HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Delete user providing username"
+    )
+    @GetMapping
+    public ResponseEntity<List<UserDTO>> get(@RequestParam("username") String username) {
+        List<UserDTO> userDTOS = userService.get(username);
+
+        return new ResponseEntity<>(userDTOS, HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Get users providing username"
+    )
+    @DeleteMapping
+    public ResponseEntity<List<UserDTO>> delete(@RequestParam("id") long id, Principal principal) {
+         userService.delete(id, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Get all user's groups",
+            description = "Get all user's groups. If the result exceeds limit param then next chunk uri is returned"
+    )
+    @GetMapping(path = GROUP_PATH)
+    @ResponseBody
+    public ResponseEntity<GroupBasicDTO> get(@RequestParam(name = "startPosition", defaultValue = "0") int startPosition,
+                                             @RequestParam(name = "limit", defaultValue = "10") int limit,
+                                             Principal principal) {
+        GroupBasicDTO groupBasicDTO = userGroupService.get(startPosition, limit, principal.getName());
+
+        return new ResponseEntity<>(groupBasicDTO, HttpStatus.OK);
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletTokenException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletTokenException.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletTokenException.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletTokenException.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,10 @@
+package com.agh.mallet.domain.user.user.control.exception;
+
+import com.agh.mallet.infrastructure.exception.ExceptionType;
+import com.agh.mallet.infrastructure.exception.MalletException;
+
+public class MalletTokenException extends MalletException {
+    public MalletTokenException(String message, ExceptionType type) {
+        super(message, type);
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletUserException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletUserException.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletUserException.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/exception/MalletUserException.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,11 @@
+package com.agh.mallet.domain.user.user.control.exception;
+
+import com.agh.mallet.infrastructure.exception.ExceptionType;
+import com.agh.mallet.infrastructure.exception.MalletException;
+
+public class MalletUserException extends MalletException {
+    public MalletUserException(String message, ExceptionType type) {
+        super(message, type);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/ConfirmationTokenRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/ConfirmationTokenRepository.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/ConfirmationTokenRepository.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/ConfirmationTokenRepository.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,11 @@
+package com.agh.mallet.domain.user.user.control.repository;
+
+import com.agh.mallet.domain.user.user.entity.ConfirmationTokenJPAEntity;
+import org.springframework.data.repository.CrudRepository;
+
+import java.util.Optional;
+
+public interface ConfirmationTokenRepository extends CrudRepository<ConfirmationTokenJPAEntity, Long> {
+
+    Optional<ConfirmationTokenJPAEntity> findByToken(String token);
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/UserRepository.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/UserRepository.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/repository/UserRepository.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,33 @@
+package com.agh.mallet.domain.user.user.control.repository;
+
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+import java.util.Optional;
+
+@Repository
+public interface UserRepository extends JpaRepository<UserJPAEntity, Long>, JpaSpecificationExecutor<UserJPAEntity> {
+
+    Optional<UserJPAEntity> findByEmailIgnoreCase(String email);
+
+    long countAllByUsername(String username);
+
+    List<UserJPAEntity> findAllByUsernameContainingIgnoreCaseAndEnabled(String username, boolean enabled);
+
+    @Query("SELECT s FROM UserJPAEntity u INNER JOIN u.userSets s WHERE u.email = ?1")
+    Page<SetJPAEntity> findAllSetsByUserEmail(String email, Pageable pageable);
+
+    @Query("SELECT DISTINCT g FROM GroupJPAEntity g JOIN g.contributions c JOIN c.contributor u WHERE u.email = ?1")
+    Page<GroupJPAEntity> findAllGroupsByUserEmail(String email, Pageable pageable);
+
+    boolean existsByIdentifier(String identifier);
+
+}
\ No newline at end of file
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/ConfirmationTokenService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/ConfirmationTokenService.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/ConfirmationTokenService.java
new file mode 100644
--- /dev/null	(revision 061574aa3cd5eaf4032f64a8174a74993b5a1e06)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/ConfirmationTokenService.java	(revision 061574aa3cd5eaf4032f64a8174a74993b5a1e06)
@@ -0,0 +1,50 @@
+package com.agh.mallet.domain.user.user.control.service;
+
+import com.agh.mallet.domain.user.user.control.exception.MalletTokenException;
+import com.agh.mallet.domain.user.user.control.repository.ConfirmationTokenRepository;
+import com.agh.mallet.domain.user.user.control.repository.UserRepository;
+import com.agh.mallet.domain.user.user.entity.ConfirmationTokenJPAEntity;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import com.agh.mallet.infrastructure.exception.ExceptionType;
+import org.springframework.stereotype.Service;
+
+import java.time.LocalDateTime;
+import java.util.UUID;
+
+@Service
+public class ConfirmationTokenService {
+
+    public static final String TOKEN_NOT_FOUND_EXCEPTION_MSG = "Provided token was not found";
+
+    private final ConfirmationTokenRepository confirmationTokenRepository;
+    private final UserRepository userRepository;
+
+    public ConfirmationTokenService(ConfirmationTokenRepository confirmationTokenRepository, UserRepository userRepository) {
+        this.confirmationTokenRepository = confirmationTokenRepository;
+        this.userRepository = userRepository;
+    }
+
+    public ConfirmationTokenJPAEntity save(UserJPAEntity user) {
+        String token = UUID.randomUUID()
+                .toString();
+        LocalDateTime createdAt = LocalDateTime.now();
+
+        ConfirmationTokenJPAEntity tokenEntity = new ConfirmationTokenJPAEntity(token, createdAt, createdAt.plusHours(24), user);
+
+        return confirmationTokenRepository.save(tokenEntity);
+    }
+
+    public void confirmToken(String token) {
+        ConfirmationTokenJPAEntity foundToken = confirmationTokenRepository.findByToken(token)
+                .orElseThrow(() -> new MalletTokenException(TOKEN_NOT_FOUND_EXCEPTION_MSG, ExceptionType.NOT_FOUND));
+        UserJPAEntity userJPAEntity = foundToken.getUser();
+
+        userJPAEntity.setEnabled(true);
+        foundToken.setConfirmedAt(LocalDateTime.now());
+
+        confirmationTokenRepository.save(foundToken);
+        userRepository.save(userJPAEntity);
+
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/EmailService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/EmailService.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/EmailService.java
new file mode 100644
--- /dev/null	(revision af241833f45db6b1e1d9962d7b2b8705efb9751a)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/EmailService.java	(revision af241833f45db6b1e1d9962d7b2b8705efb9751a)
@@ -0,0 +1,42 @@
+package com.agh.mallet.domain.user.user.control.service;
+
+import com.agh.mallet.infrastructure.exception.ExceptionType;
+import com.agh.mallet.infrastructure.exception.MalletException;
+import jakarta.mail.MessagingException;
+import jakarta.mail.internet.MimeMessage;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.mail.javamail.JavaMailSender;
+import org.springframework.mail.javamail.MimeMessageHelper;
+import org.springframework.scheduling.annotation.Async;
+import org.springframework.stereotype.Service;
+
+@Service
+@Slf4j
+public class EmailService {
+
+    public static final String SENDING_EMAIL_ERROR_MSG = "Error occurred during sending email: ";
+    private final JavaMailSender mailSender;
+    @Value("${spring.mail.username}")
+    private String senderEmail;
+
+    public EmailService(JavaMailSender mailSender) {
+        this.mailSender = mailSender;
+    }
+
+    @Async
+    public void sendMail(String subject, String recipient, String content) {
+        try {
+            MimeMessage mimeMessage = mailSender.createMimeMessage();
+            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, "utf-8");
+            helper.setText(content, true);
+            helper.setTo(recipient);
+            helper.setSubject(subject);
+            helper.setFrom(senderEmail);
+            mailSender.send(mimeMessage);
+        } catch (MessagingException exception) {
+            throw new MalletException(SENDING_EMAIL_ERROR_MSG, ExceptionType.BAD_GATEWAY);
+        }
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserService.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserService.java
new file mode 100644
--- /dev/null	(revision 18bd65c3e7f7778ce71f3290b03e6141d62c4226)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserService.java	(revision 18bd65c3e7f7778ce71f3290b03e6141d62c4226)
@@ -0,0 +1,150 @@
+package com.agh.mallet.domain.user.user.control.service;
+
+import com.agh.api.UserDTO;
+import com.agh.api.UserDetailDTO;
+import com.agh.api.UserLogInDTO;
+import com.agh.api.UserRegistrationDTO;
+import com.agh.mallet.domain.group.control.ContributionRepository;
+import com.agh.mallet.domain.user.user.control.exception.MalletUserException;
+import com.agh.mallet.domain.user.user.control.repository.UserRepository;
+import com.agh.mallet.domain.user.user.control.utils.EmailTemplateProvider;
+import com.agh.mallet.domain.user.user.control.utils.UserValidator;
+import com.agh.mallet.domain.user.user.entity.ConfirmationTokenJPAEntity;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import com.agh.mallet.infrastructure.exception.ExceptionType;
+import com.agh.mallet.infrastructure.mapper.UserDTOMapper;
+import com.agh.mallet.infrastructure.mapper.UserInformationDTOMapper;
+import com.agh.mallet.infrastructure.utils.ObjectIdentifierProvider;
+import jakarta.persistence.LockModeType;
+import jakarta.transaction.Transactional;
+import lombok.SneakyThrows;
+import org.springframework.data.jpa.repository.Lock;
+import org.springframework.security.crypto.password.Pbkdf2PasswordEncoder;
+import org.springframework.stereotype.Service;
+
+import java.text.MessageFormat;
+import java.time.LocalDate;
+import java.util.Collections;
+import java.util.List;
+import java.util.Optional;
+import java.util.function.Consumer;
+import java.util.function.Supplier;
+
+@Service
+public class UserService  {
+
+    private static final String USER_ALREADY_EXISTS_ERROR_MSG = "User with provided email: {0} already exists";
+    private static final String USER_NOT_FOUND_ERROR_MSG = "User with provided email: {0} does not exist";
+
+    private final UserRepository userRepository;
+    private final UserValidator userValidator;
+    private final ConfirmationTokenService confirmationTokenService;
+    private final EmailService emailService;
+    private final Pbkdf2PasswordEncoder pbkdf2PasswordEncoder;
+    private final ObjectIdentifierProvider objectIdentifierProvider;
+    private final ContributionRepository contributionRepository;
+
+    public UserService(UserRepository userRepository, UserValidator userValidator, ConfirmationTokenService confirmationTokenService, EmailService emailService, Pbkdf2PasswordEncoder pbkdf2PasswordEncoder, ObjectIdentifierProvider objectIdentifierProvider, ContributionRepository contributionRepository) {
+        this.userRepository = userRepository;
+        this.userValidator = userValidator;
+        this.confirmationTokenService = confirmationTokenService;
+        this.emailService = emailService;
+        this.pbkdf2PasswordEncoder = pbkdf2PasswordEncoder;
+        this.objectIdentifierProvider = objectIdentifierProvider;
+        this.contributionRepository = contributionRepository;
+    }
+
+    @SneakyThrows
+    public void signUp(UserRegistrationDTO userInfo) {
+        String email = userInfo.email();
+        userValidator.validateEmail(email);
+
+        Optional<UserJPAEntity> userJPAEntity = userRepository.findByEmailIgnoreCase(email);
+        userJPAEntity.ifPresent(throwUserAlreadyExistsException());
+
+        UserJPAEntity user = mapToUserEntity(userInfo);
+        save(user);
+
+        ConfirmationTokenJPAEntity confirmationToken = confirmationTokenService.save(user);
+
+        String confirmationURL = "https://mallet.onrender.com" + "/user/registration/confirm?token=" + confirmationToken.getToken();
+
+        emailService.sendMail("Mallet account confirmation", email, EmailTemplateProvider.getEmailConfirmationTemplate(confirmationURL));
+    }
+
+    @Lock(LockModeType.WRITE)
+    private UserJPAEntity mapToUserEntity(UserRegistrationDTO userInfo) {
+        String encodedPassword = pbkdf2PasswordEncoder.encode(userInfo.password());
+        String username = userInfo.username();
+        LocalDate registrationDate = LocalDate.now();
+        String email = userInfo.email();
+        String identifier = objectIdentifierProvider.fromUsername(username);
+
+        return new UserJPAEntity(username, encodedPassword, registrationDate, email, identifier);
+    }
+
+    private Consumer<UserJPAEntity> throwUserAlreadyExistsException() {
+        return user -> {
+            String errorMsg = MessageFormat.format(USER_ALREADY_EXISTS_ERROR_MSG, user.getEmail());
+            throw new MalletUserException(errorMsg, ExceptionType.ALREADY_EXISTS);
+        };
+    }
+
+    public UserDetailDTO logIn(UserLogInDTO userInfo) {
+        String email = userInfo.email();
+        userValidator.validateEmail(email);
+
+        UserJPAEntity userEntity = getByEmail(email);
+
+        userValidator.validateUserLogIn(userEntity, userInfo.password());
+
+        return UserInformationDTOMapper.from(userEntity);
+    }
+
+    private Supplier<RuntimeException> throwUserNotFoundException(String email) {
+        return () -> {
+            String errorMsg = MessageFormat.format(USER_NOT_FOUND_ERROR_MSG, email);
+            throw new MalletUserException(errorMsg, ExceptionType.NOT_FOUND);
+        };
+    }
+
+    public UserJPAEntity getByEmail(String email) {
+        return userRepository.findByEmailIgnoreCase(email)
+                .orElseThrow(throwUserNotFoundException(email));
+    }
+
+    public UserJPAEntity save(UserJPAEntity userEntity) {
+        return userRepository.save(userEntity);
+    }
+
+    public List<UserDTO> get(String username) {
+        if (username.isEmpty()) {
+            return Collections.emptyList();
+        }
+
+        List<UserJPAEntity> users = userRepository.findAllByUsernameContainingIgnoreCaseAndEnabled(username, true);
+
+        return UserDTOMapper.from(users);
+    }
+
+    @Transactional
+    public void delete(long id, String email){
+        UserJPAEntity user = userRepository.findById(id)
+                .orElseThrow(throwUserNotFoundException(String.valueOf(id)));
+
+        if(!user.getEmail().equals(email)){
+            throw new MalletUserException("Cannot perform this operation", ExceptionType.FORBIDDEN);
+        }
+
+       long countOfAdminGroups = user.getUserGroups().stream()
+                .filter(s -> s.getAdmin().equals(user))
+                .count();
+
+        if(countOfAdminGroups > 0){
+            throw new MalletUserException("Cannot perform this operation.", ExceptionType.FORBIDDEN);
+        }
+
+        contributionRepository.deleteAllByContributor(user);
+        userRepository.delete(user);
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/EmailTemplateProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/EmailTemplateProvider.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/EmailTemplateProvider.java
new file mode 100644
--- /dev/null	(revision 8e3854cfcacd0858cf12d4ab9fd60d568bd66a93)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/EmailTemplateProvider.java	(revision 8e3854cfcacd0858cf12d4ab9fd60d568bd66a93)
@@ -0,0 +1,137 @@
+package com.agh.mallet.domain.user.user.control.utils;
+
+public class EmailTemplateProvider {
+
+    private EmailTemplateProvider() {}
+
+    public static String getEmailConfirmationTemplate(String confirmationLink) {
+        return "<!DOCTYPE html>\n" +
+                "<html lang=\"en\">\n" +
+                "<head>\n" +
+                "    <meta charset=\"UTF-8\">\n" +
+                "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n" +
+                "    <title>MALLet - Email Confirmation</title>\n" +
+                "    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Russo+One\">\n" +
+                "      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=REM\">\n" +
+                "    <style>\n" +
+                "        body {\n" +
+                "            font-family: \"REM\", sans-serif;\n" +
+                "            margin: 0;\n" +
+                "            padding: 0;\n" +
+                "            background-color: #e5f1f9;\n" +
+                "        }\n" +
+                "\n" +
+                "        .container {\n" +
+                "            width: 100%;\n" +
+                "            max-width: 600px;\n" +
+                "            margin: 0 auto;\n" +
+                "            background-color: #ffffff;\n" +
+                "            padding: 30px;\n" +
+                "            box-sizing: border-box;\n" +
+                "            border: 2px solid #2e4780;\n" +
+                "            border-radius: 10px;\n" +
+                "            margin-top: 30px;\n" +
+                "        }\n" +
+                "\n" +
+                "        h1 {\n" +
+                "      font-family: \"Russo One\", sans-serif;\n" +
+                "            color: #2e4780;\n" +
+                "      font-size:60px;\n" +
+                "            text-align: center;\n" +
+                "        }\n" +
+                "\n" +
+                "        p {\n" +
+                "            color: #5493d2;\n" +
+                "            text-align: center;\n" +
+                "        }\n" +
+                "\n" +
+                "        .button-container {\n" +
+                "            text-align: center;\n" +
+                "        }\n" +
+                "\n" +
+                "        .button {\n" +
+                "            display: inline-block;\n" +
+                "            padding: 20px 20px;\n" +
+                "            text-align: center;\n" +
+                "            text-decoration: none;\n" +
+                "            color: #ffffff;\n" +
+                "            background-color: #5493d2;\n" +
+                "            border-radius: 5px;\n" +
+                "            margin-top: 20px;\n" +
+                "        }\n" +
+                "\n" +
+                "        .alternate-link {\n" +
+                "            margin-top: 20px;\n" +
+                "            color: #2e4780;\n" +
+                "            text-decoration: underline;\n" +
+                "            display: block;\n" +
+                "            text-align: center;\n" +
+                "        }\n" +
+                "    </style>\n" +
+                "</head>\n" +
+                "<body>\n" +
+                "    <div class=\"container\">\n" +
+                "        <h1>MALLet</h1>\n" +
+                "        <p>Thank you for signing up to MALLet!</p>\n" +
+                "        <p>Please click the button below to confirm your email address.</p>\n" +
+                "        <div class=\"button-container\">\n" +
+                "            <a href=\"" +
+                confirmationLink + "\"" +
+                "class=\"button\">Confirm Email</a>\n" +
+                "</body>\n" +
+                "</html>\n";
+    }
+
+    public static String getEmailConfirmedTemplate() {
+        return "<!DOCTYPE html>\n" +
+                "<html lang=\"en\">\n" +
+                "<head>\n" +
+                "    <meta charset=\"UTF-8\">\n" +
+                "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n" +
+                "    <title>MALLet - Email Confirmation</title>\n" +
+                "    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Russo+One\">\n" +
+                "    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=REM\">\n" +
+                "    <style>\n" +
+                "        body {\n" +
+                "            font-family: \"REM\", sans-serif;\n" +
+                "            margin: 0;\n" +
+                "            padding: 0;\n" +
+                "            background-color: #e5f1f9;\n" +
+                "        }\n" +
+                "\n" +
+                "        .container {\n" +
+                "            width: 100%;\n" +
+                "            max-width: 600px;\n" +
+                "            margin: 0 auto;\n" +
+                "            background-color: #ffffff;\n" +
+                "            padding: 30px;\n" +
+                "            box-sizing: border-box;\n" +
+                "            border: 2px solid #2e4780;\n" +
+                "            border-radius: 10px;\n" +
+                "            margin-top: 30px;\n" +
+                "        }\n" +
+                "\n" +
+                "        h1 {\n" +
+                "            font-family: \"Russo One\", sans-serif;\n" +
+                "            color: #2e4780;\n" +
+                "            font-size: 60px;\n" +
+                "            text-align: center;\n" +
+                "        }\n" +
+                "\n" +
+                "        p {\n" +
+                "            color: #5493d2;\n" +
+                "      font-size:20px;\n" +
+                "            text-align: center;\n" +
+                "        }\n" +
+                "    </style>\n" +
+                "</head>\n" +
+                "<body>\n" +
+                "    <div class=\"container\">\n" +
+                "        <h1>MALLet</h1>\n" +
+                "      <p>Thank you for joining MALLet!</p>\n" +
+                "      <p>You can now start learning!</p>\n" +
+                "    </div>\n" +
+                "</body>\n" +
+                "</html>\n";
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/UserValidator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/UserValidator.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/UserValidator.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/utils/UserValidator.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,58 @@
+package com.agh.mallet.domain.user.user.control.utils;
+
+import com.agh.mallet.domain.user.user.control.exception.MalletUserException;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import com.agh.mallet.infrastructure.exception.ExceptionType;
+import org.springframework.security.crypto.password.Pbkdf2PasswordEncoder;
+import org.springframework.stereotype.Component;
+
+import java.text.MessageFormat;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+@Component
+public class UserValidator {
+
+    private static final String INVALID_EMAIL_ERROR_MSG = "Provided email: {0} is not valid";
+    private static final String USER_NOT_ENABLED_ERROR_MSG = "User with email: {0} is not enabled";
+    private static final String INCORRECT_PASSWORD_ERROR_MSG = "Provided password is incorrect";
+
+    private final Pbkdf2PasswordEncoder pbkdf2PasswordEncoder;
+
+    public UserValidator(Pbkdf2PasswordEncoder pbkdf2PasswordEncoder) {
+        this.pbkdf2PasswordEncoder = pbkdf2PasswordEncoder;
+    }
+
+    public void validateUserLogIn(UserJPAEntity user,
+                                  String providedPassword) {
+        validateActiveness(user);
+        validatePassword(user, providedPassword);
+    }
+
+    private void validatePassword(UserJPAEntity user, String providedPassword) {
+        if (!pbkdf2PasswordEncoder.matches(providedPassword, user.getPassword())) {
+            throw new MalletUserException(INCORRECT_PASSWORD_ERROR_MSG, ExceptionType.INVALID_ARGUMENT);
+        }
+    }
+
+    public void validateActiveness(UserJPAEntity user) {
+        if (Boolean.FALSE.equals(user.getEnabled())) {
+            String exceptionMessage = MessageFormat.format(USER_NOT_ENABLED_ERROR_MSG, user.getEmail());
+            throw new MalletUserException(exceptionMessage, ExceptionType.LOCKED);
+        }
+    }
+
+    public void validateEmail(String email) {
+        if (!isEmailValid(email)) {
+            String exceptionMessage = MessageFormat.format(INVALID_EMAIL_ERROR_MSG, email);
+            throw new MalletUserException(exceptionMessage, ExceptionType.INVALID_ARGUMENT);
+        }
+    }
+
+    private boolean isEmailValid(String email) {
+        Pattern pattern = Pattern.compile(".+@.+\\.[a-z]+");
+        Matcher matcher = pattern.matcher(email);
+        return matcher.matches();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/ConfirmationTokenJPAEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/ConfirmationTokenJPAEntity.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/ConfirmationTokenJPAEntity.java
new file mode 100644
--- /dev/null	(revision af241833f45db6b1e1d9962d7b2b8705efb9751a)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/ConfirmationTokenJPAEntity.java	(revision af241833f45db6b1e1d9962d7b2b8705efb9751a)
@@ -0,0 +1,58 @@
+package com.agh.mallet.domain.user.user.entity;
+
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.JoinColumn;
+import jakarta.persistence.ManyToOne;
+import jakarta.persistence.Table;
+
+import java.time.LocalDateTime;
+
+@Entity
+@Table(name = "CONFIRMATION_TOKEN")
+public class ConfirmationTokenJPAEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @Column(name = "TOKEN")
+    private String token;
+
+    @Column(name = "CREATED_AT")
+    private LocalDateTime createdAt;
+    @Column(name = "EXPIRES_AT")
+
+    private LocalDateTime expiresAt;
+    @Column(name = "CONFIRMED_AT")
+
+    private LocalDateTime confirmedAt;
+
+    @ManyToOne
+    @JoinColumn(name = "USER_ID")
+    private UserJPAEntity user;
+
+    public ConfirmationTokenJPAEntity() {}
+
+    public ConfirmationTokenJPAEntity(String token, LocalDateTime createdAt, LocalDateTime expiresAt, UserJPAEntity user) {
+        this.token = token;
+        this.createdAt = createdAt;
+        this.expiresAt = expiresAt;
+        this.user = user;
+    }
+
+    public void setConfirmedAt(LocalDateTime confirmedAt) {
+        this.confirmedAt = confirmedAt;
+    }
+
+    public UserJPAEntity getUser() {
+        return user;
+    }
+
+    public String getToken() {
+        return token;
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/UserJPAEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/UserJPAEntity.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/UserJPAEntity.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/entity/UserJPAEntity.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,181 @@
+package com.agh.mallet.domain.user.user.entity;
+
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+import jakarta.persistence.CascadeType;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.FetchType;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.JoinColumn;
+import jakarta.persistence.JoinTable;
+import jakarta.persistence.ManyToMany;
+import jakarta.persistence.OneToMany;
+import jakarta.persistence.Table;
+
+import java.time.LocalDate;
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Objects;
+import java.util.Set;
+
+@Entity
+@Table(name = "USER_APP")
+public class UserJPAEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @Column(name = "IDENTIFIER", nullable = false, unique = true)
+    private String identifier;
+
+    @Column(name = "USERNAME", nullable = false)
+    private String username;
+
+    @Column(name = "PASSWORD", nullable = false)
+    private String password;
+
+    @Column(name = "REGISTRATION_DATE", nullable = false)
+    private LocalDate registrationDate;
+    @Column(name = "EMAIL", nullable = false)
+    private String email;
+
+    @Column(name = "ENABLED")
+    private Boolean enabled = false;
+    @ManyToMany(fetch = FetchType.LAZY, cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH} )
+    @JoinTable(name = "USERS_KNOWN_TERMS",
+            joinColumns = @JoinColumn(name = "USER_ID"),
+            inverseJoinColumns = @JoinColumn(name = "KNOWN_TERM_ID"))
+    private Set<TermJPAEntity> knownTerms = new HashSet<>();
+
+    @ManyToMany(cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
+    @JoinTable(name = "USERS_GROUPS",
+            joinColumns = @JoinColumn(name = "USER_ID"),
+            inverseJoinColumns = @JoinColumn(name = "GROUP_ID"))
+    private List<GroupJPAEntity> userGroups = new ArrayList<>();
+
+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY, mappedBy = "creator")
+    private List<SetJPAEntity> userSets = new ArrayList<>();
+
+    public UserJPAEntity() {}
+
+    public UserJPAEntity(String username, String password, LocalDate registrationDate, String email, String identifier) {
+        this.username = username;
+        this.password = password;
+        this.registrationDate = registrationDate;
+        this.email = email;
+        this.identifier = identifier;
+    }
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+
+    public LocalDate getRegistrationDate() {
+        return registrationDate;
+    }
+
+    public void setRegistrationDate(LocalDate registrationDate) {
+        this.registrationDate = registrationDate;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    public Set<TermJPAEntity> getKnownTerms() {
+        return knownTerms;
+    }
+
+    public void setKnownTerms(Set<TermJPAEntity> knownTerms) {
+        this.knownTerms = knownTerms;
+    }
+
+    public List<GroupJPAEntity> getUserGroups() {
+        return userGroups;
+    }
+
+    public void setUserGroups(List<GroupJPAEntity> userGroups) {
+        this.userGroups = userGroups;
+    }
+
+    public void deleteUserGroup(GroupJPAEntity userGroup) {
+        getUserGroups().remove(userGroup);
+    }
+
+    public void addUserGroup(GroupJPAEntity userGroups) {
+        this.userGroups.add(userGroups);
+    }
+
+    public List<SetJPAEntity> getUserSets() {
+        return userSets;
+    }
+
+    public void setUserSets(List<SetJPAEntity> userSets) {
+        this.userSets = userSets;
+    }
+
+    public String getIdentifier() {
+        return identifier;
+    }
+
+    public void addUserSet(SetJPAEntity userSet) {
+        userSets.add(userSet);
+        userSet.setCreator(this);
+    }
+
+    public void removeUserSet(SetJPAEntity userSet) {
+        userSets.remove(userSet);
+        userSet.setCreator(null);
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        UserJPAEntity that = (UserJPAEntity) o;
+        return id.equals(that.id);
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(id);
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/configuration/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/configuration/SecurityConfig.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/configuration/SecurityConfig.java
new file mode 100644
--- /dev/null	(revision af241833f45db6b1e1d9962d7b2b8705efb9751a)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/configuration/SecurityConfig.java	(revision af241833f45db6b1e1d9962d7b2b8705efb9751a)
@@ -0,0 +1,74 @@
+package com.agh.mallet.infrastructure.configuration;
+
+import com.agh.mallet.domain.user.user.control.service.UserService;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
+import org.springframework.security.config.Customizer;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
+import org.springframework.security.config.annotation.web.configurers.AuthorizeHttpRequestsConfigurer;
+import org.springframework.security.core.userdetails.UserDetailsService;
+import org.springframework.security.crypto.password.Pbkdf2PasswordEncoder;
+import org.springframework.security.web.SecurityFilterChain;
+
+import java.util.Collections;
+
+@Configuration
+@EnableWebSecurity
+public class SecurityConfig {
+
+    private final UserService userService;
+
+    private final Pbkdf2PasswordEncoder passwordEncoder;
+
+    public SecurityConfig(UserService userService, Pbkdf2PasswordEncoder passwordEncoder) {
+        this.userService = userService;
+        this.passwordEncoder = passwordEncoder;
+    }
+
+    @Bean
+    public DaoAuthenticationProvider authenticationProvider() {
+        DaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();
+
+        authProvider.setUserDetailsService(userDetailsService());
+        authProvider.setPasswordEncoder(passwordEncoder);
+
+        return authProvider;
+    }
+
+    @Bean
+    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
+        return http.httpBasic(Customizer.withDefaults())
+                .authenticationProvider(authenticationProvider())
+                .csrf(AbstractHttpConfigurer::disable)
+                .authorizeHttpRequests(getRequestsCustomizer())
+                .formLogin(AbstractHttpConfigurer::disable)
+                .build();
+    }
+
+    private Customizer<AuthorizeHttpRequestsConfigurer<HttpSecurity>.AuthorizationManagerRequestMatcherRegistry> getRequestsCustomizer() {
+        return auth -> auth.requestMatchers("/user/login").permitAll()
+                .requestMatchers("/user/registration/**").permitAll()
+                .anyRequest().authenticated();
+    }
+
+    @Bean
+    public UserDetailsService userDetailsService() {
+        return username -> {
+            UserJPAEntity user = userService.getByEmail(username);
+            return new org.springframework.security.core.userdetails.User(
+                    user.getEmail(),
+                    user.getPassword(),
+                    user.getEnabled(),
+                    true,
+                    true,
+                    true,
+                    Collections.emptySet());
+        };
+    }
+
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletForbiddenException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletForbiddenException.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletForbiddenException.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletForbiddenException.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,7 @@
+package com.agh.mallet.infrastructure.exception;
+
+public class MalletForbiddenException extends MalletException{
+    public MalletForbiddenException(String message) {
+        super(message, ExceptionType.FORBIDDEN);
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalArgumentException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalArgumentException.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalArgumentException.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalArgumentException.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,9 @@
+package com.agh.mallet.infrastructure.exception;
+
+public class MalletIllegalArgumentException extends MalletException{
+
+    public MalletIllegalArgumentException(String message) {
+        super(message, ExceptionType.INVALID_ARGUMENT);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletNotFoundException.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletNotFoundException.java
new file mode 100644
--- /dev/null	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletNotFoundException.java	(revision a8389c1ae164ad00463dfb65b18142427d087b8c)
@@ -0,0 +1,8 @@
+package com.agh.mallet.infrastructure.exception;
+
+public class MalletNotFoundException extends MalletException{
+    public MalletNotFoundException(String message) {
+        super(message, ExceptionType.NOT_FOUND);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ContributionDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ContributionDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ContributionDTOMapper.java
new file mode 100644
--- /dev/null	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/ContributionDTOMapper.java	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
@@ -0,0 +1,33 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.ContributionDTO;
+import com.agh.api.PermissionType;
+import com.agh.api.UserDTO;
+import com.agh.mallet.domain.group.entity.ContributionJPAEntity;
+
+import java.util.Collection;
+import java.util.List;
+
+public class ContributionDTOMapper {
+
+    private ContributionDTOMapper() {}
+
+    public static List<ContributionDTO> from(Collection<ContributionJPAEntity> contributions) {
+        return contributions.stream()
+                .map(ContributionDTOMapper::from)
+                .toList();
+    }
+
+    public static ContributionDTO from(ContributionJPAEntity contribution) {
+        PermissionType setPermissionType = PermissionTypeMapper.from(contribution.getSetPermissionType());
+        PermissionType groupPermissionType = PermissionTypeMapper.from(contribution.getGroupPermissionType());
+        UserDTO user = UserDTOMapper.from(contribution.getContributor());
+
+        return ContributionDTO.builder()
+                .id(contribution.getId())
+                .setPermissionType(setPermissionType)
+                .groupPermissionType(groupPermissionType)
+                .contributor(user)
+                .build();
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/PermissionTypeMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/PermissionTypeMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/PermissionTypeMapper.java
new file mode 100644
--- /dev/null	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/PermissionTypeMapper.java	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
@@ -0,0 +1,27 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.mallet.domain.group.entity.PermissionType;
+import com.agh.mallet.infrastructure.exception.MalletIllegalArgumentException;
+
+import java.util.Arrays;
+
+public class PermissionTypeMapper {
+
+    private PermissionTypeMapper() {
+    }
+
+    public static com.agh.api.PermissionType from(PermissionType permissionType) {
+        return Arrays.stream(com.agh.api.PermissionType.values())
+                .filter(value -> value.name().equalsIgnoreCase(permissionType.name()))
+                .findAny()
+                .orElseThrow(() -> new MalletIllegalArgumentException("Unknown permission typ"));
+    }
+
+    public static PermissionType from(com.agh.api.PermissionType permissionType) {
+        return Arrays.stream(PermissionType.values())
+                .filter(value -> value.name().equalsIgnoreCase(permissionType.name()))
+                .findAny()
+                .orElseThrow(() -> new MalletIllegalArgumentException("Unknown permission typ"));
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetBasicsDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetBasicsDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetBasicsDTOMapper.java
new file mode 100644
--- /dev/null	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetBasicsDTOMapper.java	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
@@ -0,0 +1,31 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.SetInformationDTO;
+import com.agh.api.SetBasicDTO;
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+
+import java.util.Collection;
+import java.util.List;
+
+public class SetBasicsDTOMapper {
+
+    private SetBasicsDTOMapper() {}
+
+    public static SetBasicDTO from(Collection<SetJPAEntity> userSetEntities, String nextChunkUri) {
+        List<SetInformationDTO> userSets = SetInformationDTOMapper.from(userSetEntities);
+
+        return SetBasicDTO.builder()
+                .sets(userSets)
+                .nextChunkUri(nextChunkUri)
+                .build();
+    }
+
+    public static SetBasicDTO from(Collection<SetJPAEntity> userSetEntities) {
+        List<SetInformationDTO> userSets = SetInformationDTOMapper.from(userSetEntities);
+
+        return SetBasicDTO.builder()
+                .sets(userSets)
+                .build();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserDTOMapper.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/UserDTOMapper.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,27 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.UserDTO;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+
+import java.util.Collection;
+import java.util.List;
+
+public class UserDTOMapper {
+
+    private UserDTOMapper() {}
+
+    public static List<UserDTO> from(Collection<UserJPAEntity> user) {
+        return user.stream()
+                .map(UserDTOMapper::from)
+                .toList();
+    }
+
+    public static UserDTO from(UserJPAEntity user) {
+        return UserDTO.builder()
+                .id(user.getId())
+                .name(user.getUsername())
+                .identifier(user.getIdentifier())
+                .build();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/ObjectIdentifierProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/ObjectIdentifierProvider.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/ObjectIdentifierProvider.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/ObjectIdentifierProvider.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,55 @@
+package com.agh.mallet.infrastructure.utils;
+
+import com.agh.mallet.domain.group.control.GroupRepository;
+import com.agh.mallet.domain.set.control.repository.SetRepository;
+import com.agh.mallet.domain.user.user.control.repository.UserRepository;
+import org.springframework.stereotype.Component;
+
+@Component
+public class ObjectIdentifierProvider {
+
+    private static final String HASHTAG = "#";
+    private final UserRepository userRepository;
+    private final GroupRepository groupRepository;
+    private final SetRepository setRepository;
+
+    public ObjectIdentifierProvider(UserRepository userRepository, GroupRepository groupRepository, SetRepository setRepository) {
+        this.userRepository = userRepository;
+        this.groupRepository = groupRepository;
+        this.setRepository = setRepository;
+    }
+
+    public String fromUsername(String username){
+        long userCount = userRepository.countAllByUsername(username);
+
+        String identifier = trimWhitespaces(username + HASHTAG + userCount);
+        if (userRepository.existsByIdentifier(identifier)) {
+            return trimWhitespaces(username + HASHTAG + userCount + 1);
+        }
+        return identifier;
+    }
+
+    public String fromGroupName(String groupName) {
+        long userCount = groupRepository.countAllByName(groupName);
+
+        String identifier = trimWhitespaces(groupName + HASHTAG + userCount);
+        if (groupRepository.existsByIdentifier(identifier)) {
+            return trimWhitespaces(groupName + HASHTAG + userCount + 1);
+        }
+        return identifier;
+    }
+
+    public String fromSetName(String setName) {
+        long userCount = setRepository.countAllByName(setName);
+
+        String identifier = trimWhitespaces(setName + HASHTAG + userCount);
+        if (setRepository.existsByIdentifier(identifier)) {
+            return trimWhitespaces(setName + HASHTAG + userCount + 1);
+        }
+        return identifier;
+    }
+
+    private String trimWhitespaces(String value) {
+        return value.replaceAll("\\s", "");
+    }
+}
Index: mallet-api/src/main/java/com/agh/api/GroupContributionDeleteDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupContributionDeleteDTO.java b/mallet-api/src/main/java/com/agh/api/GroupContributionDeleteDTO.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-api/src/main/java/com/agh/api/GroupContributionDeleteDTO.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,15 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.Set;
+
+@Builder
+public record GroupContributionDeleteDTO (
+        @NonNull
+        Long groupId,
+        @NonNull
+        Set<Long> contributionsToDeleteIds
+){
+}
Index: mallet-api/src/main/java/com/agh/api/GroupCreateDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupCreateDTO.java b/mallet-api/src/main/java/com/agh/api/GroupCreateDTO.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-api/src/main/java/com/agh/api/GroupCreateDTO.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,18 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.Collections;
+import java.util.List;
+import java.util.Objects;
+
+@Builder
+public record GroupCreateDTO(
+        @NonNull
+        String name,
+        @NonNull
+        List<ContributionDTO> contributions
+) {
+
+}
\ No newline at end of file
Index: mallet-api/src/main/java/com/agh/api/GroupUpdateAdminDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupUpdateAdminDTO.java b/mallet-api/src/main/java/com/agh/api/GroupUpdateAdminDTO.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-api/src/main/java/com/agh/api/GroupUpdateAdminDTO.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,13 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record GroupUpdateAdminDTO(
+        @NonNull
+        Long groupId,
+        @NonNull
+        Long newAdminId
+) {
+}
Index: mallet-api/src/main/java/com/agh/api/GroupUpdateDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupUpdateDTO.java b/mallet-api/src/main/java/com/agh/api/GroupUpdateDTO.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-api/src/main/java/com/agh/api/GroupUpdateDTO.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,20 @@
+package com.agh.api;
+
+
+import lombok.Builder;
+import lombok.NonNull;
+import lombok.Singular;
+
+import java.util.Collections;
+import java.util.List;
+import java.util.Objects;
+
+@Builder
+public record GroupUpdateDTO(
+        @NonNull
+        Long id,
+        String name,
+        @NonNull
+        List<ContributionDTO> contributions
+) {
+}
Index: mallet-api/src/main/java/com/agh/api/Language.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/Language.java b/mallet-api/src/main/java/com/agh/api/Language.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-api/src/main/java/com/agh/api/Language.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,5 @@
+package com.agh.api;
+
+public enum Language {
+    PL, EN
+}
Index: mallet-api/src/main/java/com/agh/api/SetDetailDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/SetDetailDTO.java b/mallet-api/src/main/java/com/agh/api/SetDetailDTO.java
new file mode 100644
--- /dev/null	(revision 0374815327899d7e6c3f41f4a2eda123c5bc5495)
+++ b/mallet-api/src/main/java/com/agh/api/SetDetailDTO.java	(revision 0374815327899d7e6c3f41f4a2eda123c5bc5495)
@@ -0,0 +1,18 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.List;
+
+@Builder
+public record SetDetailDTO(
+        @NonNull
+        Long id,
+        String name,
+        String description,
+        @NonNull
+        List<TermDTO> terms,
+        String nextChunkUri
+) {
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalStateException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalStateException.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalStateException.java
new file mode 100644
--- /dev/null	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/exception/MalletIllegalStateException.java	(revision 16f101d1646e66b83a816f2fd29e3b67a8869d69)
@@ -0,0 +1,7 @@
+package com.agh.mallet.infrastructure.exception;
+
+public class MalletIllegalStateException extends MalletException{
+    public MalletIllegalStateException(String message, ExceptionType type) {
+        super(message, type);
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupDTOMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupDTOMapper.java
new file mode 100644
--- /dev/null	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupDTOMapper.java	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
@@ -0,0 +1,26 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.ContributionDTO;
+import com.agh.api.GroupDTO;
+import com.agh.api.SetInformationDTO;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+
+import java.util.List;
+
+public class GroupDTOMapper {
+
+    private GroupDTOMapper() {}
+
+    public static GroupDTO from(GroupJPAEntity groupJPAEntity){
+        List<ContributionDTO> contributions = ContributionDTOMapper.from(groupJPAEntity.getContributions());
+        List<SetInformationDTO> sets = SetInformationDTOMapper.from(groupJPAEntity.getSets());
+
+        return GroupDTO.builder()
+                .id(groupJPAEntity.getId())
+                .name(groupJPAEntity.getName())
+                .contributions(contributions)
+                .sets(sets)
+                .build();
+    }
+
+}
Index: mallet-api/src/main/java/com/agh/api/GroupSetCreateDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupSetCreateDTO.java b/mallet-api/src/main/java/com/agh/api/GroupSetCreateDTO.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-api/src/main/java/com/agh/api/GroupSetCreateDTO.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,14 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record GroupSetCreateDTO(
+
+        @NonNull
+        Long groupId,
+        @NonNull
+        SetCreateDTO set
+) {
+}
Index: mallet-api/src/main/java/com/agh/api/GroupSetDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupSetDTO.java b/mallet-api/src/main/java/com/agh/api/GroupSetDTO.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-api/src/main/java/com/agh/api/GroupSetDTO.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,13 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record GroupSetDTO (
+        @NonNull
+        Long groupId,
+        @NonNull
+        Long setId
+) {
+}
Index: mallet-api/src/main/java/com/agh/api/SetCreateDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/SetCreateDTO.java b/mallet-api/src/main/java/com/agh/api/SetCreateDTO.java
new file mode 100644
--- /dev/null	(revision eb55773611c7731f8d5b384d68bc86cbc62a7a56)
+++ b/mallet-api/src/main/java/com/agh/api/SetCreateDTO.java	(revision eb55773611c7731f8d5b384d68bc86cbc62a7a56)
@@ -0,0 +1,17 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.List;
+
+@Builder
+public record SetCreateDTO(
+        @NonNull
+        String topic,
+        String description,
+        @NonNull
+        List<Long> existingTermIds,
+        List<TermCreateDTO> termsToCreate
+) {
+}
Index: mallet-api/src/main/java/com/agh/api/TermBasicListDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/TermBasicListDTO.java b/mallet-api/src/main/java/com/agh/api/TermBasicListDTO.java
new file mode 100644
--- /dev/null	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
+++ b/mallet-api/src/main/java/com/agh/api/TermBasicListDTO.java	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
@@ -0,0 +1,16 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.List;
+
+@Builder
+public record TermBasicListDTO(
+
+        @NonNull
+        List<TermDTO> terms,
+        String nextChunkUri
+
+) {
+}
Index: mallet-api/src/main/java/com/agh/api/TermCreateDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/TermCreateDTO.java b/mallet-api/src/main/java/com/agh/api/TermCreateDTO.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-api/src/main/java/com/agh/api/TermCreateDTO.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,15 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record TermCreateDTO (
+        @NonNull
+        String term,
+        String definition,
+        @NonNull
+        Language language,
+        TermCreateDTO translation
+) {
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/term/boundary/TermResource.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/term/boundary/TermResource.java b/mallet-core/src/main/java/com/agh/mallet/domain/term/boundary/TermResource.java
new file mode 100644
--- /dev/null	(revision 2b19b3807c5928d5c6480d6be870fd6298a0d03b)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/term/boundary/TermResource.java	(revision 2b19b3807c5928d5c6480d6be870fd6298a0d03b)
@@ -0,0 +1,40 @@
+package com.agh.mallet.domain.term.boundary;
+
+import com.agh.api.TermBasicListDTO;
+import com.agh.mallet.domain.term.control.service.TermService;
+import io.swagger.v3.oas.annotations.Hidden;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.tags.Tag;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.RestController;
+
+@Tag(name = "Term Resource")
+@RestController
+@RequestMapping(path = "term", produces = MediaType.APPLICATION_JSON_VALUE)
+public class TermResource {
+
+    private final TermService termService;
+
+    public TermResource(TermService termService) {
+        this.termService = termService;
+    }
+
+    @Operation(
+            summary = "Get all terms by term name "
+    )
+    @GetMapping
+    @Hidden
+    public ResponseEntity<TermBasicListDTO> get(@RequestParam("term") String term,
+                                                @RequestParam(name = "startPosition", defaultValue = "0") int startPosition,
+                                                @RequestParam(name = "limit", defaultValue = "10") int limit) {
+        TermBasicListDTO termBasicListDTO = termService.getByTerm(term, startPosition, limit);
+
+        return new ResponseEntity<>(termBasicListDTO, HttpStatus.OK);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/term/control/repository/TermRepository.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/term/control/repository/TermRepository.java b/mallet-core/src/main/java/com/agh/mallet/domain/term/control/repository/TermRepository.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/term/control/repository/TermRepository.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,14 @@
+package com.agh.mallet.domain.term.control.repository;
+
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+
+@Repository
+public interface TermRepository extends JpaRepository<TermJPAEntity, Long> {
+
+    Page<TermJPAEntity> findAllByTerm(String term, Pageable pageable);
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/term/control/service/TermService.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/term/control/service/TermService.java b/mallet-core/src/main/java/com/agh/mallet/domain/term/control/service/TermService.java
new file mode 100644
--- /dev/null	(revision 1369c4316cccc0f2854cdbc5cc957f215a0a7406)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/term/control/service/TermService.java	(revision 1369c4316cccc0f2854cdbc5cc957f215a0a7406)
@@ -0,0 +1,37 @@
+package com.agh.mallet.domain.term.control.service;
+
+import com.agh.api.TermBasicListDTO;
+import com.agh.mallet.domain.term.control.repository.TermRepository;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.infrastructure.mapper.TermBasicListDTOMapper;
+import com.agh.mallet.infrastructure.utils.NextChunkRebuilder;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+@Service
+public class TermService {
+
+    private final TermRepository termRepository;
+    private final NextChunkRebuilder nextChunkRebuilder;
+
+    public TermService(TermRepository termRepository, NextChunkRebuilder nextChunkRebuilder) {
+        this.termRepository = termRepository;
+        this.nextChunkRebuilder = nextChunkRebuilder;
+    }
+
+    public TermBasicListDTO getByTerm(String term,
+                                      int startPosition,
+                                      int limit) {
+        PageRequest pageRequest = PageRequest.of(startPosition,  limit);
+
+        List<TermJPAEntity> terms = termRepository.findAllByTerm(term, pageRequest)
+                .getContent();
+
+        String nextChunkUri = nextChunkRebuilder.rebuild(terms, startPosition, limit);
+
+        return TermBasicListDTOMapper.from(terms, nextChunkUri);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/term/entity/Language.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/term/entity/Language.java b/mallet-core/src/main/java/com/agh/mallet/domain/term/entity/Language.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/term/entity/Language.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,19 @@
+package com.agh.mallet.domain.term.entity;
+
+import com.agh.mallet.infrastructure.exception.MalletIllegalArgumentException;
+
+import java.util.Arrays;
+
+public enum Language {
+
+    EN,
+    PL;
+
+    public static Language from(String language) {
+        return Arrays.stream(values())
+                .filter(value -> value.name().equalsIgnoreCase(language))
+                .findAny()
+                .orElseThrow(() -> new MalletIllegalArgumentException("Provided language is not supported"));
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/term/entity/TermJPAEntity.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/term/entity/TermJPAEntity.java b/mallet-core/src/main/java/com/agh/mallet/domain/term/entity/TermJPAEntity.java
new file mode 100644
--- /dev/null	(revision c83ba68fd9751ef11b9adfb87521cbe3e1638ae0)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/term/entity/TermJPAEntity.java	(revision c83ba68fd9751ef11b9adfb87521cbe3e1638ae0)
@@ -0,0 +1,118 @@
+package com.agh.mallet.domain.term.entity;
+
+import jakarta.persistence.CascadeType;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.EnumType;
+import jakarta.persistence.Enumerated;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.OneToOne;
+import jakarta.persistence.Table;
+import org.apache.commons.lang3.builder.EqualsBuilder;
+import org.apache.commons.lang3.builder.HashCodeBuilder;
+
+@Entity
+@Table(name = "TERM")
+public class TermJPAEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+    @Column(name = "TERM", nullable = false)
+    private String term;
+    @Enumerated(EnumType.STRING)
+    @Column(name = "LANGUAGE", nullable = false)
+    private Language language;
+
+    @Column(name = "DEFINITION")
+    private String definition;
+
+    @Column(name = "TERM_DICTIONARY")
+    private boolean isTermDictionary;
+
+    @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true)
+    private TermJPAEntity translation;
+
+    public TermJPAEntity() {}
+
+    public TermJPAEntity(String term, Language language, String definition, TermJPAEntity translation) {
+        this.term = term;
+        this.language = language;
+        this.definition = definition;
+        this.translation = translation;
+    }
+
+    public TermJPAEntity(String term, Language language, String definition) {
+        this.term = term;
+        this.language = language;
+        this.definition = definition;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public void setTerm(String term) {
+        this.term = term;
+    }
+
+    public void setLanguage(Language language) {
+        this.language = language;
+    }
+
+
+    public Long getId() {
+        return id;
+    }
+
+    public String getTerm() {
+        return term;
+    }
+
+    public Language getLanguage() {
+        return language;
+    }
+
+    public String getDefinition() {
+        return definition;
+    }
+
+    public boolean isTermDictionary() {
+        return isTermDictionary;
+    }
+
+    public TermJPAEntity getTranslation() {
+        return translation;
+    }
+
+    //TODO DO POPRAWY, JAK U VLADA ZROBIC
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+
+        if (o == null || getClass() != o.getClass()) return false;
+
+        TermJPAEntity that = (TermJPAEntity) o;
+
+        return new EqualsBuilder().append(term, that.term).append(language, that.language).append(definition, that.definition).append(translation, that.translation).isEquals();
+    }
+
+    @Override
+    public int hashCode() {
+        return new HashCodeBuilder(17, 37).append(term).append(language).append(definition).append(translation).toHashCode();
+    }
+
+    public void setDefinition(String definition) {
+        this.definition = definition;
+    }
+
+    public void setTermDictionary(boolean termDictionary) {
+        isTermDictionary = termDictionary;
+    }
+
+    public void setTranslation(TermJPAEntity translation) {
+        this.translation = translation;
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicDTOMapper.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicDTOMapper.java
new file mode 100644
--- /dev/null	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicDTOMapper.java	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
@@ -0,0 +1,40 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.TermDTO;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.infrastructure.utils.LanguageConverter;
+
+import java.util.Collection;
+import java.util.List;
+import java.util.Optional;
+
+public class TermBasicDTOMapper {
+
+    private TermBasicDTOMapper() {
+    }
+
+    public static List<TermDTO> from(Collection<TermJPAEntity> termEntities) {
+        return termEntities.stream()
+                .map(TermBasicDTOMapper::from)
+                .filter(Optional::isPresent)
+                .map(Optional::get)
+                .toList();
+    }
+
+    private static Optional<TermDTO> from(TermJPAEntity termEntity) {
+        return Optional.ofNullable(termEntity.getTranslation())
+                .flatMap(TermBasicDTOMapper::from)
+                .map(translation -> TermBasicDTOMapper.from(termEntity, translation));
+    }
+
+    private static TermDTO from(TermJPAEntity termEntity, TermDTO translation) {
+        return TermDTO.builder()
+                .id(termEntity.getId())
+                .term(termEntity.getTerm())
+                .definition(termEntity.getDefinition())
+                .language(LanguageConverter.from(termEntity.getLanguage()))
+                .translation(translation)
+                .build();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicListDTOMapper.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicListDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicListDTOMapper.java
new file mode 100644
--- /dev/null	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/TermBasicListDTOMapper.java	(revision 495ce0a691cf8cf49358b2280c15c0a4418bf68d)
@@ -0,0 +1,22 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.TermDTO;
+import com.agh.api.TermBasicListDTO;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+
+import java.util.List;
+
+public class TermBasicListDTOMapper {
+
+    private TermBasicListDTOMapper() {}
+
+    public static TermBasicListDTO from(List<TermJPAEntity> termEntities, String nextChunkUri){
+        List<TermDTO> terms = TermBasicDTOMapper.from(termEntities);
+
+        return TermBasicListDTO.builder()
+                .terms(terms)
+                .nextChunkUri(nextChunkUri)
+                .build();
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/LanguageConverter.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/LanguageConverter.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/LanguageConverter.java
new file mode 100644
--- /dev/null	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/utils/LanguageConverter.java	(revision d59aacd6b3856b82dda2c49b8be05f3fddaad950)
@@ -0,0 +1,19 @@
+package com.agh.mallet.infrastructure.utils;
+
+import com.agh.api.Language;
+import com.agh.mallet.infrastructure.exception.MalletIllegalArgumentException;
+
+import java.util.Arrays;
+
+public class LanguageConverter {
+
+    private LanguageConverter() {}
+
+    public static Language from(com.agh.mallet.domain.term.entity.Language language) {
+        return Arrays.stream(Language.values())
+                .filter(value -> value.name().equalsIgnoreCase(language.name()))
+                .findAny()
+                .orElseThrow(() -> new MalletIllegalArgumentException("Provided language is not supported"));
+    }
+
+}
Index: mallet-api/src/main/java/com/agh/api/GroupBasicDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupBasicDTO.java b/mallet-api/src/main/java/com/agh/api/GroupBasicDTO.java
new file mode 100644
--- /dev/null	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
+++ b/mallet-api/src/main/java/com/agh/api/GroupBasicDTO.java	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
@@ -0,0 +1,13 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.List;
+
+@Builder
+public record GroupBasicDTO(
+        @NonNull
+        List<GroupBasicInformationDTO> groups,
+        String nextChunkUri) {
+}
Index: mallet-api/src/main/java/com/agh/api/GroupBasicInformationDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/GroupBasicInformationDTO.java b/mallet-api/src/main/java/com/agh/api/GroupBasicInformationDTO.java
new file mode 100644
--- /dev/null	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
+++ b/mallet-api/src/main/java/com/agh/api/GroupBasicInformationDTO.java	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
@@ -0,0 +1,19 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+@Builder
+public record GroupBasicInformationDTO(
+
+        @NonNull
+        Long id,
+        @NonNull
+        String name,
+        @NonNull
+        String identifier,
+        @NonNull
+        Integer numberOfSets,
+        @NonNull
+        Integer numberOfMembers) {
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/boundary/GroupResource.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/boundary/GroupResource.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/boundary/GroupResource.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/boundary/GroupResource.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,145 @@
+package com.agh.mallet.domain.group.boundary;
+
+import com.agh.api.GroupContributionDeleteDTO;
+import com.agh.api.GroupCreateDTO;
+import com.agh.api.GroupDTO;
+import com.agh.api.GroupSetCreateDTO;
+import com.agh.api.GroupSetDTO;
+import com.agh.api.GroupUpdateAdminDTO;
+import com.agh.api.GroupUpdateDTO;
+import com.agh.mallet.domain.group.control.GroupService;
+import io.swagger.v3.oas.annotations.Hidden;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.tags.Tag;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.DeleteMapping;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.PutMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.security.Principal;
+
+@Tag(name = "Group Resource")
+@RestController
+@RequestMapping(path = "group", produces = MediaType.APPLICATION_JSON_VALUE)
+public class GroupResource {
+
+    private final GroupService groupService;
+
+    public GroupResource(GroupService groupService) {
+        this.groupService = groupService;
+    }
+
+    @Operation(
+            summary = "Get group",
+            description = "Get group providing id"
+    )
+    @GetMapping
+    public ResponseEntity<GroupDTO> get(@RequestParam("id") long id) {
+        GroupDTO groupDTO = groupService.get(id);
+
+        return new ResponseEntity<>(groupDTO, HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Create group"
+    )
+    @PostMapping
+    public ResponseEntity<Long> create(@RequestBody GroupCreateDTO groupCreateDTO, Principal principal) {
+        Long groupId = groupService.create(groupCreateDTO, principal.getName());
+
+        return new ResponseEntity<>(groupId, HttpStatus.OK);
+    }
+
+    @Operation(
+            summary = "Update group's contributions",
+            description = "Update group's contributions. Only admin (owner) of the group and contributor with GROUP_READ_WRITE permission can perform this operation"
+
+    )
+    @PutMapping(path = "/contribution")
+    public ResponseEntity<Object> updateContributions(@RequestBody GroupUpdateDTO groupUpdateDTO, Principal principal) {
+        groupService.updateContributions(groupUpdateDTO, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+
+    }
+
+    @Operation(
+            summary = "Delete group's contributions",
+            description = "Delete group's contributions providing contributor ids. Only admin (owner) of the group can perform this operation"
+    )
+    @PutMapping(path = "/contribution/delete")
+    public ResponseEntity<Object> deleteContributions(@RequestBody GroupContributionDeleteDTO contributionDeleteDTO, Principal principal) {
+        groupService.deleteContributions(contributionDeleteDTO, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+
+    }
+
+    @Operation(
+            summary = "Delete group",
+            description = "Delete group providing groupId. Only admin (owner) of the group can perform this operation"
+    )
+    @DeleteMapping
+    public ResponseEntity<Object> delete(@RequestParam("id") long groupId, Principal principal) {
+        groupService.delete(groupId, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+
+    }
+
+    @Operation(
+            summary = "Update group admin",
+            description = "Update group admin. Only admin (owner) of the group can perform this operation"
+    )
+    @PutMapping(path = "/admin")
+    @Hidden
+    public ResponseEntity<Object> updateGroupAdmin(@RequestBody GroupUpdateAdminDTO groupUpdateAdminDTO, Principal principal) {
+        groupService.updateAdmin(groupUpdateAdminDTO, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+
+    }
+
+    @Operation(
+            summary = "Add set to group",
+            description = "Add set to group. Only user with set READ_WRITE permission can perform this operation"
+    )
+    @PutMapping(path = "/set")
+    public ResponseEntity<Object> addSet(@RequestBody GroupSetDTO groupSetDTO, Principal principal) {
+        groupService.addSet(groupSetDTO, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+
+    }
+
+    @Operation(
+            summary = "Remove set from group",
+            description = "Remove set from group. Only user with set READ_WRITE permission can perform this operation"
+    )
+    @DeleteMapping(path = "/set")
+    public ResponseEntity<Object> removeSet(@RequestBody GroupSetDTO groupSetDTO, Principal principal) {
+        groupService.removeSet(groupSetDTO, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+
+    }
+
+    @Operation(
+            summary = "Create set group",
+            description = "Create set group. Only user with set READ_WRITE permission can perform this operation"
+    )
+    @PostMapping(path = "/set")
+    public ResponseEntity<Object> createSet(@RequestBody GroupSetCreateDTO groupSetCreateDTO, Principal principal) {
+        groupService.createSet(groupSetCreateDTO, principal.getName());
+
+        return new ResponseEntity<>(HttpStatus.OK);
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionRepository.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionRepository.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionRepository.java
new file mode 100644
--- /dev/null	(revision a90ea65f6f5ee6967991b2c1f8950d38bd676d52)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionRepository.java	(revision a90ea65f6f5ee6967991b2c1f8950d38bd676d52)
@@ -0,0 +1,10 @@
+package com.agh.mallet.domain.group.control;
+
+import com.agh.mallet.domain.group.entity.ContributionJPAEntity;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface ContributionRepository extends JpaRepository<ContributionJPAEntity, Long> {
+
+    void deleteAllByContributor(UserJPAEntity contributor);
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionService.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionService.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionService.java
new file mode 100644
--- /dev/null	(revision c83ba68fd9751ef11b9adfb87521cbe3e1638ae0)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/ContributionService.java	(revision c83ba68fd9751ef11b9adfb87521cbe3e1638ae0)
@@ -0,0 +1,38 @@
+package com.agh.mallet.domain.group.control;
+
+import com.agh.mallet.domain.group.entity.ContributionJPAEntity;
+import com.agh.mallet.infrastructure.exception.MalletNotFoundException;
+import org.springframework.stereotype.Service;
+
+import java.text.MessageFormat;
+import java.util.Collection;
+import java.util.List;
+import java.util.function.Supplier;
+
+@Service
+public class ContributionService {
+
+    public static final String CONTRIBUTION_NOT_FOUND_ERROR_MSG = "Contribution with id: {0} was not found";
+    private final ContributionRepository contributionRepository;
+
+    public ContributionService(ContributionRepository contributionRepository) {
+        this.contributionRepository = contributionRepository;
+    }
+
+    public ContributionJPAEntity getById(Long id) {
+        return contributionRepository.findById(id)
+                .orElseThrow(supplyContributionNotFoundException(id));
+    }
+
+    public List<ContributionJPAEntity> getByIds(Collection<Long> ids) {
+        return contributionRepository.findAllById(ids);
+    }
+
+    private Supplier<MalletNotFoundException> supplyContributionNotFoundException(Long id) {
+        return () -> {
+            String message = MessageFormat.format(CONTRIBUTION_NOT_FOUND_ERROR_MSG, id);
+            return new MalletNotFoundException(message);
+        };
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupRepository.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupRepository.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupRepository.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupRepository.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,12 @@
+package com.agh.mallet.domain.group.control;
+
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface GroupRepository extends JpaRepository<GroupJPAEntity, Long> {
+
+    long countAllByName(String name);
+
+    boolean existsByIdentifier(String identifier);
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupService.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupService.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupService.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/GroupService.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,338 @@
+package com.agh.mallet.domain.group.control;
+
+import com.agh.api.ContributionDTO;
+import com.agh.api.GroupContributionDeleteDTO;
+import com.agh.api.GroupCreateDTO;
+import com.agh.api.GroupDTO;
+import com.agh.api.GroupSetCreateDTO;
+import com.agh.api.GroupSetDTO;
+import com.agh.api.GroupUpdateAdminDTO;
+import com.agh.api.GroupUpdateDTO;
+import com.agh.api.SetCreateDTO;
+import com.agh.api.TermCreateDTO;
+import com.agh.api.UserDTO;
+import com.agh.mallet.domain.group.entity.ContributionJPAEntity;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+import com.agh.mallet.domain.group.entity.PermissionType;
+import com.agh.mallet.domain.set.control.service.SetService;
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+import com.agh.mallet.domain.term.control.repository.TermRepository;
+import com.agh.mallet.domain.term.entity.Language;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.domain.user.user.control.repository.UserRepository;
+import com.agh.mallet.domain.user.user.control.service.UserService;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import com.agh.mallet.infrastructure.exception.MalletNotFoundException;
+import com.agh.mallet.infrastructure.mapper.GroupDTOMapper;
+import com.agh.mallet.infrastructure.mapper.PermissionTypeMapper;
+import com.agh.mallet.infrastructure.utils.ObjectIdentifierProvider;
+import jakarta.persistence.LockModeType;
+import jakarta.transaction.Transactional;
+import org.springframework.data.jpa.repository.Lock;
+import org.springframework.stereotype.Service;
+
+import java.text.MessageFormat;
+import java.util.Collection;
+import java.util.List;
+import java.util.Map;
+import java.util.Objects;
+import java.util.Optional;
+import java.util.Set;
+import java.util.function.Function;
+import java.util.function.Predicate;
+import java.util.function.Supplier;
+import java.util.stream.Collectors;
+import java.util.stream.Stream;
+
+@Service
+public class GroupService {
+
+    private static final String INSUFFICIENT_PERMISSION_PREFIX_MSG = "Insufficient permission to ";
+    private static final String PERMISSION_EDIT_GROUP_ERROR_MSG = INSUFFICIENT_PERMISSION_PREFIX_MSG + "edit group";
+    private static final String PERMISSION_REMOVE_GROUP_ERROR_MSG = INSUFFICIENT_PERMISSION_PREFIX_MSG + "remove group";
+    private static final String PERMISSION_CHANGE_ADMIN_ERROR_MSG = INSUFFICIENT_PERMISSION_PREFIX_MSG + "change admin";
+    private static final String PERMISSION_ADD_SET_ERROR_MSG = INSUFFICIENT_PERMISSION_PREFIX_MSG + "add set to group";
+    private static final String PERMISSION_REMOVE_SET_ERROR_MSG = INSUFFICIENT_PERMISSION_PREFIX_MSG + "remove set from group";
+    private static final String GROUP_NOT_FOUND_ERROR_MSG = "Group with id: {0} was not found";
+    private static final String NEW_ADMIN_NOT_FOUND_IN_CONTRIBUTORS_EXCEPTION_MSG = "New admin id: {0} was not found in group contributors";
+
+    private final UserService userService;
+    private final UserRepository userRepository;
+    private final GroupRepository groupRepository;
+    private final ObjectIdentifierProvider objectIdentifierProvider;
+    private final ContributionService contributionService;
+    private final SetService setService;
+    private final TermRepository termRepository;
+    private final ContributionRepository contributionRepository;
+
+    public GroupService(UserService userService,
+                        UserRepository userRepository,
+                        GroupRepository groupRepository,
+                        ObjectIdentifierProvider objectIdentifierProvider,
+                        ContributionService contributionService,
+                        TermRepository termRepository,
+                        SetService setService,
+                        ContributionRepository contributionRepository) {
+        this.userService = userService;
+        this.userRepository = userRepository;
+        this.groupRepository = groupRepository;
+        this.objectIdentifierProvider = objectIdentifierProvider;
+        this.contributionService = contributionService;
+        this.termRepository = termRepository;
+        this.setService = setService;
+        this.contributionRepository = contributionRepository;
+    }
+
+    public GroupDTO get(long id) {
+        GroupJPAEntity groupEntity = getById(id);
+
+        return GroupDTOMapper.from(groupEntity);
+    }
+
+    @Transactional
+    @Lock(LockModeType.WRITE)
+    public Long create(GroupCreateDTO groupCreateDTO, String creatorEmail) {
+        UserJPAEntity creator = userService.getByEmail(creatorEmail);
+        String groupName = groupCreateDTO.name();
+        String groupIdentifier = objectIdentifierProvider.fromGroupName(groupName);
+        List<ContributionDTO> contributions = groupCreateDTO.contributions();
+
+        List<UserJPAEntity> contributors = userRepository.findAllById(extractCreateContributorIds(contributions));
+        Set<ContributionJPAEntity> contributionEntities = toContributionJPAEntities(contributions, contributors);
+        contributionEntities.add(getCreatorContribution(creator));
+
+        GroupJPAEntity groupEntity = new GroupJPAEntity(groupName, groupIdentifier, contributionEntities, creator);
+
+        GroupJPAEntity savedGroup = groupRepository.save(groupEntity);
+
+        return savedGroup.getId();
+    }
+
+    private Set<Long> extractCreateContributorIds(List<ContributionDTO> contributions) {
+        return contributions.stream()
+                .map(ContributionDTO::contributor)
+                .map(UserDTO::id)
+                .collect(Collectors.toSet());
+    }
+
+    private ContributionJPAEntity getCreatorContribution(UserJPAEntity creator) {
+        return new ContributionJPAEntity(PermissionType.ADMIN, PermissionType.ADMIN, creator);
+    }
+
+    private Set<ContributionJPAEntity> toContributionJPAEntities(Collection<ContributionDTO> contributionDTOS, List<UserJPAEntity> contributors) {
+        return contributionDTOS.stream()
+                .map(contributionDTO -> toContributionJPAEntity(contributors, contributionDTO))
+                .filter(Optional::isPresent)
+                .map(Optional::get)
+                .collect(Collectors.toSet());
+    }
+
+    private Optional<ContributionJPAEntity> toContributionJPAEntity(List<UserJPAEntity> contributors, ContributionDTO contributionDTO) {
+        return getMatchingContributor(contributionDTO, contributors)
+                .map(contributor -> new ContributionJPAEntity(PermissionTypeMapper.from(contributionDTO.setPermissionType()), PermissionTypeMapper.from(contributionDTO.groupPermissionType()), contributor));
+    }
+
+    private Optional<UserJPAEntity> getMatchingContributor(ContributionDTO contributionDTO, List<UserJPAEntity> contributors) {
+        return contributors.stream()
+                .filter(contributor -> contributor.getId().equals(contributionDTO.contributor().id()))
+                .findFirst();
+    }
+
+    public void updateContributions(GroupUpdateDTO groupUpdateDTO, String userEmail) {
+        GroupJPAEntity groupEntity = getById(groupUpdateDTO.id());
+
+        UserContributionValidator.validateUserGroupEditPermission(userEmail, groupEntity, PERMISSION_EDIT_GROUP_ERROR_MSG);
+
+        List<ContributionDTO> contributions = getContributionsWithoutAdmin(groupUpdateDTO, groupEntity);
+        Set<ContributionDTO> contributionsToUpdate = getContributionsToUpdate(contributions);
+        Set<ContributionDTO> contributionsToCreate = getContributionsToCreate(contributions);
+        Set<Long> contributorIds = contributionsToCreate.stream()
+                .map(s -> s.contributor().id())
+                .collect(Collectors.toSet());
+        List<UserJPAEntity> contributors = userRepository.findAllById(contributorIds);
+        Set<ContributionJPAEntity> contributionJPAEntities = toContributionJPAEntities(contributionsToCreate, contributors);
+
+        Set<ContributionJPAEntity> existingContributions = groupEntity.getContributions();
+        existingContributions.addAll(contributionJPAEntities);
+        updateContributions(contributionsToUpdate, existingContributions);
+
+        contributionRepository.saveAll(existingContributions);
+
+        groupRepository.save(groupEntity);
+    }
+
+    private List<ContributionDTO> getContributionsWithoutAdmin(GroupUpdateDTO groupUpdateDTO, GroupJPAEntity groupEntity) {
+        return groupUpdateDTO.contributions().stream()
+                .filter(contribution -> !contribution.contributor().id().equals(groupEntity.getAdmin().getId()))
+                .toList();
+    }
+
+    private Set<ContributionDTO> getContributionsToCreate(List<ContributionDTO> contributions) {
+        return getContributions(contributions, contribution -> Objects.isNull(contribution.id()));
+    }
+
+    private Set<ContributionDTO> getContributionsToUpdate(List<ContributionDTO> contributions) {
+        return getContributions(contributions, contribution -> !Objects.isNull(contribution.id()));
+    }
+
+    private Set<ContributionDTO> getContributions(List<ContributionDTO> contributions, Predicate<ContributionDTO> contributionFilter) {
+        return contributions.stream()
+                .filter(contributionFilter)
+                .collect(Collectors.toSet());
+    }
+
+    private void updateContributions(Set<ContributionDTO> contributionsToUpdate, Set<ContributionJPAEntity> existingContributions) {
+        Map<Long, ContributionJPAEntity> existingContributionById = existingContributions.stream()
+                .collect(Collectors.toMap(ContributionJPAEntity::getId, Function.identity()));
+
+        contributionsToUpdate.stream()
+                .filter(contributionToUpdate -> existingContributionById.containsKey(contributionToUpdate.id()))
+                .forEach(contributionToUpdate -> rebuildContributionJPAEntity(existingContributionById, contributionToUpdate));
+    }
+
+    private void rebuildContributionJPAEntity(Map<Long, ContributionJPAEntity> existingContributionById, ContributionDTO contributionToUpdate) {
+        ContributionJPAEntity existingContribution = existingContributionById.get(contributionToUpdate.id());
+        PermissionType groupPermissionType = PermissionTypeMapper.from(contributionToUpdate.groupPermissionType());
+        PermissionType setPermissionType = PermissionTypeMapper.from(contributionToUpdate.setPermissionType());
+
+        existingContribution.setGroupPermissionType(groupPermissionType);
+        existingContribution.setSetPermissionType(setPermissionType);
+    }
+
+    public GroupJPAEntity getById(long id) {
+        return groupRepository.findById(id)
+                .orElseThrow(supplyGroupNotFoundException(id));
+    }
+
+    private Supplier<MalletNotFoundException> supplyGroupNotFoundException(long groupId) {
+        return () -> {
+            String message = MessageFormat.format(GROUP_NOT_FOUND_ERROR_MSG, groupId);
+            throw new MalletNotFoundException(message);
+        };
+    }
+
+    public void delete(long id, String userEmail) {
+        GroupJPAEntity groupEntity = getById(id);
+        UserJPAEntity user = userService.getByEmail(userEmail);
+
+        UserContributionValidator.validateAdminRole(userEmail, groupEntity.getAdmin(), PERMISSION_REMOVE_GROUP_ERROR_MSG);
+
+        user.deleteUserGroup(groupEntity);
+        groupRepository.delete(groupEntity);
+    }
+
+    public void updateAdmin(GroupUpdateAdminDTO groupUpdateAdminDTO, String userEmail) {
+        GroupJPAEntity groupEntity = getById(groupUpdateAdminDTO.groupId());
+
+        UserContributionValidator.validateAdminRole(userEmail, groupEntity.getAdmin(), PERMISSION_CHANGE_ADMIN_ERROR_MSG);
+
+        UserJPAEntity newAdminEntity = getNewAdminEntity(groupUpdateAdminDTO, groupEntity);
+        groupEntity.setAdmin(newAdminEntity);
+
+        groupRepository.save(groupEntity);
+    }
+
+    private UserJPAEntity getNewAdminEntity(GroupUpdateAdminDTO groupUpdateAdminDTO, GroupJPAEntity groupEntity) {
+        return groupEntity.getContributions().stream()
+                .map(ContributionJPAEntity::getContributor)
+                .filter(contributor -> contributor.getId().equals(groupUpdateAdminDTO.newAdminId()))
+                .findFirst()
+                .orElseThrow(supplyNewAdminIdNotFoundInContributors(groupUpdateAdminDTO.newAdminId()));
+    }
+
+
+    private Supplier<MalletNotFoundException> supplyNewAdminIdNotFoundInContributors(long newAdminId) {
+        String message = MessageFormat.format(NEW_ADMIN_NOT_FOUND_IN_CONTRIBUTORS_EXCEPTION_MSG, newAdminId);
+        return () -> new MalletNotFoundException(message);
+    }
+
+    public void deleteContributions(GroupContributionDeleteDTO groupContributionDeleteDTO, String userEmail) {
+        Long groupId = groupContributionDeleteDTO.groupId();
+        GroupJPAEntity groupEntity = getById(groupId);
+
+        UserContributionValidator.validateUserLeaveGroupPermission(userEmail, groupEntity, groupContributionDeleteDTO.contributionsToDeleteIds(), PERMISSION_EDIT_GROUP_ERROR_MSG);
+
+        List<ContributionJPAEntity> contributionsToDelete = contributionService.getByIds(groupContributionDeleteDTO.contributionsToDeleteIds());
+        Collection<ContributionJPAEntity> groupContributions = groupEntity.getContributions();
+
+        groupContributions.removeAll(contributionsToDelete);
+
+        groupRepository.save(groupEntity);
+    }
+
+
+    @Lock(LockModeType.WRITE)
+    public void addSet(GroupSetDTO groupSetDTO, String userEmail) {
+        GroupJPAEntity groupEntity = getById(groupSetDTO.groupId());
+        UserContributionValidator.validateUserSetEditPermission(userEmail, groupEntity, PERMISSION_ADD_SET_ERROR_MSG);
+
+        SetJPAEntity setToClone = setService.getById(groupSetDTO.setId());
+        String identifier = objectIdentifierProvider.fromSetName(setToClone.getName());
+
+        SetJPAEntity clonedSet = new SetJPAEntity(identifier, setToClone);
+        groupEntity.addSet(clonedSet);
+
+        groupRepository.save(groupEntity);
+    }
+
+    public void removeSet(GroupSetDTO groupSetDTO, String userEmail) {
+        GroupJPAEntity groupEntity = getById(groupSetDTO.groupId());
+
+        UserContributionValidator.validateUserSetEditPermission(userEmail, groupEntity, PERMISSION_REMOVE_SET_ERROR_MSG);
+
+        SetJPAEntity setToRemove = setService.getById(groupSetDTO.setId());
+        groupEntity.removeSet(setToRemove);
+
+        groupRepository.save(groupEntity);
+    }
+
+    @Transactional
+    @Lock(LockModeType.WRITE)
+    public void createSet(GroupSetCreateDTO groupSetCreateDTO, String userEmail) {
+        GroupJPAEntity groupEntity = getById(groupSetCreateDTO.groupId());
+
+        UserContributionValidator.validateUserSetEditPermission(userEmail, groupEntity, PERMISSION_ADD_SET_ERROR_MSG);
+
+        SetCreateDTO set = groupSetCreateDTO.set();
+        Set<TermJPAEntity> mergedTerms = getToCreateAndExistingTerms(set);
+        String setTopic = set.topic();
+        String setIdentifier = objectIdentifierProvider.fromSetName(setTopic);
+
+        SetJPAEntity setJPAEntity = new SetJPAEntity(setTopic, setIdentifier, set.description(), mergedTerms);
+
+        groupEntity.addSet(setJPAEntity);
+        groupRepository.save(groupEntity);
+    }
+
+    private Set<TermJPAEntity> getToCreateAndExistingTerms(SetCreateDTO setCreateDTO) {
+        List<TermJPAEntity> existingTerms = termRepository.findAllById(setCreateDTO.existingTermIds());
+        List<TermJPAEntity> termsToCreate = getTermsToCreate(setCreateDTO);
+
+        return Stream.concat(termsToCreate.stream(), existingTerms.stream())
+                .collect(Collectors.toSet());
+    }
+
+    private List<TermJPAEntity> getTermsToCreate(SetCreateDTO setCreateDTO) {
+        return setCreateDTO.termsToCreate().stream()
+                .map(this::toTermJPAEntity)
+                .toList();
+    }
+
+    private TermJPAEntity toTermJPAEntity(TermCreateDTO term) {
+        return new TermJPAEntity(
+                term.term(),
+                Language.from(term.language().name()),
+                term.definition(),
+                toTranslationTermJPAEntity(term)
+        );
+    }
+
+    private TermJPAEntity toTranslationTermJPAEntity(TermCreateDTO term) {
+        return new TermJPAEntity(
+                term.translation().term(),
+                Language.from(term.translation().language().name()),
+                term.translation().definition()
+        );
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/control/UserContributionValidator.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/control/UserContributionValidator.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/UserContributionValidator.java
new file mode 100644
--- /dev/null	(revision 18bd65c3e7f7778ce71f3290b03e6141d62c4226)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/control/UserContributionValidator.java	(revision 18bd65c3e7f7778ce71f3290b03e6141d62c4226)
@@ -0,0 +1,74 @@
+package com.agh.mallet.domain.group.control;
+
+import com.agh.mallet.domain.group.entity.ContributionJPAEntity;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+import com.agh.mallet.domain.group.entity.PermissionType;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import com.agh.mallet.infrastructure.exception.MalletForbiddenException;
+
+import java.text.MessageFormat;
+import java.util.Set;
+import java.util.function.Supplier;
+
+public class UserContributionValidator {
+
+    private UserContributionValidator() {
+    }
+
+    private static final String USER_NOT_FOUND_IN_CONTRIBUTORS_EXCEPTION_MSG = "User was not found in contributions of group with id {0}";
+
+
+    public static void validateUserSetEditPermission(String userEmail,
+                                                     GroupJPAEntity groupEntity,
+                                                     String validationErrorMessage) {
+        ContributionJPAEntity requesterContribution = getContribution(userEmail, groupEntity);
+
+        if (PermissionType.READ.equals(requesterContribution.getSetPermissionType())) {
+            throw new MalletForbiddenException(validationErrorMessage);
+        }
+    }
+
+    public static void validateUserLeaveGroupPermission(String userEmail,
+                                                        GroupJPAEntity groupEntity,
+                                                        Set<Long> contributionIdsToDelete,
+                                                        String validationErrorMessage) {
+        ContributionJPAEntity requesterContribution = getContribution(userEmail, groupEntity);
+
+        if (PermissionType.READ.equals(requesterContribution.getGroupPermissionType()) && !contributionIdsToDelete.contains(requesterContribution.getId())) {
+            throw new MalletForbiddenException(validationErrorMessage);
+        }
+    }
+
+    public static void validateUserGroupEditPermission(String userEmail,
+                                                       GroupJPAEntity groupEntity,
+                                                       String validationErrorMessage) {
+        ContributionJPAEntity requesterContribution = getContribution(userEmail, groupEntity);
+
+        if (PermissionType.READ.equals(requesterContribution.getGroupPermissionType())) {
+            throw new MalletForbiddenException(validationErrorMessage);
+        }
+    }
+
+    private static ContributionJPAEntity getContribution(String userEmail, GroupJPAEntity groupEntity) {
+        return groupEntity.getContributions().stream()
+                .filter(contribution -> contribution.getContributor().getEmail().equals(userEmail))
+                .findAny()
+                .orElseThrow(supplyUserNotInContributorsOfGroupException(groupEntity.getId()));
+    }
+
+    private static Supplier<MalletForbiddenException> supplyUserNotInContributorsOfGroupException(Long groupId) {
+        return () -> {
+            String message = MessageFormat.format(USER_NOT_FOUND_IN_CONTRIBUTORS_EXCEPTION_MSG, groupId);
+            return new MalletForbiddenException(message);
+        };
+    }
+
+    public static void validateAdminRole(String userEmail,
+                                         UserJPAEntity groupAdmin,
+                                         String errorMessage) {
+        if (!groupAdmin.getEmail().equals(userEmail)) {
+            throw new MalletForbiddenException(errorMessage);
+        }
+    }
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/entity/ContributionJPAEntity.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/ContributionJPAEntity.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/ContributionJPAEntity.java
new file mode 100644
--- /dev/null	(revision a3b87e246e673eb8438fd815736cd850ffe74a63)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/ContributionJPAEntity.java	(revision a3b87e246e673eb8438fd815736cd850ffe74a63)
@@ -0,0 +1,87 @@
+package com.agh.mallet.domain.group.entity;
+
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.EnumType;
+import jakarta.persistence.Enumerated;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.ManyToOne;
+import jakarta.persistence.Table;
+
+@Entity
+@Table(name = "CONTRIBUTION")
+public class ContributionJPAEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @Enumerated(EnumType.STRING)
+    @Column(name = "SET_PERMISSION_TYPE")
+    private PermissionType setPermissionType = PermissionType.READ;
+
+    @Enumerated(EnumType.STRING)
+    @Column(name = "GROUP_PERMISSION_TYPE")
+    private PermissionType groupPermissionType = PermissionType.READ;
+
+    @ManyToOne
+    private UserJPAEntity contributor;
+
+    protected ContributionJPAEntity() {}
+
+    public ContributionJPAEntity(PermissionType setPermissionType, PermissionType groupPermissionType, UserJPAEntity contributor) {
+        this.setPermissionType = setPermissionType;
+        this.groupPermissionType = groupPermissionType;
+        this.contributor = contributor;
+    }
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public PermissionType getSetPermissionType() {
+        return setPermissionType;
+    }
+
+    public void setSetPermissionType(PermissionType setPermissionType) {
+        this.setPermissionType = setPermissionType;
+    }
+
+    public PermissionType getGroupPermissionType() {
+        return groupPermissionType;
+    }
+
+    public void setGroupPermissionType(PermissionType groupPermissionType) {
+        this.groupPermissionType = groupPermissionType;
+    }
+
+    public UserJPAEntity getContributor() {
+        return contributor;
+    }
+
+    public void setContributor(UserJPAEntity contributor) {
+        this.contributor = contributor;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+
+        if (!(o instanceof ContributionJPAEntity other))
+            return false;
+
+        return contributor != null && contributor.equals(other.getContributor());
+    }
+
+    @Override
+    public int hashCode() {
+        return getClass().hashCode();
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/entity/GroupJPAEntity.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/GroupJPAEntity.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/GroupJPAEntity.java
new file mode 100644
--- /dev/null	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/GroupJPAEntity.java	(revision 12c7a38c7a5f0266916194d4e13aaaaf12eca0eb)
@@ -0,0 +1,123 @@
+package com.agh.mallet.domain.group.entity;
+
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+import com.agh.mallet.domain.user.user.entity.UserJPAEntity;
+import jakarta.persistence.CascadeType;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.JoinColumn;
+import jakarta.persistence.ManyToOne;
+import jakarta.persistence.OneToMany;
+import jakarta.persistence.Table;
+
+import java.util.HashSet;
+import java.util.Set;
+
+@Entity
+@Table(name = "APP_GROUP")
+public class GroupJPAEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @Column(name = "NAME", nullable = false)
+    private String name;
+
+    @Column(name = "IDENTIFIER", nullable = false, unique = true)
+    private String identifier;
+
+    @OneToMany(cascade = CascadeType.PERSIST, orphanRemoval = true)
+    @JoinColumn(name = "GROUP_ID")
+    private Set<ContributionJPAEntity> contributions = new HashSet<>();
+
+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true)
+    @JoinColumn(name = "GROUP_ID")
+    private Set<SetJPAEntity> sets = new HashSet<>();
+
+    @ManyToOne
+    private UserJPAEntity admin;
+
+    public GroupJPAEntity() {
+    }
+
+    public GroupJPAEntity(String name, String identifier, Set<ContributionJPAEntity> contributions, UserJPAEntity admin) {
+        this.name = name;
+        this.identifier = identifier;
+        this.contributions = contributions;
+        this.admin = admin;
+    }
+
+    public GroupJPAEntity(Long id, String name, String identifier, Set<ContributionJPAEntity> contributions, Set<SetJPAEntity> sets, UserJPAEntity admin) {
+        this.id = id;
+        this.name = name;
+        this.identifier = identifier;
+        this.contributions = contributions;
+        this.sets = sets;
+        this.admin = admin;
+    }
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getIdentifier() {
+        return identifier;
+    }
+
+    public void setIdentifier(String identifier) {
+        this.identifier = identifier;
+    }
+
+    public Set<ContributionJPAEntity> getContributions() {
+        return contributions;
+    }
+
+    public void setContributions(Set<ContributionJPAEntity> contributions) {
+        this.contributions = contributions;
+    }
+
+    public Set<SetJPAEntity> getSets() {
+        return sets;
+    }
+
+    public void setSets(Set<SetJPAEntity> sets) {
+        this.sets = sets;
+    }
+
+    public UserJPAEntity getAdmin() {
+        return admin;
+    }
+
+    public void setAdmin(UserJPAEntity admin) {
+        this.admin = admin;
+    }
+
+    public GroupJPAEntity addSet(SetJPAEntity groupSet) {
+        sets.add(groupSet);
+        return this;
+    }
+
+    public UserJPAEntity removeSet(SetJPAEntity groupSet) {
+        sets.remove(groupSet);
+        return this.getAdmin();
+    }
+
+
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/domain/group/entity/PermissionType.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/PermissionType.java b/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/PermissionType.java
new file mode 100644
--- /dev/null	(revision 76957047d34105680c04a95fd0096d6085abeb15)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/group/entity/PermissionType.java	(revision 76957047d34105680c04a95fd0096d6085abeb15)
@@ -0,0 +1,8 @@
+package com.agh.mallet.domain.group.entity;
+
+public enum PermissionType {
+    ADMIN,
+    READ_WRITE,
+    READ
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicDTOMapper.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicDTOMapper.java
new file mode 100644
--- /dev/null	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicDTOMapper.java	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
@@ -0,0 +1,23 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.GroupBasicDTO;
+import com.agh.api.GroupBasicInformationDTO;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+
+import java.util.Collection;
+import java.util.List;
+
+public class GroupBasicDTOMapper {
+
+    private GroupBasicDTOMapper() {
+    }
+
+    public static GroupBasicDTO from(Collection<GroupJPAEntity> groupEntities, String nextChunkUri) {
+        List<GroupBasicInformationDTO> groups = GroupBasicInformationDTOMapper.from(groupEntities);
+
+        return GroupBasicDTO.builder()
+                .groups(groups)
+                .nextChunkUri(nextChunkUri)
+                .build();
+    }
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicInformationDTOMapper.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicInformationDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicInformationDTOMapper.java
new file mode 100644
--- /dev/null	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/GroupBasicInformationDTOMapper.java	(revision a7358269a14e55ade9119a3e3450117bae7208ad)
@@ -0,0 +1,28 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.GroupBasicInformationDTO;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+
+import java.util.Collection;
+import java.util.List;
+
+public class GroupBasicInformationDTOMapper {
+
+    private GroupBasicInformationDTOMapper() {}
+
+    public static List<GroupBasicInformationDTO> from(Collection<GroupJPAEntity> groupEntities) {
+        return groupEntities.stream()
+                .map(GroupBasicInformationDTOMapper::from)
+                .toList();
+    }
+
+    public static GroupBasicInformationDTO from(GroupJPAEntity groupEntity) {
+        return GroupBasicInformationDTO.builder()
+                .id(groupEntity.getId())
+                .name(groupEntity.getName())
+                .identifier(groupEntity.getIdentifier())
+                .numberOfSets(groupEntity.getSets().size())
+                .numberOfMembers(groupEntity.getContributions().size())
+                .build();
+    }
+}
Index: mallet-api/src/main/java/com/agh/api/SetUpdateDTO.java
===================================================================
diff --git a/mallet-api/src/main/java/com/agh/api/SetUpdateDTO.java b/mallet-api/src/main/java/com/agh/api/SetUpdateDTO.java
new file mode 100644
--- /dev/null	(revision f602a79ad3765c6b239696169225424764e215cc)
+++ b/mallet-api/src/main/java/com/agh/api/SetUpdateDTO.java	(revision f602a79ad3765c6b239696169225424764e215cc)
@@ -0,0 +1,22 @@
+package com.agh.api;
+
+import lombok.Builder;
+import lombok.NonNull;
+
+import java.util.List;
+
+@Builder
+public record SetUpdateDTO(
+        Long groupId,
+        @NonNull
+        Long id,
+        @NonNull
+        String topic,
+        String description,
+        @NonNull
+        List<TermDTO> termsToUpdate,
+        List<TermCreateDTO> termsToCreate
+) {
+
+
+}
Index: mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetDetailDTOMapper.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetDetailDTOMapper.java b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetDetailDTOMapper.java
new file mode 100644
--- /dev/null	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
+++ b/mallet-core/src/main/java/com/agh/mallet/infrastructure/mapper/SetDetailDTOMapper.java	(revision e038fb684f5b5711d4d8a6257afe1a14fe954fd8)
@@ -0,0 +1,47 @@
+package com.agh.mallet.infrastructure.mapper;
+
+import com.agh.api.SetDetailDTO;
+import com.agh.api.TermDTO;
+import com.agh.mallet.domain.term.entity.TermJPAEntity;
+import com.agh.mallet.domain.set.entity.SetJPAEntity;
+
+import java.util.Collection;
+import java.util.List;
+
+public class SetDetailDTOMapper {
+
+    private SetDetailDTOMapper() {}
+
+    public static SetDetailDTO from(long setId,
+                                    List<TermJPAEntity> termJPAEntities,
+                                    String nextChunkUri) {
+        List<TermDTO> terms = TermDTOMapper.from(termJPAEntities);
+
+        return SetDetailDTO.builder()
+                .id(setId)
+                .terms(terms)
+                .nextChunkUri(nextChunkUri)
+                .build();
+    }
+
+    public static List<SetDetailDTO> from(Collection<SetJPAEntity> sets,
+                                          String nextChunkUri) {
+        return sets.stream()
+                .map(entity -> from(entity, nextChunkUri))
+                .toList();
+    }
+
+    public static SetDetailDTO from(SetJPAEntity set,
+                                    String nextChunkUri) {
+        List<TermDTO> terms = TermDTOMapper.from(set.getTerms());
+
+        return SetDetailDTO.builder()
+                .id(set.getId())
+                .name(set.getName())
+                .description(set.getDescription())
+                .terms(terms)
+                .nextChunkUri(nextChunkUri)
+                .build();
+    }
+
+}
Index: Dockerfile
===================================================================
diff --git a/Dockerfile b/Dockerfile
new file mode 100644
--- /dev/null	(revision d903e9a029444d3c412a37bdc1ea66995cb8f3b9)
+++ b/Dockerfile	(revision d903e9a029444d3c412a37bdc1ea66995cb8f3b9)
@@ -0,0 +1,5 @@
+FROM eclipse-temurin:17-jdk-alpine
+VOLUME /tmp
+COPY mallet-core/target/*.jar app.jar
+ENTRYPOINT ["java","-jar","/app.jar"]
+EXPOSE 8080
\ No newline at end of file
Index: mallet-core/target/classes/application.properties
===================================================================
diff --git a/mallet-core/target/classes/application.properties b/mallet-core/target/classes/application.properties
new file mode 100644
--- /dev/null	(revision 58ce96ec15042c6da7102d2e934a5e280947303c)
+++ b/mallet-core/target/classes/application.properties	(revision 58ce96ec15042c6da7102d2e934a5e280947303c)
@@ -0,0 +1,23 @@
+spring.jpa.properties.hibernate.hbm2ddl.auto=none
+# DATABASE
+spring.datasource.driver-class-name=org.postgresql.Driver
+spring.datasource.url=jdbc:postgresql://db.fqsrbmwuuorvznqohgjs.supabase.co:5432/postgres?user=postgres&password=yVTCjGtR6R4dI379
+#spring.datasource.url=jdbc:postgresql://localhost:5432/spring?user=postgres&password=postgres
+# EMAIL
+spring.mail.host=smtp.gmail.com
+spring.mail.port=587
+spring.mail.username=malletbosses@gmail.com
+spring.mail.password=bfpmbdnuoxeeaygr
+spring.mail.properties.mail.smtp.auth=true
+spring.mail.properties.mail.smtp.starttls.enable=true
+# ERROR HANDLING
+server.error.include-message=always
+logging.level.org.hibernate.SQL=DEBUG
+logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
+
+# HTTPS
+#server.ssl.enabled=true
+#server.ssl.key-store-type=PKCS12
+#server.ssl.key-store=classpath:mallet.p12
+#server.ssl.key-store-password=zcJYAzV3xvNKxDT
+#server.ssl.key-alias=mallet
\ No newline at end of file
Index: mallet-api/target/maven-archiver/pom.properties
===================================================================
diff --git a/mallet-api/target/maven-archiver/pom.properties b/mallet-api/target/maven-archiver/pom.properties
new file mode 100644
--- /dev/null	(revision e8d23475e25957d1a8d8503e545f72982e7a7766)
+++ b/mallet-api/target/maven-archiver/pom.properties	(revision e8d23475e25957d1a8d8503e545f72982e7a7766)
@@ -0,0 +1,3 @@
+artifactId=mallet-api
+groupId=com.agh
+version=1.0-SNAPSHOT
Index: mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserGroupService.java
===================================================================
diff --git a/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserGroupService.java b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserGroupService.java
new file mode 100644
--- /dev/null	(revision 2b19b3807c5928d5c6480d6be870fd6298a0d03b)
+++ b/mallet-core/src/main/java/com/agh/mallet/domain/user/user/control/service/UserGroupService.java	(revision 2b19b3807c5928d5c6480d6be870fd6298a0d03b)
@@ -0,0 +1,36 @@
+package com.agh.mallet.domain.user.user.control.service;
+
+import com.agh.api.GroupBasicDTO;
+import com.agh.mallet.domain.group.entity.GroupJPAEntity;
+import com.agh.mallet.domain.user.user.control.repository.UserRepository;
+import com.agh.mallet.infrastructure.mapper.GroupBasicDTOMapper;
+import com.agh.mallet.infrastructure.utils.NextChunkRebuilder;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+@Service
+public class UserGroupService {
+
+    private final UserRepository userRepository;
+    private final NextChunkRebuilder nextChunkRebuilder;
+
+    public UserGroupService(UserRepository userRepository, NextChunkRebuilder nextChunkRebuilder) {
+        this.userRepository = userRepository;
+        this.nextChunkRebuilder = nextChunkRebuilder;
+    }
+
+    public GroupBasicDTO get(int startPosition,
+                             int limit,
+                             String userEmail) {
+
+        PageRequest pageRequest = PageRequest.of(startPosition,  limit);
+        List<GroupJPAEntity> userGroups = userRepository.findAllGroupsByUserEmail(userEmail, pageRequest)
+                .getContent();
+
+        String nextChunkUri = nextChunkRebuilder.rebuild(userGroups, startPosition, limit);
+
+        return GroupBasicDTOMapper.from(userGroups, nextChunkUri);
+    }
+}
diff --git a/mallet-core/target/classes/com/agh/mallet/MalletApplication.class b/mallet-core/target/classes/com/agh/mallet/MalletApplication.class
new file mode 100644
index 0000000000000000000000000000000000000000..a58ea9f8e553d4e7368226c67c4380e6ad009bc1
GIT binary patch
literal 735
zc$|e&O-~y!5PgP_4ND3%l(h6i0!|?ZeCs6zsg1;GX{)A64?TGovoY-2k=NVyZ}n8f
zfgjKxRdsA4u~H+|hZ)VhnKxhl{pa=$zzJT(Six$9Ru^k%Gi+apZ-N&>=lnx@B{Rp+
zextN<rwpruqiKW=!+vH;F7g>KMNvq{&x3k9pBE|<P8l5|#zus07mu*XFf=yj)!Ztb
zUs_Sh@5Wy9)ELJn!P&^9Dz+w>4w8pX#)YV=(btA&;(XrdC|Smw8SUf`$Hzurs=T%$
zEo7s__#PfHw8rK_GHfME%lCDeO8eQzGV~IYiDD|O^7g{nax+yi947yp-ZPg%(G>l`
zvZkkm3!4+y&Jvhza4y}<TznLMA}1{c#uHQ9Or9y<NdKRT$DV~@?^CUvD&<sF%FnE|
zaRDcW)1|8lM-a6$*<x36aguigG)KY#BKj%*t$_KzLUM~NPMVQk8~y_O8Q^V_?cj{?
zm}K`p06pxGUdI#cQj|}A9ms%AFB;xp{mVms9E!!nu+iY?ppU1dpLsr7L<rvt@;P2C
I%Dx2t0)uJ2lmGw#

diff --git a/mallet-core/target/classes/com/agh/mallet/ServletInitializer.class b/mallet-core/target/classes/com/agh/mallet/ServletInitializer.class
new file mode 100644
index 0000000000000000000000000000000000000000..64a8f03821456142fa594154eaa0cb947ad386b1
GIT binary patch
literal 911
zc$}qDU2D`p6g|^TH#XgVxYf4Se$tn%g7Yk^f?E&@sR~;PrB9RWG&^-R6DCPp{8jp*
zAm|V9M~Qc`3zlt5!Og?HIrrRqxN~NH|M~F?z-w#;m_p5m*T6LD3<t(0JkP93lQSy@
z^3vE(JTj)>monnHv=>?yJTJ4%*n)Sf#tzZlA#;$bLJ6%tOUqDyr3k)ZsI~TveLP@T
zI2RX!Ymp{=UyD5V5io4WX23<#=L4ag_+gdaW|>y8D3nP9G%)95zJUcSGQ7NV#i&%e
zC+%phYYLqq!Qkhnw6V+?KD185v2EIW;eSiFeKZ+%#*T8EE8f28NwOkTseE4!B599A
zq^Z&jO)T`Wu*%_4(JT6jw%rZyRc<rP#3nscNoi^Dsx`r3CNY9xR{X0nv?tP9Jd{P>
z^gaqVSx8G>1l{Tm-zn$M%1t9)xNF4@9@5Kp-xQd8+Z2}wamtMH^t10^Un}|%#d=k&
z<1xj?umQ_hq3mH5PpHcccc|(_=bw8&;h)r+Gu>~P{W7K!R4U8E&XJ1yTf<Z0*PS*a
K00JA;=;mL569l3F

diff --git a/mallet-core/target/classes/com/agh/mallet/configuration/PasswordEncoder.class b/mallet-core/target/classes/com/agh/mallet/configuration/PasswordEncoder.class
new file mode 100644
index 0000000000000000000000000000000000000000..8ab80b4011eee40e5f67198f623838c807cb2eed
GIT binary patch
literal 757
zc$}qDO>Yx15PeQIAB1fi3T;UbNWHZc#1aw+DS$+y<`h9is$45)<K4R5wIi>$kbeay
zsvh_O{3yiivWlX#2P%A+(Y%>AZ#?#|-#0%2yu)q_6;vDWeAG~9XkUmc!DFE#{%LX{
z1IJK*tF&_O8LImS;})8D&_K(_L--6w#zs7yS*4@UibQ@f_L8SE$gFa69@zQJ89ozf
zN{J~ynOsi8mnUU-tOGNZmf_h{h9ZkyIxu!r^cs~N&aPgay<r&a9}NFrsMo+c!}Gu-
zTtw$Q5pgUX4~z~~lv&}F(frnIUY|U}#!zYbF-s=Wo{C9K$mY-lA|4B?^0)*&cdk-~
z?(jY$J%%k|BcpF`rt>+|P9<`zQbhtEv^K8jK_V~iTnQ;T`PFf;DCI{|XwqnnOlAW)
zQ2C%wR;0T5vopN@*Pi|53-z#vHTp*Rset7liR=bNoIE36JNyCmy-2so)(fzSM`ZoK
p1=z%6@-!JCm4e(Y$=)>@-&VN(64xuaTV-~;sNE^-(*@cA{s7zD&OiVF

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/common/ExceptionController.class b/mallet-core/target/classes/com/agh/mallet/domain/common/ExceptionController.class
new file mode 100644
index 0000000000000000000000000000000000000000..34f7127c086554f73e93d033a719c7917caa45ae
GIT binary patch
literal 1487
zc$~ddTTc@~6#fPZmC|za23`=n(E_r@7o&?L1Tj3cVt_OuK23Lrc5rv5na+Z~`-AjF
zj3)j7f0Xge0>xBBgv3pD&d!;0&iBoHXZHJ#FW&$>!(0ws=*}XOM-O@#hPL?*_ad(9
z-fC@I1eT$9UMgu97`lt4Y7Q6Bmqjj*e&iYaK*t`hH@uifk+7arTZXr+NdlV~LEdIl
z7;o7aZPrAqsZ~on-&n1rZidX3(J{kjv3znF@iq`mE4A_}>H6~F+%L5=c~ky|<7Y9z
zFr`i1Yc-8jb*dVRU2WcY4Qrd;Vd%25(!R@K2*X*7<Z%&~7#^RI6GNdc><ZOix7;Qz
zB2X-q|H$De(9fZOD^7>23=73_rxN~YiY)0+_@!zVV+;>Fb`a{AOXZO_CfaSnOIlf@
zDZ(k@@)-upQi+#IToY!4*CO(aly$(PDmT*251bj>khH%?o$~z^$R~&fS79W6IkxaT
zZE#AB9dO*K*ON2j(tQyfJ;yM9a!*oDMc9T8UvbCO3PVTOw=V07J2Zy(|KS|wPv*El
zEXURo3XMfowj`;&sFbD-BNU?h^jMr-QS)k2g&uFm9*Mt_%I%cz+2K(_`^>HD#027n
zbgeXcOqa~L8}Kh+N2!b9jtqp4NsQ9}%{^UU?hi-fHJW*38QGrcJ+P1I@^u<}Q)fSJ
z(3sy3z)g&kWw?b2WYXjfvfX4yW<DcZ`HI5k?93+&?&0!>cBNbjJ4pG%X|;*{jDu?K
vYZA9pN(J1(U5dWv&=|Ra`)Qde6v+-yP>J5@*I)sqbYUi4olRFA;RnD^ja0tZ

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/boundary/GroupResource.class b/mallet-core/target/classes/com/agh/mallet/domain/group/boundary/GroupResource.class
new file mode 100644
index 0000000000000000000000000000000000000000..51b74099b7338de64cda5a9c095aa94fea3aeaab
GIT binary patch
literal 6955
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
K6rai8&;Jj?_rd=F

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/control/ContributionRepository.class b/mallet-core/target/classes/com/agh/mallet/domain/group/control/ContributionRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..9cc092b8aee794db72e6a33c848eeacaf37e0d66
GIT binary patch
literal 531
zc$}S)Jx&8L5QWEqu!Qhe(QpB1n2G`xkOG1tT0}$y{bbiT4qng7>jmvWxC{jc;7|xB
zK}m!{L*aRz!q4B#`}}(U0DyDYiJ&3iH02yg4KXKUq{obN(iWBDs=$=3cWm%#ta?y+
z&GudvTx!p*j$l>5?ucFp4OxYEgON;q1Zx70*(odwr>%N&l*?Ck&zO-X92JCaW`W&;
z=7s|HG8rIb$C%4{_9;67CkM%L(5jSfTBP;b*Z2_b-CpN<(#4050r6J)A!j`rlX&S$
z0qu0ryw%srlCPW;@Rs}@C{F%0%-J8n)6M?CE-rQsy?~IgRq;hEV585KOXZC=0djwN
lAV=eOVfzAB!fA$-MMx-u_0Y9K*9<m68ql89P1u^~_BYD9tRnyb

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/control/ContributionService.class b/mallet-core/target/classes/com/agh/mallet/domain/group/control/ContributionService.class
new file mode 100644
index 0000000000000000000000000000000000000000..f1ec78b83fded7a99c3ff44f027d9e18caf97d48
GIT binary patch
literal 3084
zc$}?PZFdtz7`@Y$ZksF+3#3#L0~APGWWhIHg48y&P)rj{N)=J-G?}CWo1L89NlTB%
z|D@+AARaw__V}ATKC>IhwkegOACldjd7gWpxpU{`&%dAj4&Y<d6X-*~g#jD;FvyU4
zz}LCsa<Ac(Rv(C}W*EFCJ*lrV^k*lQhcSd<3ke%Z*bJAds_F2?n$zU2E3{KnO)fpB
z;j4DbsVYzV%60PQDOcNCDz75^by*b*>1wRCELtj%TKSs{*9v>Z>}KbZIDmr|Qa0Ye
z2*cIahhiA2ORqM&xlm)sW((VO$xTE}l;%36mPzJrE<y4fws8b$hEqYi)p9rE@I|HP
zRoko0J*tW@g~5qK7nIl70$gu<RTJk_43-o=F&xF1g*R=yg<}jOy+tr2l|SbOVrk7+
z8w?k-y8=%14$Z=GhReHYCp<0n<`(I0-<g>UTg@C~Y@EPJs>EnG<GPWIXX0aB(8A}d
zuGli(f(&$Sgq%5U<Fpa6zajJx&N7^hb7eN9UdzbZ)y#JnzRzs%Amb^WsT*k%n82ik
zDI4eTF2iVut;HklEQ%oD4Kc6$CO5XOcV4c<tEvzO&B6Vb&UZY@g2OPqO(*HqeI97P
zUDa)0IO6$KJBwj|j|CDqkBesYy~l85hf*e%88Z1&ajCp8dv|G}R9q>RmR9CVcZ)Yx
z=E~(#d1bM3lZ?=t$*`Y93pDriGI!gw=%%y(WpSBG2J)&#KnDxb6UBCORrpJ05)Hqq
za(9{g(tLLs2lSc@NZ~!RcD4x`LTXXyHC4OAeclvg8G^IO6Oo|`J1m~pwJmY=Ny1ER
zhoqgLLl|^-g3zsbMHJz3>NPQ0SDJ+M&he&Wi(s3r=c4V*aBX{8*9l{|A{!nzK4Vya
z<-F~+?!M#hs+lRm-`ft>!?xE26Ox{Dd2_YK$6sNO9lyX(`FEr2xePL5Gul!Z5*5|<
zt72Z72|T)klg}G^hOu&+glmdr8AzJ!8ISfYZo-VU3d(OdLCdV&x^er4@*g?@d0r?@
z_Hbg0Vpb_lwenW9I)a0Ps3fq2yB3yhe2y;|PId<@y><0aIE7F$%HVZgjn24aGye5g
zT%}G@L~x6HHCF`V1*IOgTe;r7=4FY-*RR(ZQSP2Q(c7D+*{Vn_aw&Yta5%fe@kU~O
zWe)1EZQRDEDXcK$v;T)5>;=yge%|FlAOZ`k45wd7PYbl~9N#^Z4y-7c4%Q*Mvw?nN
zcpo2t;luFj3`WeQjNbQA+dh0mZI|e4o}MN?G5G{+a_VPTKZfy_>Hh%w>3;+RID}yw
z#ufTXN71;791y-4RJxcMWU>rB7~LGNci_teVG`1lKf#*%1^fFjIrSKa9%J+my#2#A
zs!@VEO82AD7*+ZORT|Uyq)Rm&Qq5qNQVrE-oslFvRPXe`;P;34gA@uJi{U0;;3kpB
z4eFnxcRP$TE%RNbJUwoPrQV_+UEey4ISMgQ*3>hc0=lD#*fKFT>jj(DJBkQ<A(b$W
zqb`G8qB$~&qa$Yqena2A{>jQy+5~>Z`Fm4OaG}eU2*Xa0f+u5qqalmYbr^-v1_M|O
ebBY8VRd^>9EgG|#r+c`MZ}4r1$-q&Cz}P=g4{CA%

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/control/GroupRepository.class b/mallet-core/target/classes/com/agh/mallet/domain/group/control/GroupRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..e3160ae6c244013212d7f64b090a6368633d33ce
GIT binary patch
literal 536
zc$}S4%TB{E5L}m*P#&dJ@DFgo2gE6W)JlM;0#x+IZAskJ#qmat1LP<8AP#&0ABC`k
zM5{`0;9y&0?ab`%e0;vW1HdWt0%$NeiYeomPI-n(3Ck18P->nUDsvu_wuThH^yp6H
zR7gvv3ZTiLJHsdB3U$hFA7&!90jx4OCX@0aH&Uk)gPC|H^T-pl$Y(in^CQ8BInD(c
zbYd#C?JG5?ZXAul-hMPU7+WtG9t@rBwXjo4M(EY8Fa?9At{FY?A`4p#s;fk3D<@Kz
zUu5nXtjmR>_E@GGZE2j!YqUI982xLeljyI_dUIQSFLpTUpVu&4@Q%oJdKS7)$5fhF
zTu9}*+g(cH&=cI+8LYU|a=A8KGy$wR)OM)l_~6spfX(^Wmal_OeQ!gzes{hAo;RWy

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/control/GroupService.class b/mallet-core/target/classes/com/agh/mallet/domain/group/control/GroupService.class
new file mode 100644
index 0000000000000000000000000000000000000000..7e9eed096a56855cef3c0f4fc7933520f9fdea8d
GIT binary patch
literal 24956
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

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/control/UserContributionValidator.class b/mallet-core/target/classes/com/agh/mallet/domain/group/control/UserContributionValidator.class
new file mode 100644
index 0000000000000000000000000000000000000000..c8f6726e93b8f31ba0b6bddf3820bc4e254d36f1
GIT binary patch
literal 5253
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

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/entity/ContributionJPAEntity.class b/mallet-core/target/classes/com/agh/mallet/domain/group/entity/ContributionJPAEntity.class
new file mode 100644
index 0000000000000000000000000000000000000000..8bbc61c3752c38ce7a9014cbf40f50b0c8e84ac0
GIT binary patch
literal 3095
zc$}?P-%}G;6#g#xg|I{+Kmo0aKOv}FMG-+!z?eppkS2lFzBo&`1FOj{&2F6Gwf}{E
z>05o_q3u*U(}zy`(ue*{old{ISp$YmwM<|3+<Sg}=euXmxx0V<{mZWa?%~TGbRiT&
zSVII+ffLV-mxf+7tWAAo{kg2T0@1ssWx5Ljp^3@0W9Y`Q7<x4HLKC=Nv1_`qxuw^P
zYE`=WhFvpEOW&;9jcr|8uIcXR1zE3|j$_(Zd1qS+go~-ghXT{t{~SAi3~?Nf;e>{M
zm3{UD5SDGrt()r&ml%%=iz!bl(C<k1U2uh+&@iZg6CT82`>=+OFe1=fd5db-1!g*&
zq~XYV^Wk$@<+{beJIt7dlQ<>NWp1$c+5O^YZEJJBhaRUjoWWUv_@;E14`!X6m^@nE
z9-PDZ7%phIh)V)Dj{?H3kY6>7sv|Hok!|mp`AM&>CNxYUDbTH`R}F{G36kFT_LTF=
z^@@h8xJK74!`WK4H>B5X8G+Gag9&SL&2-H5s$8@z+cng?B-jX{UKn-P(6?pXF&$T0
z6{%-7<^?VUn$pseb;Fe#Yeuyp>DKMIYQMSjo`|>o$B4|sRKA=kKNUC|7?H9XwPq4}
zM_#H#0;fB=`moVbxtPhP1x^KeF5A^c&7xn}GHS$2lv3qqg;X(@DU~uS`Df*)g%saJ
zy124hIIKSth?z62owB`Rsr2Dy$&Y7EOXeH3by+VPthT^F)~*=UHKT5-y{`<rTPDjt
z_aOruIDX9d?Zgqr|Njel&xlN}aT;^d-Lf|dMx7;hSvbB<Hgbl8I`B>xd!tID(=;X~
z+HDGLkfEjaD@Wi~$07c=LlMpigqt}^RTaHq(n}w{^Js877~)RbeRQW&?hmMS#CEqN
zF@&vJ?$C82&{uMe%8Q(_?YCf0$!^pu@{y@FV}VU}O~G^;s8%1I3^aRLXw{Zi@*K>i
z)iS3E<GhZ$_|**a$y*x&I(PlteL{Ji`x_F|xJd;+PriAWyIWk(NZiIO?r=HhV4m8+
z_xRkUmR}p+CrWvbQe*mvw_D&YLmxqzNd63w{1LG?=xd6BAE@raeLe>m0<sS?Q7^{0
zAIAd^$_vFJmMHlau*?Vr`!%JCId>Q~Ii=QD)avRR4DDw*jToQj4`jJO`WIQJOU!rK
z%b0AU`We-#-)C{oD@T{NQil%VA=iB&I)ElnsVJuK$UnJGsRAR(pD_A;i$&B^CJ&r1
z(mG!npZe!ppj5e{>NKPKXXx>?*BGOF2*XXU7T>7<-W9h9o5zFA;Bf$_zIIMG0y#ZF
zHi%PSJEs}O-0r}sSwo*wzXzKO<TTLEX)cgcKA6)$JEsN4-0#3?@F1r_50<|%0i1@~
zIV}ZpT0tR*(@;C7M~q2#;M5!@pHs7+_y^>}exv?_DW{WD-yss-o%$W|SLmJk4e{J-
zL_)iY>mL|W;>sRA-oyAS#KNx;4(&25bYRk+a1wINpJ%>8tM3!^`HWl?tLYZ2X%tZ+
zkr6gi(^^)2k4P;37eoy4kq0fxMUOK7ll(H?@XOep+{5KPOzpN+a`iwZyZww^)T-y2
Rcc~ob>T}93nm5kVe*jcwv5o)$

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/entity/GroupJPAEntity.class b/mallet-core/target/classes/com/agh/mallet/domain/group/entity/GroupJPAEntity.class
new file mode 100644
index 0000000000000000000000000000000000000000..edd3655dc7d0286e7550dc40437a9f1e23230ea1
GIT binary patch
literal 4972
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

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/group/entity/PermissionType.class b/mallet-core/target/classes/com/agh/mallet/domain/group/entity/PermissionType.class
new file mode 100644
index 0000000000000000000000000000000000000000..da192878a476e2740884afb9380165bac4fa4fa6
GIT binary patch
literal 1305
zc$}S6YflqF6g|^!yY0G_S`egy53JIHuvQ*wiUb1Hkd#L#)(}6Kp&iSTeUR;zgm3;N
zDTxq`hR^;e<DG3)5MyFD**$yjoO|wLX1;y@^cBE!JW~;3$X8w4;PqX@=9VRVqvqP&
zbd0*^HunwT_@;koYzWUb8x7NSwhs4291Mz%2%-#;#pTtNHHN9uf6El4PE1E!>S&wA
z#pSoJH&?cb(tSmTF5QZBOUG3mJxDUBnaX16Rk6%4{ichQ8dB(0k<`(L>r{Q!avj0Y
zm(7*-_yIR8?$nL-ojp<Yi93KBDh73=ag!?eO(;4|n@Tz0R#U9MW0=XFi(ayLqft2L
zDEpr2)C=b`NP$3qSjR2gW{A$2j_J=c^k*+euH-5)L^PVha18MnboqN<#{-PYfdpkV
z7-qA%Zbm}Me<~<TZjGkVQ!*W~*0gtox5alX^1S>@Rk^NmrAls<TNUn^Qn@3qINTO;
z?NSnk<f`y@-P#8Ch~o=Smg(=B1X@PW7&GnIMB8w^n(1(hAzn7?4)>cLt%b9>3Z1mM
zs?`~C@sF*T>!Ou;s!c1qO|L3mn6io9i-bv;Vj)jEH9(h5Ss0Y}1t5%fP?wlY%X3YP
z2>G)ZC4P>q5kmQBEhIkT+8I(G$YL0yZ!}m76F-e{gaZCFq4a7gHg<~sGcd^yUEn{Y
zuij>10+WP>%*!zGUQ+2C5=n~X3B!cy*!a*1hK~NBq~ek6B2bElkf%-_(>oP}OeZyY
zMmsGTP=b~QqF=za!!3l%+e!;+c{|dgNnY+Rh8gOs9lY5Ip8QO)sXO5l+&xA(Fh-QX
mPy^#$Brvp7WR8(I`lXo);uR!l&S}apO8TKrnX`Bj;L{($X(bo{

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/set/boundary/SetResource.class b/mallet-core/target/classes/com/agh/mallet/domain/set/boundary/SetResource.class
new file mode 100644
index 0000000000000000000000000000000000000000..0f7cff5b3a16da70d3b0bb731dfee0ae7c5735df
GIT binary patch
literal 4202
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
JzB13R{{cwul{x?b

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/set/control/repository/SetRepository.class b/mallet-core/target/classes/com/agh/mallet/domain/set/control/repository/SetRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..43f717d00f8dd5cf851b0ebc3c2915f49cf77cc6
GIT binary patch
literal 2304
zc$~#nTTc@~6h2cZ<>CcUP`u!xsKp01n3xzVmx3j>SxRkD6W@m2X&KzzX=Z1EzUYHL
z$izn<`~m(ajc3-SElo=((eN;totf{<_suzH=Iqbk-+utWGCWB^g1`$~cqXmwnI3gr
zrc6h8l>26YpSJLo6s{>*T?AYS*)S_im7Aj!3=$aMrw7z@sb4d<clVjCQZPi|nUFOz
zs7vnGs*-x_P{@y_Llrgm>$H8tLY=m6I80!z57SDW*}Teas<`lTN6Zd!g}`i;`%cz%
zcbN2o^#+R0J6YecP-IAJjKJq~!Rmf)g(fER6;}=O7@x6vN{X#Yh@!hL%PgD;nnAa1
zF|{Y064f9i4G1Iyt&_m8+tfK+k2fYTQsFh9s!-zhw~Lkk@(kqK^@UP47mYG2c;cCI
zhy#zk;{ivmtnUjI#SM>c_U7#f`kRo+2JV(Tpl*n+C{}V-Zez#rjLq`)mVu#evKqoD
zZ0C!HSk%G-guH*9E9Y>`9b?&8T{5!8SBAHE>~3Ru^(lerICs_?QTDWQ=2QBDQ|9Z1
z3g{Jd{ZPc*?aq%vzSe(mPK0BLz+5vNMO3zdFA|cX(0t7ol5NlcBQu}2T8~gg>2u(r
zqNz}E*R*(`bjm1E=Qe@2XMmsQv{!6_8Q#=NV5%EYfxw_2El;u|WWx6;@8~V7oXH+G
z9|(-{Hqb=ul#*l)!*7PKMmhZ-Qtrz?-}F3=eIBQg=$b}{drUHYse_g~@Omq$pNC&o
zXL&m1Vw_f*`qkaWYYB|uN?*KP>)Lr-H(C*)wAm)tC1mnM^<LBpu~ZWnfCMBVg+B#D
zSkOmc6lcb8ba?<S=?>c!Y*(=*U>qi}A49WAY}W#~jy6*;9ovi~I`B6-@i!4a1GjKV
z<C6q#H?enc=`PG7E?&9^`WM51xz^PEXzBsX$Amc5B74|L_6R5cE<J{H)Gz!25WC>R

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/set/control/service/SetService.class b/mallet-core/target/classes/com/agh/mallet/domain/set/control/service/SetService.class
new file mode 100644
index 0000000000000000000000000000000000000000..76f4cc6c7b305dee8eec452f862e17179fde88bf
GIT binary patch
literal 12613
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
XYxE<B?oFn9N8v&AV|tH1K=6M6R&&NC

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/set/entity/SetJPAEntity.class b/mallet-core/target/classes/com/agh/mallet/domain/set/entity/SetJPAEntity.class
new file mode 100644
index 0000000000000000000000000000000000000000..65e555aa8b94ce8487935c444edccd8981527dc6
GIT binary patch
literal 5352
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

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/term/boundary/TermResource.class b/mallet-core/target/classes/com/agh/mallet/domain/term/boundary/TermResource.class
new file mode 100644
index 0000000000000000000000000000000000000000..337799cff7fedbb0167230e31d1263b191f6ac4b
GIT binary patch
literal 2005
zc$}qGZF3Vh5PswrjEw^!DK9QBHKYMM0Tf=Erd$Y+KuV^jVd9KuI{na*ZDA|ioy<v>
zO#W5dY0FGI(;v_u)#*xR;?P0}^utNJ(zDO*YFDSf{{H<>0Qaz3LI&9aa%JRkgkgM3
zYzrQWxX0JqTe4#rjx4HJ*(HW-t==l)D2fG?$~cBH!(2y4T=e=p5@9GU@9IdXm|K}d
zysgu?E0SHlN!o@qI!!u~;h5WO%4AzPZJ}`hLr2Fp(IGcOv?qFP8I*7wCkhxZ<0K{+
z=0A>xq1cmldDks5+^IE2={Ien;$E<}R^JOz43sxs7Dja%%GgJn>p=mZFkID1kDGzB
zc%Fzz?&#zN?^`?Il=wi$Mm~<Mvb#l`#+d@nmQlf{3{&qkdqP9g3Y!{+%=$MB(~U!5
z=~O0h-j(tK!_xk2hQ$mHL$ac~GN`v0g4)Lx$64nb55tLuisiRy)RxJnXos{i(a;?c
zwnU<w{(3QI`-)P%b&$umHdH`8`&8P#?miPPBSI2Sma58d{~h%_WU&GlmT!!S|MD=5
z87mU|OdDmDjv3e*Lq1fIBG2RYUv0v0@!&S1PHd`POa(~jIDYtlkuM(XYl*y7Hd2B{
zvZaio3OtNsP1UDF==AChrMcM=y`D_?_HC|(;bH{f>jRm1k$4IwjUp-v!?~}ety0yh
zE_YLH?|PvcQ=C=0TW^hhN49xe#oc}MoM@hk!C-jESKbrK6V>fX7sur{^Vw^LHxipa
zbPyZzWh#yJG{m0Y7Gdhz)Mdj^?#kyP4Q*?<%I4^j-lU<_^gX$%TuYza-=;TQIT>p2
zNymzw;hVy@mou-9{+kOQ5WBG}!`m6kB=|5>pZ4hda|2=f3`Ylv?xr0{XE;uKq3R6r
zTSmvYL~lZdUK6?}?o}WuLvkJ$Y5t6~Rhr#?Y33E!%<Qiy{NyoJ8jmAO;~C^|7Df6g
zULx)E5RJ>20=(o{89paDPY;N9HH|Ce!qICo&eL3(`2~g9^A~=@*xlS8nEbAi`x&QR
z;oOgV-b$W%irA*Tr#nN#Jx>)}MUBXvRL6`*S1?ObmTbmw4cEz;i(@QHP!I^T4czc9
zIOb@cB=Ailxn*#hJOE$NH&5TSEUkV?--01yCuZ=KA&$ES!APHV`Xb5qJn51rog&iv
XgrWThct{J&w6*d*n4@~+=g0p5Z^JfB

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/term/control/repository/TermRepository.class b/mallet-core/target/classes/com/agh/mallet/domain/term/control/repository/TermRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..e6acfab5092a64eedc46e3afae0d21f6c82f7cd8
GIT binary patch
literal 806
zc$~db!A=4}4DGDw0*a!X`~!`NbMmxkf{7l;8VMNhWp`KxXJ<CEgNA?b?!S2O1N<ms
z7l@!yq8ATMr<3;ewXd&l&o2OQ3Jo7T2F=K%9FrkWQ7PegY*Lh(J7H5E8SSi5+=|TP
z(iuD9H}v2A2z@9qsE_a-xk8=r>;6bY&W8;KC&nf`&#ctRz+x&MjJ@MAI^?4aml4|;
zE&v(S22#f@rOqcsD+cjFxWMnZ0xt-E#GbS7U?Q-uL~!`4)PRP#5^iYX4i-r?e9oZc
zrUc5_9E?GwClifsZ0Y^<54@V;3UP#X(#-^EcUl+IC^(~09>cGKtRS{ZjK8;E>Kqzc
zNI|FCGh-WxOId8N@%es^i+l$A-7(dt;#TI8w$swuICRozQsL-Z?m2M~#!WK87ia;U
t9fLKpbvkfHr|Cl(Jg87q@t{g>lWdF3gBm5yUfZxU^>x@Kzd_}D0PjBj2de-8

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/term/control/service/TermService.class b/mallet-core/target/classes/com/agh/mallet/domain/term/control/service/TermService.class
new file mode 100644
index 0000000000000000000000000000000000000000..d2d16532c0528ca03b3c4c398d285bfce753423f
GIT binary patch
literal 2148
zc$}qGZFAd15PmLxQSB&+>z05+Qc7DucAAJnT}l)JiQ9sUlX#Ml89rX@i*v0knbRqd
ze+4rXQfA->@S_;^Wb#7nY2EgNq|@H+v%Amk-u?a0AAbS(0vmaZA!Q+LBZDkM;R!$F
zuFr#xySev7v@}C@Sq4(CFr=LFZVs1_vyitj4x8a#E9|<wbKrKl?+fj=!!DPBtA*;i
ztuW9k^xa6PL)jAU4hgsWYlcaqvL$+9Bz35c7*-l1K&exM1ntb;GjUDYm_mV}7>J*A
z?H~@GZi&5E`fZ^Y?q9^0!M@^=R&h(mO1QC>e&lWpSbBLBamB(_8*gEnVLntHH|i-F
zbjZFdehk%9x6L&_3Ao8SVoUrGi-@=z3-=lBIQ4qD@d|d{INm|Y!i<e~G0U+0Ce$!Y
z?8~6N>icU)W{08eG|sBLtxZVYNa684UwETsLMdFsdls(Scpo<yZjEBZknadxql`pA
z<Q1KAKTuN}w;_p`JZ|9w3m@9}2oA&Lvpni#)G>v&4!IwTP2zppsh1lA8iY~7yoK8~
z7O*(j!Xx$tIa2*KL(@4IXDuX{mX=}Q4RJn1R35BG9v|b5g->jJin|Qni$m=4UQei`
z>}x!dEyL7<oz3+`%#hw!Ays|Nxk%=q-}32@@SYq1^caquHyhK}9m4W1<xvaU)FM+2
z8HkOzyC>9+X-MjmM%d#1E?3h0|0hiA0~rk&`w>ql%C)dA^g-Bea?`J*PiQ%6&yy*-
zJ7kK?oWF#@v`(yxgT^$dk>*M_4O!Ga46M$O@nu)iFpT%kpDPQmbes^1@k$94F7^O}
zeR^7crz8!{|H(Y+oe)~PV7mMwW@&z<?pObDbM;~J=dF;p{B{_tmUtu$WZ@j)iw2#c
zv=x(bSM172lH1iF2sJlsQ1H&sq$6@DLQR3XC$*y^=Mr6Opr>f=DOwfH)sRSt3{>fR
zkN&<lmmhtnD!+qO=AXf;+<u0MUlPU760<bDuh9D{a&!SqVjA~Ja=mYc&#?p~E8~VG
zE8}Pk9<6g@BsL<@)-v6;eXoBKoJHU2?A$RfFQqHL!kRCopX2Qmo@0(-DMO-(QfBrT
zH%aB@ZzwNiOPNyk81Bzxm`Y-srbIv&goQbZ@ET?)ss-Fg;`^rW;55D}R`6vKUlm_r
zH6f>pHCm-ea}hN>prB?5?I9i!?gA0`HCbc{2}x%Cy*llg%qCI<2!aBE7_uHG?{Cqd
KZ<f^8fqwyC%wt;s

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/term/entity/Language.class b/mallet-core/target/classes/com/agh/mallet/domain/term/entity/Language.class
new file mode 100644
index 0000000000000000000000000000000000000000..fa232d09f2d66a6de80c8320ffa0de1a22d9caff
GIT binary patch
literal 2924
zc$}S9`&Sc36#gawmaGfJ6tPlUfyOq$#}=z?ZBU6cRBU*(L0Zs0hU_G)Zg%57Q2Mmb
zzotJ_JO`+r_V{y8|E8Ya*#w9ra74~wC$n?!cklPzJ2U&we~<qLa0$ODh%gKnor=!O
z%X)=dmhg4Msc_TQec@JgVf&`Ps^_^~4tQC_z|f|l9UTmj+%&`K{PR0!q<5!=Sm-^Q
zm(xQUG;}d2$@y&lMy|kc=H@{lRrDaPpi9GHBpBL@mSYQs-c&k&o3C))B13&<>9#2P
zWZR1)3i>o0#mfxcI|eyBs89|o+zP}@iQz)3!F$}|o|kEOQSe>UE@v7eNPrN(U&AXn
z&d@Px+NOV*p)b|!IhmeUiTi6BPGEp+!?+%Uo=P8({19GOkkoJzZ!pBeK!I;sde(LM
zDj{}wzAHF!JDa-MEJ&R}=utD28PbqRP<x~_q%lnO_J!v&oNGa(5ug;<Mc;I6ebyC*
zS>(RR9KvawQE*m+j<*<&?h%dBESVNDWVo2xA93%DWvp`=-o|+<WXZIRti3ALZ}ga{
zN;qy2J%)EQyo>i3qGdtsPNZ6LDFoH3WeS(1ejgbHqZ;iRs%oMclzQ25bCxIOmR;u_
z!$?ai+kh?lQ^6R+#IE|AcFE;LH7NRlD|B(cD8hjHRJcA#k21HiZaJt>d*rs3J8_j^
zXx4RBOhXt0R=s5gOmDz;`~i>Ba9m#)Dz4xI*|Rx@BdsbNcIt;3u3?f|!RD2w-Bq_#
z@e%S0rZh}rW~&(+4Cs}(8*s~;EZdGN#<?f<2)Wpab{Vz56EQi?X}BTxiIUvfC~f18
zLEb%i(-zY~Wl6Yme959WV=bHX09%Smn|F%bn&+-5A?vt_W?14gCH!T_nB^|1LTEBE
zf7zr#O$s^?k~OuuY7@sb%&<*j1+#2(SxsubRC=DgO0Gk@pmVEA<YV#5lEIU5AvwZu
zJ=MhG1sfx?3!L_4wuNX1(JZ}42X9y!;xJmY>L=gjUFYNIK`<{<o@&7f+@hE;Wd*vn
zmd;94691~>_(Y#qYgO=iI$*1CP*reOg9|Fd&`tuTz2e*vgfE$s2QTrW@3?eC9I7<V
z{%zEv?o<nKjoXGLyky>S?gZ5q_rYF{bE{SHVvDtq`}?MwSI0@-f=Q=k9Ko(Fwsr6?
zl3MrV-ny?rpcKc~^7c7c(c?%E%6AgwdksYxaTpBRq-_f~yfcNT;3tNY&n2jWU+6~M
z-;^$jn(^2O1?{CfDmr#devAM##^f09m){e#LT87(UCC~qW<xZ}KXnc2I=Y{t=MS1O
zd`i!ba7`imqxcMw(EdD)@~xU+!<%^NDVVg6JY&B=PpxJ}r{f}xH|f8f;o1XfN}mCU
zhF~K!My1Q}spA_s_HZ901-B%N5GfYH=W*Z*`u{R?`HE8H+bQ0vr#Q5US2r;@{1|Tn
zf8tbx9&}<n#sy#<7oSPJkHiAWqoJF=mwG72I0k9HlfV#`8mTOiqN=RzwvN%7j!$r9
zA(7p{_--BJWKSJcx4%SzBa+LhbxaJe<NEKr$ajaa`)Wq@*z#9dt`pRa?GmQZ7Oov`
z{|js(x`t?Bp=}LHp}CTsSSGP*ZrQrq;1lvn%tklx@gqdT$tP{$MA<~)5!8p<Fx?@^
t80n&-pWxc+`kS~Nj(1?ybFPr3j}@$jzrMk@_yG^XhG6&+KjT*%`yY>`@__&V

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/term/entity/TermJPAEntity.class b/mallet-core/target/classes/com/agh/mallet/domain/term/entity/TermJPAEntity.class
new file mode 100644
index 0000000000000000000000000000000000000000..5af758425c2ff320397289afe3c0567bf11537db
GIT binary patch
literal 3980
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

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/set/boundary/UserSetResource.class b/mallet-core/target/classes/com/agh/mallet/domain/user/set/boundary/UserSetResource.class
new file mode 100644
index 0000000000000000000000000000000000000000..66a05580b9218284ef8fd0a881c8935b188000fd
GIT binary patch
literal 3854
zc$~FYZC4XV6n-WIV=xFRRU_7}QZ)f_wZ32lu>zuCcqu_zYim2%9g@XlH{F><{a0;I
ztEcTb{Q><^J-sto69jSy)_%zD%<P?epXa%EUh?-pfBXgD4uT#e(3L_mgKivP=-=R*
z+^%xJY%i5IgrgV^OnAPhCK<YN`L#3-BAr4{28WPg7;}P}&C3<L#;aAKY&WQJ&$lBf
zLR(V56hywu!&mlW8Yv33B4iMSj$k+(HAade-1PLoSYZ!ePT;FBsJ?X-PaHpl!{|$)
zKZ7GU%5cIEkiv;VPrb62L(g}-I<GRM%0eyj8ig9j<qIvIMMXB{@g5A|qZE#3Z~`Y8
zZoC&75{aTP*txm6ogwl~ioEXGG;4}W&zV_W8c*RA!^I#h+p?}r*FysOA_$+`6{YGn
z$yN`1Den7<NTqQaAE$68gHK>F47Hv1kRC<FRU{b_OOF`N7do&dC9*iD>tTptGFRAM
z5#yaWnGRero?p|Vp3mR{E|N0bbs3K5cIq;(4YSDWn8OU0a{G*MDT7g5rb-P(E!Y$~
z$owwq8`~=xT*YT(>x6<UVHj@9%Cz~S)3RF%TSJ9_1{iMV-m`M^YYa(EgQ2hB`C>7u
zl|;D8OH~><S_m9oUE`sr`|)5>RXob&=X(Wgx9kXQ|AJ7Jz+L8AS0zGnH`^@Moy&#@
zcUYC=yH_e6s^vg>$_so3HpkFi^=clih;+TR60>ciF&vEd1*y&2Ef;cE^vXV!K}f3b
z4}yQ9ZL~>>mtBd-swUPv=}{`~`F=oENGu6wzTgG6e8J0Ql7I7>9dK#$mVv!g7olmA
zpOlPhHOdUbsRu$?ls?N;hgXVJ5MGp)G}I5dLOP*WZ|LZ>H@$4lty`)hEJ|ffTA`3p
zRaxStBZMn0qrFwvxz<L$<%^ffaw?Jk+#;bYPtPC`eL*Yp`mRd75GA|h`R*1*Ho;lo
z^}1)u|7OS2-s(LSxVl=-y(?+6BHz(=Ki+?ggjB{2c~AOgtIxP%os%SMyc$uLU7?-u
zDn0J!+E&c`eoDTZk}yZ&v3Z6kAHwIv&iz)`pLNf5b;2zbSbBvt(oY3J>)&Zq$(6lK
zta=!1dM+WbV$_|dd^y^Z^7AWZpEd5+!=Tm<(T$GmcETF#7}kuS?N79jr5n3?QJ=xj
z_T1S2<93&kTU^qDZXb@e-JRz~{eQ(bu|1%!qP|81lLsv}rKs}?2;`O$=zLzhF5^Yt
zQ#1$Btf!B&fo;drWeu4jx5s{}cv;%3T*El_xKUB$#A@9wZ|!GGQqzsoxhlf({Y^Ez
zT9PE|Tvg%&%r@d4q{?<9N6<djPi9rmX-wUafseCvlTOeboQ`^Zm!?)XwYzbRMz2$E
zmfre%&+r?t;gR2v`k8tO+@R-SbkXw+l5_)1!@^DK9dB4;47UK&(q8GZpgq%xVnUt3
zZ3>~?E1KM`oeckq)ZppS-_gtP8pm!Y|3vmlHu(z%-{9;|&5%9D{RmyMM@_ivjoHm`
zXE2TlilAF}sFg6SN!%r<N6?EeaE~HtFuh%5s{ea{J_A!G#588;eUgmtQ*Tz{0Uk=s
zVV*`G(XT+ip)T^jK%W;Sd03KIZuRfz{+EX11+2szpHjpmy|bF*h+$~G#;2N~p_kiE
z?<OgG%h0oo!r3Ohtf9h8tB6&y)>P67L!sED@z~H9pjJ#{P1E=aU&j>Ejf^jt=jiT0
zt&unvBkh4s5zv_r3iOEv`VAr31?ac<E(ThTfeso)FU3IZMU8ZH_mU}~4~qusaARr{
z>L8xsdjoaQfKHHQhA{p>lw#1&-YF7pK=&EYOoJ}LY2jsXjoSo-d9EAlA#zrxZ&V`{
Scr>s<pPoMjlc=I*-u}M}<u;}O

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/set/control/UserSetService.class b/mallet-core/target/classes/com/agh/mallet/domain/user/set/control/UserSetService.class
new file mode 100644
index 0000000000000000000000000000000000000000..df75e866a05470d0ad0dbf8cec0809401860d3fa
GIT binary patch
literal 9449
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
F{{y?OckuuK

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/term/boundary/UserTermResource.class b/mallet-core/target/classes/com/agh/mallet/domain/user/term/boundary/UserTermResource.class
new file mode 100644
index 0000000000000000000000000000000000000000..f536ac735429bbbe5db9a96e42575ff754e9dc60
GIT binary patch
literal 2023
zc$}S8TT>iG7(Kl#Sy(oKU_vAs9g+yU5YuXI-~viODwdms$|5g5SiLiyp~>v@INh@p
zKg%jFr4Rl9f0X6dy&EoKMDnoH-QS$=e7CbbfByCR9{^UcSw#s$6_jfj#s!9nJ<$_9
z5oyeyclKmx87?fVRM}OAp?YIy6eAd|pjyKiY79%E?s5_D@~%h{X?di(LZ!SgGUrz2
zUEa|}8j1XXe@muqvb>N+7kMZd#*2ZeE%TmomZjENbfHddu9HKyfopRNmoQ$zL=BfQ
z$#BhAVPsh3${z5oT&1DPM8Z&srF|y46zod9(K;%&Z3z=MtGI%z6-?D|4ev5Mddqwm
z#)>QwR(_M}{gmN$y&tNuD&cKuo2Mf;b{Iz1Ha5QBTHAiYFnJomaB*Fy#){PLh@_As
zxWQ27B8nK6>u=pU7r4BxBR7$jO69Yn+aZMLB+{j!Ly_!=T)FeWShl;$Ff`8$`NrW>
zEfY_r-PO^S$Y~mcCc?{9ibMLQIXKxC{=IXjN9*gDD2}^-9T`{CNq>gX>_`sNZ=_?G
zI$8Tc_PYL=la$NHM%B_Zs8tuFt>RSJA}9Px{Y;1dtZMp2ky_Q2JIW|ZU@c9x6;_cJ
z7#c05x!D(SOil0I<60OljsX05CUd`~oGPa1c4-`>{k13xT(5#xu33TYH+w9SCd^gl
z@C=I%<lh8VpF#&&u6rsXVFoHPfqog-UHO{meoN;uH?Gm~OE=(soxkGyvco$njgBSA
zw+j1IWLaO|!#$^KhKK*#odlIpnewrY4v1j(jBY$pQ6ya}Zk}xEp$bp*_Q5&Q_@R)-
z4zj4Wy~sC}6U)_qYX7bqHADT3RIP{&-xjVd<+OicIi@)iII`gA8eKe3v+R2R7D!~?
zJfEvC@Mu)!OxRtL`Qe|PZZA?qRD_Z`H$k{Wg?-;Wqf^Y#ccVmKoD!~MntlxL`P2KD
zbYBv`CjsCCT0f-ICan%%o&ObVe&J_Se)O1to|iC0&+8}?$0#w(&}piV#!cJ;{LZn`
z%}e`XQZ_9NA7Pe4IQoz%9Lf0nPpB;1`3)Bte!)8~#*mLu^?b7wYtHirefS~&IN9q&
z>2?jw6MBL6wSi?0cLuRXOLPE1fRB9vcfo1BP04>kr%w$&!##uhct8#hzXLP4fk%W`
qq~B7XfZ=l=vxKI9E_;ewl+g;kTQ&FsUy@;sUOn~<>)7z?SAPSx^gqx5

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/term/control/UserTermService.class b/mallet-core/target/classes/com/agh/mallet/domain/user/term/control/UserTermService.class
new file mode 100644
index 0000000000000000000000000000000000000000..4020b82fd89edd8c67613dbcbbd4bd974ed4359f
GIT binary patch
literal 2414
zc$}qHe^V1j7=AWMNfRyzDWa%YsaBH!o)wDKL~Nkgf)UYRoaui@vWC;k9dmbylaJ+0
zv12>a56}<Q>9d;<38i5Sf8_Sv-S@}yKKs7A`TL(g{sQn2&y$EC8b{2)7Z?#3e`B>Q
z)3MyT`E2)%tcC(31>3d56@h3bTS?$cB;rUK7=<Bluj(~StG;J8EXR?dS@Rl}?V8O%
z`erEohFSI8(DxkkC0BO1P?mnnu1bMXrPG@|EDdm^KZlNjj)`{IHP0(hV+PJ)TwqLv
zeIfU~zz#jXEwJ)GuKVEmJp*&6&tCgZ8~6&70x5;0VmWrr;@;<=ZicoKXv{tHd=gW*
z5XVIW)3_v%KLY~-$+`?z+v_xO1U56JPsdmeecP?)v!`N}ZfJ*X?RIm!xUOdec?C0Z
zTs81Du6+i`6A~6kw>q*cRztfbT^R%d_cOyG%T`A54X(#=!@#$=DNs1eIkO;N+itDs
zIIHcAn!wGY6mHOmwd+Wds25doX2}jh(vv|pj+}ux%nK|HlL_mJhxf$w-nj}BDVfL|
z4OEt4eiXN1#&O5MceqP~zFoGcRa4LfrZYzj*F1tC)1I5p{;H~N$-wtm7KjB_i#6j8
z%lvR=0)L(!a8R3{t&z{vtJw-!Tk~pU?Oe%r<yNz?%L`2v1<ShRRV}At`L>#O7h~a`
zt*U!a*g-cW=^B43!#%IIZTVJ1Qa4by=DzA5T`U4OGRMl~gtjN}aTTmrUmLYRCDCsv
zkWfn9`y>5dKfGbILbqa<hb@7W$~oBaUg|uE?RZBCO!d>*-an*twjXri2+ER2j4L!=
zJLa!2sA#$v6)T@GDldt$U3aap=`-qb=G3q!)1EAQO}{E1+Y0;SvE#k1OxUk4nvB|z
z6+5t*W6^cJ&{7@CGs=`azitNm%HeBO0`ENktr-xx^g^;?9##rw`9?+foJWyX&oZU7
zdJOf*hl^tbg75o1jz4hbaEx)B%>53Ln>#=}H-CUsZs7nE@3r=Qey3<b9crFOg0nGP
zptp;7z|~yG9(fc1EvdLdODb|iODcAhe=>knlnUS$xCkn);1RbJm;)-SK#RHG5TE~m
z^IH@q7CzuI$JE?M%tr7a#`&%3*hefx@JcCizWD0B&RJo-gb{u(6Xz97;3{Tt4Ou=9
zcX3_gUFwAB;a$X!C~CZmSj8G4B$(4rSf{@k=K2^vGs9mr3z4q=2K768o7_`bB_dn~
W9RN=>Z6*GmYH174IF8U{8~7Is@w&(W

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/boundary/UserResource.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/boundary/UserResource.class
new file mode 100644
index 0000000000000000000000000000000000000000..5a863be974bc5dc7bff8857a88291d00670d8448
GIT binary patch
literal 5689
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

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/exception/MalletTokenException.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/exception/MalletTokenException.class
new file mode 100644
index 0000000000000000000000000000000000000000..0d0cd3df9c3c322cea3f3532bf35eb2d7d16a89c
GIT binary patch
literal 653
zc$}S5O-}+b5Pbz?0Z|b3;7xCS#U4GNUW`PO#h5_2m!&S%-IjE_Mt_zk6A%6Xf0S`{
zQDeY^p_5EzrqefXrt|*s`Uc<>n>7?r^iZl}31x=kz{FgHV;+krl8!5VYenL08o1O-
zE*}Fqamr}k&F?S1eTMRh(#oAN_`Cj{cn~}iI^;cPl@8nfe_?+B`%e?u-WzzRFmz^K
zk4!9-=4m4BR0T#mYoa-NeRD7MFOH>iGm;DqUuk)r#zSfQVi-}R<(oi617TI>e+5f!
ztP+OHS@H{(Z!>tYOcD|11?Ogz6{M!=4;GvjL$fR0*o<z36|r>E68l=uq&AQpm36fB
z7q6p?33lMoCS-?^&@PZyCGQGF62RL(ID7$nCbNJV=~|v%p~Nbd$=aT#p^lXt#=|Na
Y1eIA$tWkE0>}r9+pg>k<JqO$P1c}<Z82|tP

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/exception/MalletUserException.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/exception/MalletUserException.class
new file mode 100644
index 0000000000000000000000000000000000000000..4cbb9452bdc98403a7996b1a67045e4bf76b3ff0
GIT binary patch
literal 650
zc$}S5O-}+b5Pbz?0Z|Y&@u)YyVvinBF9watVoX5pWvNTeZcDmdqd&`&i3fjxKgu|}
zs4?Kd&`Fy4>YF#ydH;BQ18|DX8VV?SDAloqGQ)9TVlKilk3|$o$CbXbB5^hiTxunk
zkAa*xWi;>R@y@r+P(D#wxibcT*S{AJf=5D!yyvXaVcY*N><?i7X(HQu0}mC3&dlqP
ziG|WUO{AS(fzi&IXpY`31%FX2otu$lX!uIY>ogup+ZV%#JT2b@A{q#*GW*L}a$}V+
zT+VV|ta_Wli)E6CFt0Z^p{yRYOh2&TtQeYI>BeSsBdmy}la|QWdM34jyii#~TYu0x
z%7|bG9<4!k7zr%`Syi&GP$U7o{e#07uxC;WsL@@^(<_u%#WHEz(=^nvlEZjdMT4L+
Vt%)_tZjoLskQ?O4>a6Er8=u7$xbOe~

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/repository/ConfirmationTokenRepository.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/repository/ConfirmationTokenRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..47bb21ac82b029689557e147245ca19ab232d159
GIT binary patch
literal 645
zc$}@0OHRWu5QfKv5K4LU2rSD6OKby3fM9_Fttb~TiJQ80JkewV>REad794;>A)H2{
zfDjLf#rQSyH^2Y!^ULEC031O#gqDEo1aqmfvCNgVnq`W)GEP>dre;XcF`<>D3oH#I
z&Ey%nk)d3%L3fK&?QY(3A*>4MPSm}UR=G^}?<P9o5Y_}7AZ4;F$hd4oD%TH4Q<*AO
zAJ9~#OPYYr$hh=$wx}YY*Nd0vA=jvAuQ{sNSlKUXNy<iE!<FVSrUO-%VojxhfE!AC
zXfmg`A}t{QCGjx+$tUgD@E6`(4o=P&sp#0tn#Z5LiQ>Qe@*is635n6ax>mO_#EKGq
wVXU`i_nS8F*Oz@y1+4f8{C^U@?;)&13)+4cc$S|!K3cHpqgidi_F~?71<$0?{{R30

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/repository/UserRepository.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/repository/UserRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..e0de2783a8d3a5dbfbd840fe6546b516e0ac1547
GIT binary patch
literal 2076
zc$~#mTT|0O6h2!l<>CcF5WL0<isK9!AAG8y1%s3+Ew-pL%sAtcY{O!@o7rrT{tzGh
zD?a!G{85f))6fgkBFKzBB%3|wJGbxT?Ed`q{RaRn!9or)1PZQf*wo*%8#D-*wmsRP
zT-b5MRO{tRp_L45#X=czEmhNghw^HBn}Z7kCidw8wF4@AyRy5_T%Chq0?(!L?I=`S
z_;p1a?2A;NZI5bd?}xP8<3>ok9gYxqbq3Q~$Xs6MF4bHL=a9KEY6wi%x$st+4i*#?
zeIXTFr4b{ruu$q`Thk^){z*#|YaZB@(D<Q29?RNfdQW;=)TE%9iU?$x@kd~^#(hC`
ztkC19Q+j++`V-qsXs%lfZ)_EuWS3vYOeS3!3tb3;m8MY&%m*v%7k7ieNZf|lhJ+ro
zRct5*MQn$Zg76$ccLU}TnD66sr@NXGk2GeKV@DPrPh)Y8+Go-lYD`D1I-FJyygq?T
z1Am+};1>0nNgO+L8Yspe2~!gSU;jbGK}<#XnR0|o^inie#lM3$*n1vvj8qUp>SP@7
zkF^I!JvK{kW2TzuEqg$N7^_{cIVERx+ls8UYGu>v>5LUy#d6uHS{s#O*@_oU3r&L%
z{9)axIw(pe#agmnJ|i%j_VA68aoF3%Z~u`~-=uTIYLZ(oul1CH*Tvd)v5X&ni;7+-
zN)s0R#pJZ)yKzFj<+j9bM=TZc){mb_c8EiQ#1uV~O`S6}V7_+<jPVYLjF*m|y(h4D
z(z*MW6WSHNBr(C|GllPacAw*{7^}%xxonM_X`Sl5sTNJ91fKTIFT&%UN!<*Y-Lc5y
zB}QNfGLVHF-kQUB)s4a!?#FSLC2$d!OZa5qGODh?1j19*RWKLhBuu5~(TownwYJ4H
zs%PLjx=+={*=$=q2RCpXM~64@xfQ`}#NQc=zk3{SA^slR?_~4<m!TB>5ayHhQDQZW
IpvM5e0V!0FD*ylh

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/service/ConfirmationTokenService.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/service/ConfirmationTokenService.class
new file mode 100644
index 0000000000000000000000000000000000000000..d6b9a876dec25589e73bacfd44f2e0895d199407
GIT binary patch
literal 3938
zc$}?Q`%@EF6#gy*mV`x+DoPbZR7`-l+WM+dD`F5ZBvb;5eb6PjftAf}+y_XlweNRp
zU(^4fzuQj5*G#8BcltMVdhRAbAVe~ZnaMuxJ&*64^WAgr{`23{zW|)WF9B4cT7pkT
z4Qd&hZmRRDqN~P?l9;~9Qw~GzS<TR#^9<F&(1ag#@Jk5DsE5ojm@>19Iy0+eRbA(f
zk~XudW+<-Bt^6fr8jfY^3O&zjDX#RJMn<!;s-u}k(wyVQSbl<GPip<tRh~0#%`vS-
zhS6B1o~#wEQfI3cBO;J(G8)muuuT{!_SU}@Z{ur>L;`5WOA>a-*ohYM;U(5}G+h}V
zAG*X4uvCN0=3knFq1ajhPk*<JR=mtm=a^%Tr5Q5}JC-HA8s$exb}!l_w9D9s4u)Nx
zfTLx(5;Ie(eo1wBlHRC<hPgngUbayx5|Pl!(6?Fm+;B8!g9Hzc_C>v^8svYw1+*?1
zhY@7(=XBQ|G+oPP*c%)!4<dm5=oXCZVYnMCjkl~~`H2c65=C4IA`+UYM;J#WC^C-X
z7(@KUvXH@NtMgQsuHqo`3ojBX9TI3>m2n&=80s^ck-oU-S!4)qkfmZuC33>Osz;is
zD5qqc#%sie8BXha-x}^^Tq7k!l`%J$(=~2UF(NoC;hc=~c%7(PYLvj3R#dlna@G?3
zIu?Ac!3_cv1@Dt_5&aAjp%P_aI8Dg5RJQ=47?5yT#vq0mwy*lTXqq}#DPhvQs=GXq
zVQ2~7C`MF}ARAW@lQ1G9js(N;tpK4_ZgVGUsM9)63r`#P2~CLL-;i+?W7H-{zCakB
z?sLRCDa&cW&T+xci3(QirVUHNb%udT&G6eP?p0qI@gzMOMwbWcaD$MKTIRf#=IIVc
zOm-}&c86g)9U0R#(tf;!w<WwIV+!vwoLJ{qGcuNHJC>VrT#FZZTXB(G%+b2>#}mn^
zfy8*6dg!V3T&c_m75W;cMYBmU#5QU+TQeJ?s<b5&SEBK$6_8WW>;2Ku<WM3$H8OUY
z)>5fAh6bv??Wl$`AsEW=Yw$(yeJ@~l6Vdtl%{1X_jA;gsyV+@OB?Zw%Sc0b$s-=nd
z!l2KY)u`_eSL}SVBLk(XX@onoW_nb$)GT+n*jMgso~?~reWhyU_dEjRbG^oOa%&hE
zYMgvK_opmQ%iQY#tz{bk^<7VXx!G)fY^fv$xo{9G>?}Js+F7Xj0dE}_gc{tnZEvTp
zW~bBY!D3Sfk5ct3=;)QT7y=p?qoYKM4`_m3ZRKckM4+cEUUdzT!U@gRh>v{+wIWZJ
zI1`MS){J83L~I#Br3KTPQ*0s>Hyv8bN)h9zZ9BC1)m)x>c4I9*4&W1fD&aF3pW_RL
z&eeQr#ymk$VqP{#L(QnE{Kj9OEq?pAILQU2yn{hHCF<Nh7&FZ|Hy0^)7AjTrn$VUe
z^DdvS8!Dacrz(wU4v#e9tM%v9!ZuII`X)dJ?{8(ihdWKULu?x|3~u%7s%>*y!Ve6G
zD$0a}pBUPoFG}Aod12aM>*zZNsHXFD8XOE6daJ@D9kS^|hMt?nrvTl3G*^QenwzD!
zN%3_=_r~r=VBI|rA$9jYM8of%vgWDz=-NWpUGQT!wvmIIG}4h*!yI()9Ng%+VcwH)
zRD~=(`>SYJ41uPO!YFvX4+-J`9e#}MOV~B?7<=N+uz#{Q9NvKgOE}c?2%$5+?mr>5
z`ktV-3V&n&gB46Ip7LHo&_;&Z$wdcUJ3U;-^M+S&g<&E`&Lwo=79~ai>VyTGwA%@o
z1D9eGSZf%G3Y_y;DB%2!?jrm?fu!dNUa7)UoCKC|h5(K9F5yBv?0bw$OBn8@AeJyH
zBzrx`*XXe!`~*pQT+L@E6$*r<k-ivO5X2sI;{bZ-8pa76!39c_h@(62cqNWL4?P{R
zNcJ{it|HAYEK+RM%jj<bO##6>5)<eTc_x5{XSg=mJoyLSd<6A@7otE?>s9M83BB*3
jyNeGBqxb0kA^k-?KO*~I;%j_|?`b4JBlqzmen#v63!IPM

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/service/EmailService.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/service/EmailService.class
new file mode 100644
index 0000000000000000000000000000000000000000..034c202d332793c01b4c8c2b2f72c28abd931e15
GIT binary patch
literal 2492
zc$}S8ZC4XV6n+L0HVKO_v4XL!f{G+4EFxAUs0|QMo1i8%7W+bn%@7tgyPVlwDyOHv
zr=RT$*7ltCd;gH%dU|JqDHYBU{jfWCXP^7r*SYieKfnJ8;5Hg5bfD8f%tRbr3@0}D
zHn&{vHLQoL8^R75x~3h^3GXm;W^=V95=a_IndpYeFm3xyi#OJ-CU;#CT6Mq49nXpa
zAzLro_d@Br7RlR=EvzE_cdM-rhE(gzs|(36Uh-wb3bv%<HP$3=itl{6X(@!IoYKMr
z63T6zd^e8axPcQUP9n`P_O1jBCv7QsD9TP#ltmEm26;7@&6PIzCYK>^X**shq(|ZH
zgXIl;z;ONT7We7g6YiFf3G_0=qi}6xGKEt(qcWdin9Lr*Xz9Q5R6}JopQ|a74^4c8
zj~R?WgiGQXRjoIB5c{+RK5wEQ1LT7O`wXWKfwqtrO<YpQ6d|jT?g!NXmrV>I%g`O@
zEb5vvqz|$vj$sp56o+zcUiwW{vk?=cuoz;BfZ_5{LeJF<Tw^%@KV<7CnJPZB#a8I}
zo`LHOH{WPW$D`^5p^WS>lEM<N!B$!SZ!0HogUVl&(wF_dZAVgydVf7qvGglf)hd+X
zss1ExV$#4Z6H~}D+&HSmwymX|E$X%InZn%4LSd=+q_9kWm)?tp@;r{)s*mWDmJX@r
zd(x^V_!I>LGbUy+$Iz$S-Cdj5uu6WTA>=%_LtpMNBpV`ZZK?CK&x2W)2SGkpdQ&s6
z8fo6d0`Addas7sBpaUQ>SuHNk-CtZ-DV7WOODn}n<zZ!|TwP%3nf1LO<X%|gZbYff
zR3a~=hN(G$v+9b1=lLO5u>=eght8H&!M(s*YsFykwt}S@$#{IbMcsGl`<CvgD*mXN
zY#x#PKy}Z)`_#(SsPkw2IuRc)Ii6UInyW%CadKKG!RBs_OGkb0ZN|cNhoZRiW*y&Y
z+)_Lz$|79%>yNl{l+GA&CRAUS^#Q(hSmzvJN5#|K+&@7t9^pLG#j>vFAtmt$IXo~%
zi6Gf-T!w+tTLwd3ji6}nPD@H*J6n$MNH$c`wA51#xxHEDTYG80cBo&0y)NpJOMClU
zrV#9SHrYr_+wR_dnX3Acw8gxmxK8db#i$C4;qcxGC|SY}=>S@<D~AC(EFE-V$8c7i
z7?Lu$k1QA-klcX@q}7G2<srTQ8OhzWmgp%5SVSiYaXcizBl<N@t0GJdzW^J)@+*wz
zTKO@(j}aE=BV%WfBtsSY>TRJ>#S)+;Wsc!<lH*i<S{Q10LaK`X6)AVoS{eQY#!K`t
zOvV1dspU*8efkCZrsA3SNNg8pGx4jtIG2fE*~NuSoWO&-$SIvn>?N*t;76pD;`nlU
z;wOCa0@HszCp*Ah%wUXcDR)P;^>g$-PY(CfdjNyDK)23C%F89f4iS0~bGS_StPbZM
z48l*~3oPp}hwv0%QhMglgRk&4?UC>8U@Q1W=Tu26Bz0)%Tar4#Nlv2U6=n>K9n<;f
z=_EV|3Bo{EqKmXwX-&Y^vdYnbW+d%&;y2v=8O7&1iI4Z-z;QBE*Hsa1k~QF8$Ums<

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/service/UserService.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/service/UserService.class
new file mode 100644
index 0000000000000000000000000000000000000000..954e4d7fd788e93e13783ff2ea6740b401443093
GIT binary patch
literal 10795
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
V%{(SCarG!EDaq>5Rk<cl{y)@ZL9_q>

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/utils/EmailTemplateProvider.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/utils/EmailTemplateProvider.class
new file mode 100644
index 0000000000000000000000000000000000000000..b88884374bfd10d086810d2b40fc609d7fa3f41c
GIT binary patch
literal 4336
zc%1E6-Etc>6h7NDaccrCp-}omQMPGGf7TnPEwqju20}70<I)TbWjb8RyRujHTH2B1
zG@-+LaK$sg6*Ily0eC2equq7v*z3~FgyE(;lhx0j^XZdxbUrzM{r&P!0BFFiGMs>!
z5}cfeS(tO+>@&Jc{g{f5|ETqh1;&B7Iv3omJ210+<H-VgotlT!P<G&ak9OIH6ah6q
za1&uo8!C);;QDfNi1XMeE;?&BCc93-yfeE{U;OIP#?I62O%j=2yk4%`f>^tT%Y<t?
z7!B9U1fP138A^hPD$Pv8{eEZ5yYG&E612w}?k;D~6RC_#0x1j=X!@LoCTfIimj}#C
z8@Gv_7pJkO0~)hNwX!mRGTg*${oxnQCNsn%n?1^7g7a&0)uV<>QTH>G%sl3zOB9P6
zt~UEI(-C7hbfj3j;YP+Jy5{?BB%&)FDLXNv3D=cC_WVHW&)c-e<Nd~WeXZrKM}oP>
z3A*`k0GEPfb^EkrxKCajH0@)-yv(siT<dz9XezX)nd0rWL$*DtI$YGq%Hi&Wh9Pe3
zM1PA0-Hwud5qg1)rK*vu>|VRtelRrqxqMKq*iEBcFg3<7-L@L3uB==er?cnfA3t4L
zN%p3YCA4qkzcOp5&y<PXnLuyJJx}wW(yuM4LZ&?I8n?0iHL{xQ5iMgLlB=ui?q~PM
zmnm~sG~|74=UF@x&&Xt)$;k3W)mLw<4K!i{ZTj{OmZFGciiQ(rcCE(=8n$OV8uJb=
zcYx=PsX~g$7{kGM_wGKp6Rr+ih9j*WaUlDy`+3OM{VadfZOrGVA>_Lxh^f{M_aNBZ
z;pwPH)%^6Mb9K;PPu6!Lil=g4_K}<-&m?9L(IJ`XV%<+hOrN4rKm`%<Il;WB48b$1
zto_ii?jsS)Fr$Wpr5UgU?>Mkw&ob>qevig6Gkz#B3kkoE+m*d6aV2BFZ+NWzG)L{Q
zUJ_Howw2uF7)lPD+>jx2;7k)|_-((}VrqxBV(eLHO3ZpssN%Mrcb+s6$Mn6~JchB?
z9Jt(JCjB;=ItO;BHNi+X66{)56C#0j51EN%xJ?x%cid@Ycwr2gg+thL%LP*7K>4xk
ztAK5BJJE}Ulq=Q^$NN%Bqm80THn2W32Up7QF_020TJ3WkSQ?JN#jfnKe4tDYw`gFb
z+IQfWQ6bC?GtjT82r;WKHKpwKleJ04(;Rp96INjUV{=@&4=HXAv4Q*fm>Y)DyX2I9
zeIva^()&hy--z!qi0^U9?obB*W4%2RWTn+NMhb6QxEu{;%sJ#56EiLw7kCnx*NSD(
zoe~uGZa|K9K{)sxvOuadtJF}Z1uNc;qL?fQ-J-=D3#xmsimBCUF;$^4(ibRHUYeI)
zye7ox9Eu`-VhM0IOxXorE8dNQZTLU#VFfoajRfpXte+4g3+`j7%Qog|&2T&(bcu-=
z$z!j@V!WfFUw$94sEV*uc`(Wp)4FmPYlQarF&JT=n$lb~9QTleyPj)Wrf_wiPF@2Y
znEyr~<c4)*x&)s%aP76O6D7Fez?D~<;t%`G7#87eI05#V!EzSn056Q#^09QVoW1!6
zIKN}%1f0e9T-FKi;(I=?FTi_Po`!Q^|DRx;tGRRO=1V96{5Ix(YQ((+@52XJp0`jA
yHZ0PIa3QC0DK$cJ3vXEzX9VR5GQOB1UxLdisskV4-&MGVtuofG!!q223;zHkD3{>?

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/utils/UserValidator.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/control/utils/UserValidator.class
new file mode 100644
index 0000000000000000000000000000000000000000..a9306111420d8c2682a52a02aaf9f453367278e1
GIT binary patch
literal 3221
zc$}?PYgZFj6y2BCgg7X~w*?wSYe;~xKC5VJ2m?hYAx!`)YUwb!gpp(>&P))r_J7ph
z&@Xkh=xSHn@BL9-J$IOd5JGj)ewn$?v-de?pL_3LfB*UifID~<MjP5CbjavL7ent;
zeO*^dx>ZzWm!EROW9YhVTBi3oLwjs^p&KD|O9;z21esynu*-^GTvf_?sl+{{V3&2%
zQmQU@wm*h#d5&FDs-9VLm3bOk&`V}P_iTsZcx8F5uyQ%8yY6$_DX5lV7dVYiYPM5U
z+=^pb#T7>{bDCXKTy9hy)7w-GXS3qjN+sB)WLsGo4-?bFGLE2^A+o*=%9Dm?u5*jK
zF2l{3_CEI9@&urueJ`6-{oeTSf-oJCaTLcWU^UY<e1`i6G_38!KJN+NeW(*SDdCii
z(>TL$^&o~B4i&k#!|zyZcrR2K{TPriDC1*987BUF1{kEW?is6`Vm%sbKuoRbPM$xj
za?9YYoL-c0jzRrUY4Ht%S3J|Ul(fH6_^#H*LO9Pbn04%Rv%m|{8sn(xMopsWI3)3I
ze1eM-VlsviXSmh`Y+4in*K?|dS9N#;TpeU?v%*OUGns{?HZ!@D%uUay)yy2jjb<Ty
zm@P`iS&WE^9A(gAdqZ?Uv!Z+zT$1pqjLW#f(6?iG!nR9Xw-`F7l3HG6II8WL92aW5
zCgVD8Foa1{s--WNI7#aGE=lbyS8!9tEsWDCLJ8MPu2`xypD~p35biJxiPS}(o8D@a
zQ?g69qAxGK5~;FmFUq&E1cfhT+!fUj5){P3FeZ?aFeyXD6vIg$z~dX9lBQDEi+sv<
zNQ=Z`C1~7i5!FX6i0xe^)bgc_86lM}Z8mjZofPN6eHj|k46^C^l>B3^$=kZXLzrcV
z)>XOJS^rQ8;VXuovBcf6#N)9?`sj-%i7@h*lQ1u10S{`9inCR5c#&@?S>5xvLs^ta
zAr-U4n@X?7K-*{IxBz%4V-b()<x7QpW#97MYbm|Gi7Y+AHxib_f%0t&s_B|>x>gox
zzE(YIIys{)skz*2ZYiCgro($Le+o;=wp>rQJc@IbygW0XS9435*|{Y(lbq1h$wmwP
zGnv$EE~lpEma@rw{=sZ+*YtGk|G0047Z^HH)MPlKnHJAf%gfxE6QUJ9*oID;a7@t;
z20Oe}lM3R_dvA+>xkM=xy=m^P+J&qxm{StTWMA!45^FWPI75o)5T+QeAM9=-m`Whm
zor|O=@9D-`TCW5S_0|ubpzLT#jfr0r`_uzPu9I)iOO={}Pw%VIR&zDg(YchjtB%2^
zeDOzi1#3*~qTRVFIaTHhrfU-Kq(v2{3)U35cxx#TF1I~8LzNWOm2FXs#_5a>(c=l|
zz!~UR27^JpHe{$@Xz1UjK5ys`AtGK+)b66OPOQ*ak$O|~7xu#Ow_x$aFOYun*RRs|
zFxu&Rg0N1a8>e9UJ%2TxVh!+H!YV_F+MRUi(~qHyV}bb`nGi<gcw!4Z@x;g$`kDdy
ziOvA+9P|OA+w1E9GA!6+Q?x4NP@50c-A2Qp0b%NB9j-)N#rA>t&yYq4^7s}$dX3)S
zaQ0zj=nXEsMdD9^-`;?KmfmaUh{gE^{DC_DKplS|z<=iNXZ_7Yn0WUEM7}4Vgq_42
zj1i5iTlnk;L?gF5en;EGb{hFS{|?Et;5G6F)4OR!$P3^idJv<a(E9+1I<-LxgX7a6
z<8_jWfMh@|UQ37N({kYjwAKS!Ln0mbUSlAV2^clfxzLKv7zt0I^k1S_U9QtP(LiUY
zPG<;JUwQ$Zb2U0uKV5WX1$1=!3)_8>>^tPrB4J-=Mz`?z$0mtfBh_9fs2e_Te0x(J
ht}lS=A`z|QIqekBm_=;R-d)I>{`Uo524(Oa@DIQ2Nc8{!

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/entity/ConfirmationTokenJPAEntity.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/entity/ConfirmationTokenJPAEntity.class
new file mode 100644
index 0000000000000000000000000000000000000000..2edbda2aa90d1255e41f9f18cf4f5275ff0d6d56
GIT binary patch
literal 1870
zc$}S7TTc@~6h2d0DzJhAUZ^PEEmc|Xq993As;QQil%>%pGPGkEZD+~u)X0O0KS>jb
zi4Xn&f0Xf?*$PCq(fF`)=FE34-<)%He*FCQors>$(l8}xAWcb!QZ&fu*c<+iyKSyo
zZgumGXlO=*i&9Cw#AqNpTOXn$G?b=chepU@lyCSQm$$au4sW-GcAI{OOXYS$5k!kn
zTIwCQ;H%d%=x{B4<@s-gdcK-3T8L3fn*&DU<^9}iI*_WhV6u%mG)Bi54K)J6wP@x+
zX(}?+vLoEG-{9?KARaX9G49ZW^$_p3Wgx=5Hm4^XI!UJ(B@Hh|56b^YeI5Hfwl@Bh
zLm3l)q!HaJ;*^k0l<&YD%06xYuC=Z*MC&q?n{AO-%Gb6IA*0hUf6D{S-E9$sGSosf
zgj;ID?Q$&iOehhUD%5$qD`0jc)JAXZ{Kdo6eP`Qxl$MJXujIXAG#%?v@Y~&vf@M<i
zjzE9B>WgB9(Qu(w%zMS<jl2h?_;R&WE3R3^DO4*@OSP3AHWM3mg{vLUuPVdge5}QD
zU#h+2>Gic@ZKJdd8U?=z8e?UtM5Wu=6oJQ4NHZ{|^>rRdqxTMzdP}0Rg@0{t|H%Z2
z581;r*?08%1OGK?vvrKqiqKnrbCn0^ghr_tjfO%O4$j?lwr^q+BHa>t-A?>`cJ}|6
zU}g}+i~iC{L^)Iw%)^@B4I1L9G(DK<U(`9{+i&vr@|}r=ZHIx5_r@*nm8z8uJDqd^
z|78L%+91|5G);`oLOTxa9OMl2^8!W}ae#-b2aiBr!go2OD**7!90slen1}<e0m#Gw
zSpaxxdcYX8S;$-jUdJ=b%u|c?298}w2ARrzCH5Jc1l_dPFo#!Z4yzLx!1NZRalQ>J
z<NOga1(`9<x$C=>&fVChqq&>AbUZhe+@;C=h#ABra7%*C5ZH`@$^@cJ0X13fMUi@0
z%x<KYIb#cxusc(U0lPCdOwt`w<RnbZMF}tgFeL9HU_^2W(ssrWJiSk7*q+|9*O{|^
zQU87u80=Noq)0I+ChUEBaHw!!X!6q^g}WD9xQ8?!<DCA}c|OKDL67YEc(11mkc&}I
GpZo&3xv9qh

diff --git a/mallet-core/target/classes/com/agh/mallet/domain/user/user/entity/UserJPAEntity.class b/mallet-core/target/classes/com/agh/mallet/domain/user/user/entity/UserJPAEntity.class
new file mode 100644
index 0000000000000000000000000000000000000000..66fe45f605dd2f8c2afde8bde8a8f8d95328902f
GIT binary patch
literal 6571
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

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/configuration/SecurityConfig.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/configuration/SecurityConfig.class
new file mode 100644
index 0000000000000000000000000000000000000000..bcd0b1af19e844c925878d1c1f8e4df03ca07bf9
GIT binary patch
literal 6647
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
K9sk6?vE_d~v03>5

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/ExceptionType.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/ExceptionType.class
new file mode 100644
index 0000000000000000000000000000000000000000..67ed5d7ecfd045454d335acde3c6bec6dcfcac6d
GIT binary patch
literal 1573
zc$}S7YfsZ)6n?r}yHTJ{K|s7A>V}tzqNrS?tQ|Ja&Cr21nvhZolysdbozZXp3;%}B
zM2$w{XMdFOyf0Nzj32gSefFGl-sfE2(|!B?@e6=C7$On^t~;$}$==#7HErK_qmmbF
zhW2h0ww<UQx+V9y<35eNR#4J^{%X8<>SiGzB_oZDfNZVaSgX`mYMOxQYFBbIOiz-L
zWqO%vy?jsCn5jpG%uI?=TUD!uwx%vGt=!jZ4d(2V(a)THYIRvxHET_OWS9+;xem$5
zGgr@|s;w=l4gH~NG5Zl21I#X!>$OVND07{oGKP2`mHP6cp=o-JSx00X!>9mpoHDQI
zrhuD|yKF9p6F4biRK_Ws7La!QR^U=Gg<^HberA_^JJ>4K*LPeeqS!MS7jag`Ih?27
zeh275yGi9dv;DSP-=vEx>^oid?cLp(eFifMy<lr*e+DMN^@}nlaDfIr>jhpkFJQ26
z@T5^(m5|QSB#IKU5@ZSe67muTBn&b0bs0A>%?89v+7)oSQ0#U@RLoD6RJpZ5)9J5z
zfm>@g*WIvTulr=V_m3)zUFXYJTaN9o+M&nP;}ogDZo15OAQA20eK*=}Z9K3;iizBi
zl^Sh(1i5jSMmxTDws()T!VNF5ecCG1+X`$}jDTdJxJt`6>-h2DjlZsEw##<rslJ@q
zYKM+n@mM4IKm3<jmW4^Wv@`VPOAEv7#RUknG0HLa$C!_CAjTnv$_RTUNFhz<Zep7B
zZV?+JWS?9I!|!nXD^9#7M(aS&4EH4|{v2kI;PF$0%$my!6CW`46#|P-{1HD(PkAqj
z{;B2(@36cA=3cT;T3-rcVv~ePLUH24=zA32{6|T|0_%b+WfM>pV3EFMeneApY@Oql
z45WBVlZyBmf|cwbX<DfcMAJ%lXwp`ugI?1TJ5WqZ>fo?xDP$Tn4|Xm=hZf7eie;To
zB$~gNe2+_Sk>uoZiW8BOQks(-Cs#6@^l~yOa-wi@RpR6@C)bp{xWNyYdW+#VzX}<n
i64;gXQb{8;g!9Cw=t5K)Z4EtmLPaLxDO9k;@$L_FK3nJj

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletException$1.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletException$1.class
new file mode 100644
index 0000000000000000000000000000000000000000..a587c137f9e026e42898e715715f7fe7cea39b9f
GIT binary patch
literal 1142
zc$}S6TT|0O6#ha>)0O}gQ4nt^;pT-1a`8TfCdCYG>d*o*Jk*e`G#HXjlA``1pVb-1
zaU6btzsM)YvjJOWd~nDl=iBd`-EYr1yZQd}>mh*0xR*s25+afkx{(sFVEg-uwcAkk
zE!Sm{;&`tDD~y7c9kl|cu(vjAMvm_(`tMQoU6Tn&9awIQg#sQ-O>Y-ZCGs$XG%_Nx
z5_%vBxc|Q@r8wT!l4k`xl`C(Y$ZnLZrc5$2$;d}C^4~IYTSh)nQP;MSq2BaK=toXK
z#w=HBh4Q+o30OL1fxOoP63${!fanKx$Fp1kiK%Hr#CZWDd)9%axR$r8n0}>YHwq4O
z>v|CQ0ncPu!Udj5s#wmi>Kb=llyHf=a)!B~77eYYuC1(>bhFBXS0r5J!9KOPrmNak
zO@Cojsudo(CgC~{^(?DeZAGo>o9Y(#%M!-9Kb<d|g`$y<btWZD#T_V=*Om=U(@haK
zXwOcz<()ldN3`sb?K++lJ&B9j5RlCKb!ugQ(eaqs+TUS8)!K2%Gf?zx%iXX7hx21+
zZzZzq*K}mZJX`Twfz1jICxa(Wd4_LK(z<86e&~3+B^EXOx`+ijpHto(s=#Dn^vn;b
z7|HNF7UW$k3|W{PrMo#ze~geD=C_lN$a5372yYYnfdq|!))xqe-?E<|e&lcOXPilv
z-y^vi(;=eW9XdiZ)uES(iXA#iG~J<NM00=4p5Xjw`Ui-}U=Tw%hhdCif^ZUZSRh=4
z3XM?5b5sbccnO=ZjwV9F1ZF7hRGfS-6tZ3P-Jx$BeVZc9DE-5jZG$9c<3)403(n@r
RF2<gDED>hoPSKM~{{j}s7WM!D

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletException.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletException.class
new file mode 100644
index 0000000000000000000000000000000000000000..b38a5db64806e57bd9087be951626f23eb2f776d
GIT binary patch
literal 2478
zc$}S;-%{H~6vjURMz#@w@~3Tprcg`(lb}E$;6MOl%iz}7)HY7jw8O~u##XUc9!U=2
zi9FM*Cex-fz32n<d3xRUtZ?0w>OzBN*1P)7+27ecI=lY;&tHE7@D$&L(T9E+0}28d
zlrZ(Z{z_LHI<KkuHg}9B(_U9t%P~wYVQ|;rhO;MOaw+q#U%{~qUfWqNg%CtYMp(fR
z6bZ44*;MsfU2W=(26I${zqEAQvDy`<Z84So!&OgQdoNC8O~OH>aA`P|`ib6(5GF#H
z$TcSNUreNjiSz))s}_^c_aYs}9gN5rRqz4EBy9R!&<&DoT2+JV4GH~A%LJXkq>K+0
ze1wlBY~6B~62d0Wnoi1W^QucO3G$SJX@L!zJY!ZaSXGFhD7YuYkjc~hmEJI1bymTg
zP)AH2Z&*yPUTLol+p&dhUO`0I6q6t7)g#?um->}3+*hzD3=}+J@|O*x;s|+JK~%^?
zCQq4G*{D_-7y1JQ54(}i_yspFc?c>V$yigcj?X2`n^sM=TcQGJ-%WODS{G{Faa!sz
z{S+MCY1=eCn=78Da%b73goTWcDLWwwzNz4`h!L*$bP;`9K}^V@R4#v*PA0XiP<IsU
z3U&N6uO)KXWV)EnWzSRbbVf@G`<{Y*VIMk-C(n=KMeSMqxzOVZ4uu}1NvTXaQ50fQ
zfhNSsbhfDFv+>M%LCcr4{JECT=kgLV9`&EORdvy^kuZ=jt5jzr8H2NIyIE#dQ7<=0
z8KWA|8ztQ`#Cum9aOwu-H0C?tjmq1hif%I7)@yEr|7}D>aO-~SmRpiAOkb;VL5J5}
zvJ6Vu=*>7JoiL|vR!?<N1rD=lQ+K<UPRXzhni=QZr0-5(vTb`7&Lu0WWrJ5$z2~du
zncbo(tXoSG0(5BFw4>n~bKbAZ#ieCm)krm1Fxyszr3~=}CT?VORqTyQE6Z%>go*D*
zY$eS(vl0#6wwX;Qb%HKhfbJzx)HDjyIDizrAJN+%;u@x&M^}D<^cM1icNkv%0pj`A
zod?L&R;aC0i%~nECgx_Tokibayn{9B?sgERZl;5I>OSpYhPux>n51r@gFDnMbs$r>
z@`h&i<CuO|>COhV0EV$m*XBM(Xl<i7p{uiqF}%Py%CrXqlW5Y-mnQGo>lNb*eCe)}
zBSZd@JIW$QJ36KD6heOylKx{RWPBwP8-v$RKMG_I_0hEJP4tN?wVRN~)C*KF`WCA{
zW8;l$KXwx*5;;xjm~oe(T>EvGQKU9Z${Dp1qfD=p`?M!^%L6-0*f~Gg7`fl`#6I!B
zE)e#<AM7r<&-q?$l&~v)R~zxfKJ~z=gni@(yHD<mp4bBq>;_>s{a_EtJ?c9NF~UCa
zn}mm+*n|gmkFfiGuo?}X;cNOma&srS?t$n}*!Z!>9CXF_d%QrG*N^9}*Ee*=fB~`v
N-4h>nNA!#a{{}rZ0LB0S

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletForbiddenException.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletForbiddenException.class
new file mode 100644
index 0000000000000000000000000000000000000000..bcd2c7cac206db2c8e2f80aaa23fd7b6f72ab909
GIT binary patch
literal 731
zc$}S*%Sr<=6o&uwHqNx#TCF#5;m#^JD{)a3t!+V=R<Wh~bQ-6Txs*&s^s#g!xbOjd
zC^0i$5VTO6KsdL2`E!!jx91lCN7&GjLRv$nfGlzZ`*z@&)ESu`bzLS+?q3TUN)g#I
z63k?GHXBPG_-6CV>fMhSf!?~fs-HI+%?`nVH4~&}U=F$lqkudL3NtOGo#ek+1i3@*
zb9qc)ZCf|=mYOd09kVM1_nq2|;;MZO3j`<s6V(dDfDebv|Dmq(hp1|wAafQBRVRxU
z_gN?M22Awmz*Uj571-46Q^8~ZGnkPh9um~2zRn~;H3H3JVMv|is9(|uN^K@b!SIp_
z>M_ZLI@ah0k+4~d$5J*Yq4#1KwlJ?AHXcOHJc{bam6Ugiw6XwwXZI203EG2lQdm^0
jktDKeTMlJqt$Y+>3CjscM@7X5R^uww(S*I0Y+ru|Q5@C-

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletIllegalArgumentException.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletIllegalArgumentException.class
new file mode 100644
index 0000000000000000000000000000000000000000..97502e3668916da3059325fc2d5b4c54a8eb6651
GIT binary patch
literal 756
zc$}S5$xZ@65PdDn$f6*M+s$|pO`MbQfSM2mB^ihj<Z7Cs9oo!7njWK{r56(qet;ik
zEXE}!8iI5ul~+|=uU>cc>)Z1SfJ3aOFoT$ZcoqpH8TRbJGr7|@J?^?fo6^5le5h4u
z>re?(+}UEFW#F6DFVwyt2!?#U*{N9dldH<b>1CtZY%}azQ*o8km_^D!I*SalL^CN%
zBg%hsF(eP9FZB_FwPoG#TW-4Ccg&Vn(s#;JiYs*t%rn&fC#p`y;ci7ap(p&G8jF8O
zD|Hy+$3c&tHD^g*G()c|RGW8QiWIEC=5B{8Ir2Y)aov|ghO>z;HC|Sk!SKXz$epO+
zFM%}fhS2?>cg_{}gcgdLr&~d&Y*CXVL7U?n?2ah0fjJuWXffIu<mfBr$*Ukn2uN-3
tJc2#Jcpzs63uMz#B1vTi3WSzF4q_2Y5m5?7iZQGZPSEQ{+^bRf+B?Rf->Lur

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletIllegalStateException.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletIllegalStateException.class
new file mode 100644
index 0000000000000000000000000000000000000000..67ea67babe8b462d4185234a86b7ad2fa35dd665
GIT binary patch
literal 654
zc$}S5O-lno41Lqqu3f9GRqyrY7w)l#s+Ursuoa=D_vtonNA{!4&WiplPl5-3fImvi
ztRDzMsZJmyna9gZ$m`ql3xIR%xhSFRpi;*gssf!LjXfF8y;w#O8BZlQT4qM)fyp&_
zbRW>ds5J40#ee@R7pR`8M41Z#|G>YMchZYw5_%(}RT6gnRcXHo#}5nY9!?yr3-tab
zYQQd((a1<cKLl2K>5K##zDnpSkEf)^avE`^<)?v+CQ>V#e-<ldt}=oC%F37Y?g}_D
zWtj|%Zojr;yYaZZ{eSLBpgANnPiNOs%a{ylmhO(yTnBWi>^SWu@=mQF?8D(xuurh@
zF>qGnY=ANw;2a&FJV88iSc1#mE#MYd#Rf<14;bp$ENC2Tp}|x(YGRwwEskp?E`tlU
J&rU(M`wm|qyF35@

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletNotFoundException.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/exception/MalletNotFoundException.class
new file mode 100644
index 0000000000000000000000000000000000000000..08defaffe64c22462e8814af0374241b3c447e46
GIT binary patch
literal 728
zc$}S*NlODU7>3_;8)sT=t=0`M-mHRi5)XBus69=mLTj&*PUAE(OUYzJf0kYZ5B>mu
zl$aS81TEAi5WX!>-h9dH+w%*6BW&o%Agdu)LLLQzeJAuy>W)mGdLEM|53U7`q=+3E
z3udxAhm9o<1M~dL>fMhSfo^wtSFO&aeMWF#%>-!}n1imtD4~dw!c0qPr}=LdLE(@G
zTpklx+tv-erKU#%*X&Bc1Gh1wxO!j10>R1uMA@Nig>f+aA+Gj^rh1<scNz{=Bg+;K
zm>v5ACVF(>sYuld9qRR|;EDek%*hdt2%1yhW`dpuf#$O)qHcQ9FJ%OkHj|@pctHjA
znPftpYIMU`IIP7JC7Tn-dkG6$m{+fw45DTcW%b=E%4;I4EI{AceFS-e_Mn^$7S(E`
iiM-lYKvh{QAB9-LathK>Q!#?oq)PQOWv`{%*WUr{;ng1i

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/ContributionDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/ContributionDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..29a7fd5c0eff4e44b2bff6f077c29db30a222de1
GIT binary patch
literal 3233
zc$}qHYg-dX6n-aM7Q!kaDkz{<MGc^ArE1k6tsp2GE)t}*_ervZg=9C~Y-s82OaDiI
zgZ+}CANm9O^f&eCJDU_XA*3lyo@Xv+&N=Tn@0^*PKmL0AJAjAyDU1->G_>pJK&L=t
zOYTS`C+)1UoZ2$eo<Qf6Wn12~KwE5dy$4<B))3aw16|;>uU_)3oH6U<a@4mRn<hoi
zHDz94C^ninP^n0bq~FD(4B(`WUPJ^sWTBAT6}VWVzfrP%hsJz$5br@0r!<__aR&VY
z14sB~ta(`wxEE{c?daGP&RHGjFvw&)Ct(#yM6@P2C5wkKjPn{U=(vb?h?jQqhRkjn
zc}X%nBje<yWgA)7DHROU_AGCgJlURWrAjJ-XDg59d?}gCnqJcMR!lc<6^mS3+bx&^
zcZk`7(^@lzbs1MQjOe(EYXbM{JXrRIE17U9?Uh`U(n7&>>wGNwLV@-T*CC%TV#f&M
zAaq%<4#zl*n2u4!TR)S3q8!!gD3x&?H*iznBvtmQb6mBzM=?_>G8@0ChV_!;eX0p;
z;9U*36giUulP!^>Ts&S|{)d&tqv-e->{>>uP8rc{+|h7X$NRX)Lle{qmJ4+Sv{cE;
zWmFJ%W3}$;R7dLOGZj0Z_y;=TnBuu3s|%SxY5ONX;n-QKP2&R%AL@97nE*|#BMF2o
z`ks%~yFO;v(|D|74)X$i#lt6MHP)=!jt%)#$AW@9m2Fg?(|E2UfklCybg(#|#~N<*
zv7=blv4R)eFMsnZ_hb`SaScg<2Q5{0o$3C$pLH^1wKrke=29u2GTk+q%25(cIBA(%
zm#(GeRbjigX%z*g>QBXgfQ$>og4gxI_auJk+7&pF4)`E)e`8CvP!le9ts3%bLyJQh
zw0wofr->F>G`&qHvm#xYH$Bs3WZg+CYfF{Bz|V~n{9mB;<V-a!3>D<7mhSS#c+JaB
zKo9N<OYrze0>jM?G;2;>vjS%to-~1Q(kZ!VbKX*$J=n11CKPkrv>C_oSfsL0*}Y<K
zC$_`LA+N#K;eaoR%LiAOW$!rKrjd~OR7TQ5ZpbtbJ-^{S`QYr&;JsHhssKEdb|z;Q
zM-q;+T`I%_YJ7fJydaM<^fN!!Vg<6f?dajvS?*fW^2~Syr21MgqssHJ#;7VHeO?%=
zD5)>3jDQsD3$|^#vpHETn(DMRzUnl5CvdeT(lq=aaG|*>pKcXpTw*jKs9zg<K6D|l
z#+kuhu<scA4dPc0LU_rx(-)q=I$OP>fRFGo`)+3RicXaA7t~g3{bO&S3B08N-k>kU
zW<cPz52n0D(atu)2Xi0WC||CTfaiXEf=}6hRwMb`_fK5G3Gk&K+E+fj<VeB)!d^L^
z94ljJ50?_`ud`odKemU7r9HgI;r%imj+Zfeql_mv%Xn7C((C<1#}M`byD-3@&hkIV
z$H5S;u)U7+7{>)n@M(LC@^xR|M??x~_FbIMA;X{}d~Ysr6!JZo*kJ0_@KZhySs!u}
fRyE5l%DzSsJNU+DD8z5vZG6iFckw-b#JRr#kMhBi

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/ErrorResponseDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/ErrorResponseDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..ead53db676c1d293b724f63011c937511dc8f011
GIT binary patch
literal 1637
zc$}qFX;Tz25Pjhq7>64{1ra%9cTq+J1zbSolEp<VL8|;1hOj#@$5ti_{4D*lQhx9U
z_@gX4vvL&3Q81}WDxJ>j*F7)&`_Io`0H*Q5L<K4hR9UD-4MWoo-{ZE&gPgs(xg#9K
zP&4HQu9{(}Oe8l<)S}LSY2gkmhH)qKZJx{9KKDGKY&Y1JJW{ggsG=0MIB-NkxnW?h
z#ODh~dxrX)P)kY`))ZI8h+#01%!V>&M+NByIYRNpekgbCJo(rsj%gDOXf)7dp&2a<
zT}K3X!L=8p4CQAL6~Z7A^Xsb&#%9s=wuEGuApFaG`_CF?%Qq=t8}1rtx6pxm41L!i
z$xyw=y`qRqmND@Fod&urJVZCc*iBe4)an>>;TC~TCNj6krN_c!^b(*7*OX3!p^a*D
z^54tWw5Hu}VE|7U%>1d`mJ{clZ_Fowq=A%$Av|Rm(Y56T?&O6{cs_Z@QASS*=~zNv
zl<P%h9T78UcU^LaijzFeZapu<eZJ|5^aTkHTd?B<qhkoI@DU3ybd5{`UlCEnb3%KM
zS$L_v4gbV8ZeaqG^v7eRG4x!av$TOUL;CV}<MTp6$a8mBVlzWkSqF_-HxM6-{-%)Y
zI!T6>Z0K-rgG*QM{~4=P-lalKXKxXcC|7OE&}aCXxB}<GH-CjlC`6-wwo6RjI2gmg
zwfYIQycMDH;npXveUy+?D|0O@N=GcZx_+JiFUhbL6oZus0wL!-9z}v~c3dEJdULO-
z)9SB+2K8DnOwrD!mC;(A`T_PmKAxtzCN`Rwq1h@s;0@l=T8DR-B`<yXAO-^xsS=Fr
zA?k-pXf5GBEssj*OC4gcglBa4yoAvbUVS^p?<JK3^@Q3;h)pz_slT<L8?ET4E-^@U
n9lO1Zk2%c89QvpsED)bXy<=q7fbZjZ37MEOqgT;@Wz_uz#%9iL

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/GroupBasicDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/GroupBasicDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..aa20b200c69f35a1408a4451c04dd77b0e0c6531
GIT binary patch
literal 1575
zc$}S7T~iY=6g}w&wRN$z6a*ASMQs6D1wR;z%t%28Ey4`Qd)kIJxZUlfSx0>I7wHQ!
zKKKLtQI0nOW}p^l+TGbra+92M?!C$V{paT|059=8g$SYv#2myiz>wMJpSbIBzwT~U
z_C-}Q3@k}s>Scy#zOb9ZB_tC_Ik*gmp;Qf;F0VJ-Cigs{UFq*B-qtFt>QD)?wpv2D
zZ&VPrR(M-h*ZsXfHMy37zq+%zVW$~ldn#x$<nv|A9%|{irGNmdW?`{##$1+dT}<H$
z(g|c7Tt${)>{JAA$unF;z>uhf(yJMg`Fx>#;linNqm|=5#FN8t0wWHtVU%I6x9t?U
zx-qvIR`Q)L^rdCo!FAkVaD4Guml~n}@q>~Kt0(9-Yuj2$zuq7IO$WCy$q=_eW0?3~
z$chQvVOZ?(0G!QwDX0mCbXof1eb}rBwZkhOS+eDz%Dr8#q#2(WW4a+Jk}t~r5*8WO
zE;wL4g^zFsZC=-WEwvORYNR`?@#G(5x?-JY!2q1|_@H&_^}DXfOPxWe1x+q}*UEB*
z(RFYv`t8;$EAybZOf-uf%u5$|dH$B#t(gs>8$oT0E8Y}ZDDpbFE$covQD^wlJ+l1?
z?KK^#?I2WD@miXQjdn@>oB^b3v+nysl|0^Vo2=!!-2>dFHv;oS=%tznhPyOcpq5b^
zpZ)>%-A+%@KV=s?h+z=-Y|k#jeLSExNmVkBs0H|H3N5v{=_4dIjxacTh@qK7j2&X)
z8`+~4Z=48$3?XD`_Yk4xXf#Z{ti_)^#y|nnR%DJU!VGc7k)|RwOB@f$I$~9sRdZI2
jnRChZ$Y_d?8MF;}Y~7frZ^8DS;Hh<qVnY@78IpeiPhhrx

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/GroupBasicInformationDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/GroupBasicInformationDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..f0ddec6e6f4879da3a27bf88cfad5a4a1b67de0f
GIT binary patch
literal 2997
zc$}?PdsiDp6#q?ltRz!O5khHev6R+;+O<||OAsvqO4{(yAl9nYNiqoo`-q!el=`TT
z<M*lm#L_?f03JV+$2*%~5?)0PaL(SDJNNOskGYw@{(1H%fcNlg6cKb7=;Y`^H$!|~
zYzos7PT5?_ugikZ&^@Uf<xeqmB*#``cmX{Iq8u@BhW=1I@RenzUCSbQ<vOHN^*t$U
zhI7fWY*VDpHFF_J^$~y<IeHOi=n|ERwZ$;pCSMAi(4aZjSfpa;!%GJGIR=nm7(Bo>
zVYNkt;b!tsYX@V~e$H?V;VcE?yIEDGMD(?R)4Ws^=kc<E3mn6Eg<-Vd+NLP4nWCc1
zJDwX<rbSg1GET|$Y@vP5tSm7Y`9N7k=`qZc$)o6u9&|8Ww?sfjaLK?Z$7Nh$xVB@|
z7E~4AEV{N(j#<`LOzHT_->Un%yL@{#+)@q7($5rI!VJ40>pEq!p2V1eagNvUI>XFK
zKxT+2@^(MD+t~?b<SK`WH!0y1+M=)}HEdgORBhD=?=6n&c$=Zq3FRIn_llh$up1oj
zYG9|roa=&=l=L)?TO1P_M^v@2M=;6hvQE__$w|M;aJsD<iAPQQ0d5<Z=160PY`2|K
zWL5P@hPOBq#T@P!nCHmgE}3eEnsIzt*2OV4g%!x95<?=HY0X(fB1~GAV*!f{+zITw
z^p;9>XrCqbkw3xgEpvRRlM$z6q+N%qlMl35Rb$F=tY}QVJD3)vrs3Ht$0xW?tsY)L
zhU5{iU&_D(hV-sWrJRx{Xl?`rKky`RD;4P-Xk#HfrZS}6B9);xs~ou)LR=Afi#UB*
zw;-%l;VHduFgyJ<MH!vVo`CNZnJam&t>ez_H@H)K=9}(NZ8Mw^N)nR9{+jxr4gOYT
zCxm<ZYE15q==mcmHAQaX3({Y6i_5~Jd+JkN8G3T6><FC)hTry&?0DXGr(^PH&7xt_
z75M)ikJyY1v1U<da9=-$D;h94H}DE_PU#w5I=pkP>O4^Hr(M^lrW2KV5vsl2s6_EK
zJOfn@9|6Ni^X4mO)7_9}R@nKXAPrFx1>f}uam;Sr{oOh)8cKBs^TH`wvO1b|-Ho7<
z+B=dDQq=8tyu-T7!*$2@o~9}DIpxb#9N#cpX^p7<j%rhCuqb_7QGAL=9A81jp=gq3
z97lR-OH`}+whcdL92$7caQR5tGw?IRg~LVZu~QeuMS>N9{_7x0PeV{o)6OKyh<1(t
z0ropBBKVxX-61oEFX+qb0(gioiS|%vf{bY8ha|1f664!27@px2u#M9Z`V2BW37u(c
zedyG0L$XJYL;4?}b<=VJc@&5i+c=VFN&98A0m>n?wa~qym3IGA!~MiloExv<Vhyhn
zd83AFMBb_4CXv)O-e-7<*&6QAcB#4jsD_W9{1@;Dy@P>%0y;o269jpXUW;ewH)aSo
xa2B`dtO<Dn>)2=lTn{6)LSr_ZhL}sdO?->*@O_wr2pKz%A1H($3HmP>`WM$>X{G=G

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/GroupDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/GroupDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..62a0c8d5081e435374f7463481cf885d7e21f051
GIT binary patch
literal 1727
zc$}S7TT|0O6#ljp0x{51u%dWDESPeOhzQaGLb+H-ff*Ry({?Fg(xj87&hU$T)tAcn
z;1BReIi5`^LxX4`nc1^@_FTSm+4Jl7kDmaRu`eTp4hdleo#<kSo*ADF%`)tgwx2)a
z1&^UCZQ7={!qA~6k7abDM}n;20ThPWf>YLv(y3N9EQ@<u(J33It(9D-R?)canclg!
zEe<;eYn%R&T$H$%acs{u^EJ<O>?%XQn$&&A#IUqO?xke(AtE8FpdT@YrGOvPK5>nz
z=hg~d&E>?cRJf~Mx4Ln(pYyp4;S<*>GpOn{9~p=26og>vx@+C63g6urRPay)C=pn~
zQ<d>Z;2B~_w*`fCvi6DNmW>uLGM->q!czs$@SI_=Y0IdXjXaSgInCEht0<tWl$gKC
zB$}J`hNO>qM8QjpGISE=Y>^?>%&K2b-LXp~mcW>VaRslTG9=ou%@8ul+M*gXb_Zw^
z3MMhtNavnW<`jAhxI?PjCA=908s1RVY+r6ky(!kV;{@I+n8Q1U-a>1~Evmt)-@)j6
z1q;GxxaxOC0v{ACAw`+@3&${YOW9HqmKo;S>Y%31RTpQRBIP5Zn>OF8mGj&^GV&I2
zV!Bf>tYgD9#rcvM_D)R-b6&rPFA8K=4J!WsW#5uPves7$jDWd&Sf{}eEEz+*HTLsL
zGkz@~n{L4t7!;`$GBx{8jT`UT*NNu1cj^=m43~P<<1S@fK6Gksfp3`t#XxIfXM_g^
zC2QN<%~(dY%1I*<Xfb-kX&TDn3(-$w84N3Q(ugvmofF@|zWLXyw08MS1t0y@7r+|U
ziT2R&%#f5&{vzf)(dmggqzm-wL<cSq&t2d#ZC}*!ib%4K>B%}~r|OumWAQ5~bofrj
z$ruo!ryQj}hCvKqnATAmljDdZN%L`v_yWX8!x1*HNwgbd^aQsESd@m|0_{TBCVre~
g<L=YdU6yz|A^=9pBEDUJ)sZ7AlURc0=N@|g0IV<4od5s;

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/PermissionTypeMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/PermissionTypeMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..3036f4d68f4df732c128b9a9fcabad63aa83cc08
GIT binary patch
literal 3173
zc$}S9YgZdZ7=DJ^(q#)FmH@T3h*T4bY>`^6L0gJosiDvYP{7-eOv1uuce@uT-m3q{
z5Bh~xJjdf_kH5*|JDWhmCPbS3u(SKlJJ0i8XXfvJ5B~)4A%0fTf>s4>8rspp5ZmUv
zTsOH@)E76mMb2mFm@+KG|A?VAnOarRiE|264PDR}F6Qi#&Wl?*cMN?=xFy5$4BJ}X
zcLXim<z^r}hAYX`M&@+Qw2E%@D2Qq3Mf}Kyz&A{N+I9IpA#`}YD|m@vJh_pHnwU;y
zUaTl9>e+Be$H~bH8v2l6X!C_f?qrk4rj)p83SZCLC2m-H(X|6d7nX1M`%w$4847`w
z^Jzj~az)<AabKjnFn~b?7d5<!OAP&|m_vRP4AU1b!>wdv#M51pT$eRm!4QK|Fs%Hv
zwa<`9R<BreBpf%%e}-WVZ(xMdR}_Aji+ar2z;R4NxRi@G@s@(5h7?8_;<ca*UA8-G
zdSZFYwf7h%>bi0an5xZ}iZQ&cU|bfFP5>{R4~Co7C3W^Z#;MvTWIepYFqLdnlmC<P
zI9f5R;9Z8fh!uuaa5<$c$oYXQbnzr7!ocYZ;ru+kirk!bi$RHOoIRTE#Cw#*6>G<`
z_pBl3*q9-I-%)V`w`7BUz|fbhiYJwXVHMM|EypmWQ9o0gwpqMH5xS5})oRN2ol-H4
zy9#DBe2m!>Enn6mk$4<%)0;0^wku}1Cr;sASMUkda^nb;xI^wl;=2$E$=De?Pv|`v
z!x9gI(xz~i`KC#dc*f3gbCtV>{I3Yx{4IlagLE|WXJ<?kNWrzK6(2UY4>TwlhHfWP
zrjt!@Q1};wzh&o_xJ#L&?ZP`@ZQWvRhUQXZXU?0vw3+84GF&5*4EK{YG)>le6r7sz
zQA7Wl$<#VSdw2jv$R;BH*H4h2ouFYph+NIuftwR^hAiB{dbKz%8;Y`h*S38MB6rGZ
z_j)?;jS7xU1vw3Q(E8yQy=Pdv_Kwgqp$oKv7kJLMT{;80O4Wb=R5xs8QJLT#xALa&
zMl!a&6FBMGzCLYX+3#j1%ao1RrfO$rC>vRWw%ZtrkuB)x=wGL387k(mtzjJ-F_`j<
zYn+@Itmyt&fg><Sf<4x-hLsprNZ?CBpkWoC#jq!jo~Fu?koG0gw;GnQ!l2DtmT+fG
z?s>vf@B_ouGv!OcQ-;fpRq3KpR>teZ*aG<|G}0B1E(G`JZ<0nvWBcecu;1vT1@rV)
zLuD0hbTZ$kFRiSEPm!VV92W3^G$g<mG|IW*=TM&G{OBQG0e(k+3%y=rI3#8q;ObxK
z{Ph?;K}evxo`xQ}>BZ=>)JtmJRZPQJ#1f4UB`c$!GU=mQ(rabX>nBMkE2Lvl(mo<c
z5M4i!4iITygfx4CG^WZNRYEmPN4<R1KX79$e)AdLm*6Y}?+5_~NS~^sqJM{oWfZk*
z2S|?|;PwIT{Bmqgc|{_mPn7j4^z!R-@}3de+Dowal0H>_9roMAp02~*6JcLEX3x@m
uD}`C=e~GVX9Hm<Lnq&oRVJG}5!G>FrdDyMUo{;Rjuyz=}$B+04gZ}}L)NXMA

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/SetBasicsDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/SetBasicsDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..0369fd20fc75b7df547cb0420370b6d5ae1bc5cd
GIT binary patch
literal 1829
zc$}@3T~pIQ6o%g|l+qF;v<O&GQBhk!B7PyZGD`gzoFdE=x!;xr7Sp7YY#h1u7wHW$
zUibt2QI2Pq>Xbqq>R6`P<aE#bKIiOa`SJ7HcK}cEB!w7y66m!MM<0W|&p&X-<=(Ed
zUfmZp#n4xjo>a>WJ-Pf=3jIhXkg_lUi=kNa>ki-DbL!l6g>s~~6Yx+4QB6gGplG8Z
z0;eL>s<-0@b*`lEz1Un|GjWFAoxra%<Z@+W8!72JC7+aPdSW5p5-!V76;il>p#*FT
z!$>oX{dVUKsZCaRC~G9okf=t|-PRWKxqP|9wCR@nmE-y3FoKH-j9M7OIK#~OQ>mIz
zsE}bf*N)vaLDs?qCK)VGd{m{q$b0`TkPOe7%4T^gDv;i8_u5x1T*VYa+_Z>cqH}`^
z30!AbJntHtw6Jw~Oa8WC7%EFoyp8Hr5p43ROObThuW@&a2U0&bgS~1`Qu~(5|L9j>
zD0SFKU9^o<hN4ge6ng0?siYvL(X(ZBA*YlX`kVQbXt!?#t#zXIgU0XrU!Q4GY;VW5
zU+2<uXs<a!10HDlHyh6l?LlFgEEd{ai|xgpd>c)Uy(ZM2zrDc&UKdIP1fQ(PU61Rg
zGpMsW+dW-(OR>=LWaykz{a>hmGf7qaD5!~7Qm@?D>CHH=5$FY8^*j-jTposcAEi&f
zlek8IG3ZYZjdTcu;RZc9G%_0FGhe~J&`k`}bnP=i3pdTxOu#MNrZGuJa*jlF@+W<&
z(>OA7gv8nr2ImfunLWg%LtOrBth82^)PNyU7^dtr29beHM?{96wf@wx2J)COfFpD&
z&5~!Fa^`S{Jmx7nYVh?e$I$5C?ow<)GsP$jN(1hh67Cz!2TjZdMRc;QG0TKWh?x_J
zqa+B7(=|((6IAjf8DtIKv9aC6i<7Q~Vl7biAE*HX#SB!O8K`5RhxC19?iTTw#uQB&
Kp?@<=Nd5xgqvBcs

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/SetDetailDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/SetDetailDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..1d00c11a0b8cb5b83593319d2d3d9d493aa6888a
GIT binary patch
literal 3725
zc$}SAYgZFj6x|m>M#G2*N<;-8MGPStwGWlhs>CM-u?4lYwe64$Fp|u~$%IPZZ~Ok<
zwfZCMmlXZbAJEm`)YX0O3?+mlHNaYP@0@!c`|NY>otwY@dG;rOSMf^(ZD`jJ($Rsi
zK=%V<*+}LMdm%YJ_rT100^xDXw!GH_+G8VkBG`uQ8X`J6p$nYOI)$XMu$U|u`Ml{R
zEqmTIN}gNJdS%z7v{*FV<gDoyF3nC)sW*Ypyz3MMVzG=0R`#rXGVRbl>sgMS8mSUz
ztdf_CpbI-SbnDoK9)Z1UF^!^?oH4yire|1r`WMjV%2qxnW1NhQWE$xWRliL577Vf*
zdo=Xvh+?lm*E$aw$6lc8Wg}lUr{@KFW0L{I|CVXJ5BoJ7&@q5PfkZ2z1=_5fz=c??
z)0Q*XheJ9J<A^|qN6Jg<PS?rYg3}=#M=>m*+vX!Ly;!!FZo8JiL^a?U&$YG&Ii_O-
zaY9zL6FAVMa;Z)va9qO)9Z8%N*j=xI*s<(D(_oA3k5xC5FO^U^q<Yx@r**uDml&I!
znO_k&RX3$|5A$VPg-BirCIs{f&S*HR;~d5Wq79;P^KdT+oQ*a0))=jfGp=*Pavz30
zN0w5cCst>#T);&Q6FSnkByhZDf99NmVcE$Nr>5;$-ioAm^47)6>P2ANg6Ylrt+Q)`
zbE+xdS9Dy(H8MuU>$xfj)qCLrCUx9EhP#GpH;sbHQf*KSxRv$4sbgApSIDNGw0&L2
z8`8FGK~}z$b*-W#N9xY%xGi-%bJg;@cvHh$@<h5PaOSyAr0S+xJC^RpGA*%{YNh>C
zOfc=_NW{*JWt%t4g*nrmHRke^^kkf@k-uZOmV6I{A#c%Q70%USdft2(@O*5twmn*e
z+)?tYEGCIt9w}?dTPCq}*Ls(!YziRIw=ut!;#!XB8VBPI3Lqn|RbaLX#Y*Zmx<A&?
zi_9qa_9)HnDbrhYa<>eZtwyKJVf&1=U>lN30e2H$TLIJ}#bXV=g3S-2fbJ0MQ<4PN
zbs=!I?n0xi8uhuP?s0vXt-JdFyv7^TC6Tn#w?MMRzydq+Mqw^z49UyK&`Gu3H$iF9
zY16`n&EQOp%s6E?YhJNr%SSiw)Dsd0n{&c(JZ@~G=yz#pXBZzw@DV=N@QIF3@tMGp
zb;Opv>@1ndj7o|Y#=MdB9GCGr3)OFbSEm^m`2nsOb}nz0hBA(`R4&#jOd~_NgSWQm
zhiq;;vUxSlYRp)knd-(D0>jlA`IpoUMuCX*eI>sQU+XBr>&CYNH(EX6n-*BVZri4t
z&KsqYJPmv6TyQk}AaL}#_}B20z+iJ#HkGf;OWs}H+vQ&eN8a2a@HXF)9EFs||A6?N
zlQz7=XIKe$;69(auYh;)9>?wcYQB$lW&A704vqtfRcK?ORqPmCMQ;WD{h<mD9<Shq
z3XVOYLc4N02#wDkI^T^5_Hfq6|0w#g7Y8Vl!Qu!>hcGaw&<-GroI*apJEciaVOkuf
zEQEPV`+~JB7C7_Q7P)3g`0aE9E`g@N1C`y9${-(PU{N9+MB`5}DlqyCr+}w;xs4B2
zY#n<~fJ<i<yKs<k2NYgEeiQ}R3U5@Q6bhS9oLqBMD3aI4mufUch2|b-63uV&rxnLU
zyn^$jbc&2}dYO!JxL&~&hg%iQBuMXQExp6^1q|``)-XdKLoZ^y0gaH5I3teoEy3ro
zf_=!3gNJYx>_h;28|@D(!q*b;C5w~<2|V-@=#I!;5_Hj6Kx23`zKT0fYT9V9im9*)
q1T`x&IFDy6EBz1fC<wVi+2{BY-{7%gzKv;g;X9`HJ$}T`=>Hc}lLGz#

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/SetInformationDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/SetInformationDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..80cdee5b60f6a2ef38c3ab6acf731984be6bb039
GIT binary patch
literal 3259
zc$}qIYkLz#6n-a^E~Epbr4*2IDHcqNu!4$6N)-x)VtUaOR8(}DY}%!p-MG6c7Vr1_
z-7o$N{a^$>_yc_WNj^Tlvq@>vBwX5jm^pLiT;6le%-PA`|K0uzz$yF^M-1x>v`MT-
zyFlWaT2Q8=+*xyS=9-la1=@#f*A9mT)+GlncVGiH8i-4DKniq6;-%1b%n{FVC~tc%
zRf5pBR6$@@av;4dQsJ7JXi9Yvz-EapNC>P~#iFw)u(wV=UveXZ=4h2jb)XAd4RlLv
zLyy4r7Pg7Cpo#(~l6SS%8k_dBLt-Z$VlbhXwgV=js}7vzrQ+ztZUcKH_F|vF;jC9M
z)$E*EP)tT>=DdQkT{9qQxuG2{ni(s+ICc75v=E5TTHy#ChMup%4y2pwmjcVL3{@+a
zNZ&C-5c~14fqsbtI4ID$jImO}K)`T4ccSDt0^6!7sVQ-4;7S}x3>X-cID|(9j;+99
zyLn$RL#1q3@-1?UMS{^N&Q4E`M=OE0yzepd<H^-Uu^hZA+Do<>+Yy)s9+NnVV*<Nt
zWtht`H}ClcrK?G4#yL~6ot#E<GFfl1LAbwxbEcvj74->;CvltylNB1v)zm)9TiSDH
zDRu%+8#pPE!jQo6)p-+$*|dK#xzhZa;15eYgJ+o!!k<tDi#N3{03LI@8p0Wg5u9cD
z+(<5+Y!q7qloJ@0IFAd2l3hCJlgXx~UQ@sqC7#m(Z;I-r4_Mx|eC>Z+VnW9kw`<tF
zn38xNF9>X)!nEZVcu6|z?l;}B4NT*bfy)vv;w2id+hxiE`-T<u#WC&aio`2;m11tG
zFk|_X`KsMia%@epU6puU$F`YJ&sss&w~JazyHpZ0I=GHpJwGR5A<yF*-3Nibd)<bV
zfjNPp`?~iH%6B@zh?iqNwxn&>nuu~Rt!5l@y3$@&IhU1h>vfgc7S7qs&hW~1@jy;f
z0?FDYzx)+SH8g8oFiUsCp5_XAqYmd{aS7}BrW!*nI$eu?pBko%#JCmCdATX&^SXtW
zPdFPh_N=RPumU%l2lL>bRz^Q`kNRtDQ>|KeD>wH#RJ<F3z9{Ac+T~}eX^Y_9%7iLA
z&)P?YG4PJS)+Um??isJ-XRT3Nm#??Q={cfv#G0J(ypShO6)VLFwzT8JI6lJ120oGa
z6rTy~U+#*wyWq`RW?B_ya*7%%ud-}x{GN9dYFGc%w$iFn#lZ#T<{T^NPkY{cshDc)
zxUCfRkzCzo#pT^~2O4)rSg(v7TB!uS5IETE@zBU(`o4-|7GLY<#6kiK0&>iCEq}yO
zL16L7?`YNV4E!K);J(sk;3t7ScNgXBts;y*;)y~3)^X-r7Xmg{CTGEU{otPvzmtgJ
z8prmCxe4<eWkmoE3Y<4GCYMIE@>NRfy`I5aFa&N>0k_Z@<FH-ex5$~c)`d2X3BH*-
zId<{!ny9hd0}n;cZ`N^q&VlwTxB$WkS}AhBKuWv+gR_q5yhsn0vFj%Kenm%xdL(@l
zhe<wO##5Y5m2vt|8Rtljm7%34Zy_U4#>=E%E8~qavdegn5r;+*!*)_T(2ZRjd-=%S
zjf2>OK~hJtkN+R~_;}clQSQ%IH3$dS@m2))9O*?ybc3r65dWgvz}rhvU60(o8wtLL
g_p8BwK;Gy065rt4C~+}<&5qzZ#{E5h#Lw9IKR3&(nE(I)

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/TermBasicDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/TermBasicDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..077db520e3cdaa0d4cd48c79eb8d0b8ef8da890d
GIT binary patch
literal 3999
zc$}?Q`CA)B7=9;&q=YG?^rUDHn${3%(~3QV)dD@Jp`c*ZYO6!C3EOUV)6E9Ov)=c8
z-}imBzeL&}`~!Uan|%CcvgCjeLlt<K+1c;=-uFA^o7q4AzVZivn{X)r51Rb&ax}xo
z5IifUMbr>xIyyReR!cYxzJA@*or4Tb;hvMNScVoq0vxU246BrQ-qDTdpk){&uUjUm
z<Q!WQ8HTQKPrNKrT#b&aA=W_z+Bn(~WM~%ItTDr|u}VIbH<iKY5qA=6MF&>;v5I3g
z)-bGH#5Qrwh%Cdta9wNlxG}8b=)`&kucPHC44Z0G8?&{fo)C_vxLw0>EjCa9Qo7-2
zHpBj!49ZIND0t8&ZEoi1#ul>aSaDr4>8N5N*J1%|#Wp{#;|QaNA)2r<QIVdCW&|b0
zi6*U#(9I|@%0xBO(Vdy-1kI0+9XhO@7~0aBGhqueXNY17`v_!-R)|F}w)=5C#|}h^
zXPM+^R$3JXL%>R%$Qy>3G&F{=8=Z=JtBS~+nzFo$;|BCG_*2AjM5ec|@${A~b)X5m
zW!3Fr7z;1i#rowbY3`G?*%!b8#Qf;zw8v=ctenFUSzTEiniwTdCiA+Hlx4E5BH9%q
zA$J@o%BeKp!f^-#v}Gt`!^w(jP(h4aW}3u?aM+I{97l1Cq5I!0GkA2ewI@8^RKv86
zbKHtJ`6LU8UQ=(VB1ToMyVOo_jABe}EGf4yyilxR*xNbACG2v79nw;=Q&A!$${idh
zB}yP!vAh*`aomkl46URPC&au+Qz7nXsM_b`3He@}_Tvo4eYl@t_dHeIOxc2Vb3WnZ
zZA}$RuB1F@nbVrBnu9lGTNHqyM#`{+T^*VVN<*0BNPyC~%qTh5AFeIlV1S2^;z(nP
z;^kC!hgi6le&bfpa-0KogJ!h@sFByMf08v}`H_`@KF_eXexRx6XEj?X4~U$eAPXaE
ziQ)9pw|e6q#weA8R+7Tq9@kCnL_RaA*%QSU*Acf8!Z;~xT|T>uUS~?r(cv(kQ=|UG
z%B^$W*&ADMG%#@KqjE~u2z5<uMfswN>P&Wy?r=?w{v}8BAb|u&G-t|6jtN_2G!i93
zE#rFH6w+e`yS7_bgEc=A{WVi3IUW6P=RoOfp=MJGHJz!umTZ;b%>P4WabH(2Qozd%
zk(o@2kZehzo#e^5mA4bx5nUF*+Jz;!LxNH|2Q15>iWS*nUUTg}yb!>Pc*&2KIbOl5
zbpDjvyKYWf=QL_V5{ooMN+cZ1reL*ZDxdzUJQG}{BET_WCJikYid)vXd^Wc5=vYiq
z*7Mc9EJD`T?OFJCkn%UK(;Y8}*X0Sn=vAk3iNg1$Y<h3Wj`w&_{=G{{tEGIZy&3Pz
z8^;G6AL1k0M|zGfmN_aCbyq(X#3!<|)~Zyc{Fzk#oZ}08NeXlx&OftVq#(X#=&fz1
zW;Kx$-%2OG<9Hh9gZP1A`w|We*|LUBQ?myRk;}=J)mD9k`0)$F)`kkikKY(J)EA|z
zbx|0biL?jur<q3jAfnFzo1Xe;WO6m~JJ=<fc#xz20VTW~UbMlX87~SUk7*iPD1#5s
zZBrU}h$Q8^NaQm73|B}Am$AY_v$b;8C1)GmwaeJVaFL{&6v}#{0jz-h7FdmyB(@46
zn)T3H88w0jF{6+wS01ME5y^?s1MsM#{umLb;&Q2ty3{%&1%zf1QQQjHNs}ApWbeh2
zza8W$36lNwgx`gAG%qvg#05N2#=B6$ds5+@r`cR6WY{9J*iVo*7cfY}Z~-GU+*ZH@
z4R_Aso&rQ~0a^iinLsyveS!ku#U={JW+K#0uv_Rigl%-W>!Ej&(3&EGOGwVrc#23$
zYAqf`Ee!+%vOL`sA8={;BE7T7lp%e}x2_7azLHs=Yqkl`DEVjcoC5RWd0Kl7Z{Te;
kdk62~V|VRSeC5u*!T0!4Mb$$$q67GeD&}YWN}2Ec2mJSHPXGV_

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/TermBasicListDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/TermBasicListDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..823f989dd4a705e48b375bc464dd7fe0bddfba58
GIT binary patch
literal 1541
zc$}qFTT>G;7(HnzYs(@9Dkz|$qO=8BFL;?LFe6n*nIg=9yr<jH26wZaZPt-jf04c*
z<AXoIALaNZfS2NBfX(b?_ar&zeBYPN*KeP{09eGs98yR-=y8!jFGGHZzvW)QRnuFm
z?+9Nr^e#vx^%6t6SlY_r9I_5_F8bgyJo2N^<IR>A@*oh}lWIHW9UUjWPGUi5yDegG
zQ^esi?@0gY=Gv--7<#tjC}b!WYgRGQGVrPqk@#9hs#5v|uE~zB<ZvDX4)QJrF~l%&
zB+T3LC%>6V8VpW7kwL@gJT8`M|C&414J;q5B*6kMI2ds;ii-^Mry*g;Xd3A-yeM`D
zbOu{vF2*sz;41M>S6hjC^E#FcD~B4kdK)^Hs(BWbD=w~Ll0vY#WSIO<CMyoEGgMBt
zBM#U8*cH{NAs7Z~Qi)edSQqgouLpz-)gqq<TRfKL`w;BWElIguteru#!mxa-HYd#^
zk+`PN&y<#03i6cirZgcOV`UimJ+9sMQEb&Nf`#rN8&Sxm@{Ft}jP9<rwX*)iy4bBO
z5&iUES&qUm?#;~ns?e>dvCd;23L>Q#vKz9gxJe;H(w(Ez_&G&da~n|-`{KDYIT`<R
z3FizgRp6ykBCZC!(=ino{mb6QHEJoCD@Bb?Juuv$FOPageWv^g?4uo?qGzuK`*4$<
z?!g4y!Zh_+LW@Y-#qZ5AN`0Zc4`+2B{j+-*p4r2tJzV}kc-nG}5gX_r%OFpy2hooq
zdK;#exBQa_94Mh|4HoD>pCQc*2Iv$jlg2EeBi6o|b=$fzV{?Rg##4%5&@$kT4dE``
S_w3t!%u}Bux&m2vfb4f_WvXZZ

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/TermDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/TermDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..e709ab3e42f54b1516f6d8ec3e6a808312d3679f
GIT binary patch
literal 3089
zc$}S9>sk|66kP|9fiOZuMXeST0SCN{3R>GxTM1gQL204%s_h{e!r){kolI!y{qhcd
z4*MrnfAj(R^_lv0os$3=2pG(d>^bM`z1P~8*>nE+@5SE$-p20<w4l{Mn~6hc7f7zj
zb!mIj&)W}|*PLu5&_3z<Zgg9q)f!#uLI*kxBusR{6gZ~U%aQBZ>A>@-?*=|iN>S*@
zg1~8OG_$Qz-L)6ANcECHw}~Dk1rEt#(c2Ihi0QACeeKY`S9?fxp%+ID95ZnoeF7);
z@J+4-SroWs?dxrCZVKn5iBouu!9+pEEin<jF>-1zmB1OiZlK@90L}^=%?1Tq=2vZ5
zbnQhaEKDyx6fl;{u9tH{ff0IWpfXgGQ&l~B9mIJ9LnekXB4BTt6eLp|*}0$~UEhvq
zWIKN3MjP7E{rNk0^@{1tJJD>ej<GIiCh+t0ZDG{Fn2C$HBry1LIsz>&eciNnx@tO>
zD<*7QWg<vR9kXv@#F%uqM(w(ZaZCubMOyEcwOg%e*qbKaP_TyyJMFBfE@ssg%9|$M
zQYeXB-S!|RO}-Iq^e!4?h**|+N8n0b(e|#uraqD1#T^4vCeoM|xUs|3^;bg4W-Di-
za_Hz*Ds3631ApBKBbD>El`voermcfu$5T^B$-+Go?_oxu!`ljM(rT>UWP&Z+H}O6)
zY&YHDd>tFNw=Tv56Av*j(5-qPlzz#R)mbs#RC;3#PKO_2!N8)4kFX?geg7PD6cn9s
zlg*r73G}E0$C%7Clj}H<z2dd-iHT3~8G9+Jhe%ls4Vub0dm<g=Sht>x>pKt1g=HsP
zl*=A>dNV;*dP_2N)w;IX7OlD^fr*_#HIW@+S@olHd$y-`jX<`PPL1mjtgo?=I*2jc
zC~mTxZD=uh;7Z&kNOI1JR)gHU3}wNgDhYKixOrcyKn23aA-xLL&MZteEUV(w?$l=T
zwFAQl9B=4WV5qr%Nh}2AFzeiNb&td<d`0nR#-@TGVlT*IHFc$)b`%r%8li!bi3nwW
zBDN>6>#qk-98QYDa!%4huE=Z@gp97MP`~=Oer(r_ssJ<6&v{O1C=&!v%Ei>~>Asht
zYMEC%tU~T@JG%Qc%_=Rpk&{Z|8};SR?7SJpjA~m<--a4a->K=plvKmXob`PtOnb6a
zQg29iyh;Xs78q_SSq6R;=-*$J{Z>`RIkISh`n6H=ZU=$Sxf-Vwl!wOtg7}jUE%<`}
z39W2W`7j>oC#{6X_>!`d(R_tg?cgyr)mh)za~J|IXn^N9(!#$J0#A9;sy+777m(yV
z@d*EWd0|V|dG3S6GG#WllcRJLuHXV#(e&~p$1%?*1;1K@A9;q;V-=jM-~z?v3a(My
zsNfbw>KWdt;BE!8PqzZ>hoM2*aDtRhlF%u2z2leZG;djbb<{?P;cgRI)!9jJ5%@!0
zm?<X+H1`Z2WJqN0(o3jZtl;AqoiX|Z&hj>Wj<AF1#(8FFh}X$sK8@fqF5oIZBjY@K
zq%}2WjammT@$0fix+Zl7@PuCL=(fVsKn3`<r~>Y-<6C@>A9QJ2Xm$oavamnl7yO1(
F{{s=rS9AaX

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/UserDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/UserDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..bf4d98bee44bac8f694c70d3912267593a233ba0
GIT binary patch
literal 2357
zc$}S8ZFdtz6n-XsS(_|0hBgISL9k$2l~qKnZbfOJQry01N>x;Jl5Em}&2G+SgQx!r
zzeM2!KfvQ}^7zaqm~NWZ+T@(QGk5O2&vWnGnfdeY7cT*PhTSw$7%?zvVhrN~*~jv!
zv^?q8t<Cadw-O1AFDqX~w**EC3p*LSh6w{{6B(ESQ?YqFQl3=|JdgG&@afWuLRU5f
zW(x~W-=wRxO0lqWByifqB(efyvf1?Z1TH4*Yi&OcXsz}Jb_O||F)(Ff8hL@4Lt>L_
zLpBAL3P(meoSViuYvLTvGnpuGREvekCCF)=oyHvAFmS=dMZ76+rV=zPS>Lr}Q&|sM
zZg^*VQ@|*<l~;8`fvb!##ALoFSGsnLdKqsSm^X0+R|Rgoa%o7GII^liLn_~D)2aJ$
z{YXW7akTqex9`R?*0k<MYt?<U<6U(EzfOPx77Q$!cn9waT>fuP0x88<Hw%NIj-Ajo
z6BgbV$dHy^_GQCm10~3@`l?6ox`_{QLtwOPw^TT2c5LXICO+2Cr{ap}YSok*YLrh*
ze5z5>DxqFBc{JGZWAV<h&xY@tZQu)m>jT@P{8}j4PVGw64qa-SP3}?8Wj&rTtzuAR
zT9c0Q-Hmpm?1tO2>`{|*f{OHZWT^DKryPxTRf~<_{C_B$-nB5`ktpmx4E@t;A82ZN
z=(ZBb4|mWD36guwS4204dMpp}K2`_Yw}_Nocca~)x+O!lLF9(4!bC~ceW?=`_;q+r
zCk7m>#q!W?*TmKfC&L)tNIY353&++i1?{lnuBy0u5_^A5C&L=91VO|uk<D%~Ta)8>
zkj4(aHSnE@@9~gVK>u_p|7q~VwH(<fS0z1UO;(~H<c*SP?4SL$|48<nx&Zg2U-jJ9
zyb}aZ+D-f5$vw<bchbogyO2lwE*xAfveqRPxpo#m>g(AVeEt$nJr&FMD2>nYvx!w~
zX2C1oT=RW5EPArla@nG%lb4VI-XT|xRV)KFfeS~Q@=59%;}Th<pnoHje83@an=^}2
zP>wDB4)GfYDXj229xF2_@@sYta0hoOCz#2X45FPM(OR$N7oWorc!5*EbG)A7XGY*z
z45p*yFsfg0#^V#t|1`(_$a&nu8s+_j<||4^;|flI^_bd548O^dhJV<DpZf!|iyd6*
z;BAWcI{1L%qYjoju%G>#(s?EYOp(eoiR4LY250%7rLIqAj%Zs+=n;G!2l)o2p4m2a
YKj0_)0vTtQ;zKZpGRaloqK<R_0IULy<^TWy

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/UserInformationDTOMapper.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/mapper/UserInformationDTOMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..3c8b8776ff5cd6d22f54b8afd967d19c4aa56802
GIT binary patch
literal 1517
zc$}qF+foxj5IqA4xiDM|D59c(h?}Ua0^%iH1OgZ<2qnn-B$<Sv_LAC6tn#n)C0aiC
z0e+Na&jwJgrEya=UER}t`kdWP|M>asJAeh`ljuNa3=xhfx)}No#0OzJ!mHX_#RFN=
z3|;feQ+ko1(@O6p5l141Bu6(m!*I!WZBgB~MNQf7>oUkmEtHen-C~Fp8_FrmfMME7
z7cNYkIN`0dYO+c6qA!Mijw?tp%pR4y!f~Xw%f2g=XE&&{bx2Pu{V_y-v%S0)dJNI3
z)cG<)iU|A`R`9(lH5kOz7_M;);X1?Azwu+}P=vc;orY~o=namWxW&*D(lt^l%JdjK
zL3>9B>X7(tjyo7-NUA@wbJp49w&;v=+%<H%iH=F~gey(gdmNLdYrJtB?1jaVMuuU4
zlHbXys_Q^#<$F1yCBx8>0<Bz0Z>S_3a}kPo$ngkMG;+b2vJLCps<zZT=6GV%#EIY<
zO^suE&v48dDN%V8nd5kd=M)L2mSN<wna#%Vl40T0P%5ty2olmL=|&(aTC34yn!>zS
z@dLLdaCd7nykLl|`ehQ^S5TgO+i;6A*cC;GBB@aFo(Poj4}%fCuj&j-h5zcBC7?>+
zy9_(lX{5jUQ(g8E47e#|m}?K4hGA3ceZRad0-7%^15%va@f$%&t}F8vMlKRIWd??U
z=RHpbtB$DGCDjg|Hx?Mf3)*_->7XC&Juqa+n<2}{Ml)Z)K8M%ybSA^(I3h^U#sqjP
z35!@Fo4_k9Q-%Skku`UjuZU%u=xJhr%y1JUWX779AalQo2W0Ffrki;B>A1@{buicw
w^w4hYMGAcwMn6Vr15T2crn}$WGg!eY*_>fQiztLy3(s|IgrrG5LB2-f7ne_%p8x;=

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/utils/LanguageConverter.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/utils/LanguageConverter.class
new file mode 100644
index 0000000000000000000000000000000000000000..1dead3c3a1c9d6813a68032853fb913ef5b181c7
GIT binary patch
literal 2396
zc$}S8ZCBhx6n=)64GjTSq*Q!qDN@ZYm9*Ac>(*Mjg_gP$bP+Aomtixz3?!L#lA!!2
zKj;_Q;yE5ad;CovZ?X%l3yWYrWRjVCpXWaJ-kJIH@4epve1gD47rG7fSm;HDA-l=9
zx#RJm<}9vnib}+gxg!G^-DT*ub1NqLaL#~fp&u5*NJaS$uWdNIE}as2#k?lSWt)4k
z2pPug+*;{4n}Uf!3>nB;cm>1zym2HwXGUwjL%x|X(t`U8)Am}aJ*+~mbm-AAbjs;a
z7$#vO7S3aop(hd{NhsL|LHOMBMC7>2=Q402p?yaLk&Jc@Lu-Yu#z7^LDsYyxaAk!@
zqR@}mFlOL&3vb{}h6^3yAOThB5dp((`((t<S`w~{7A|3&!Kli>oe6drM(tLQ#d-qA
zJrd3^Vc~5|Qmtx&bYHTM)l!b@bx#USMR*7A8n7+okY^Y^3d+#0^sE<(<qfTVWVn8;
zlmo!r(Lx!x$}rcKei>9XC#i8IinVaWPZg08It%IgJiTh%o6)t{r|Qh^FZW@ZBra*S
zEnVS`d(DcC%WynU(RfH<C>;sc#1yV29ethQyxkHLrBw#CLZgpwSoi=psYwFvQ`3&v
zxucdQZsCT3j~Mc&?;sN&gLL1qXoKDT*Pd#i(v<ii=3Y2o3zQZ`9*Pcet{S+<aP#Es
zCAA0-$crl27CP;_o}zLId8i}<@g(-wg<j_C9?cAwRE2vhT+8IYIoT6!NZNL{+PBK-
z*a`$t)r#8w!5KH(vBv{LpLcMaTs;dQC3itY8_Hecn(9h6Bx=Cp{<_O2lL#lNDIVLo
z|B!jwmMpY^Ut^d(Qv#0HpIc?<O;1tU?wwL(mQ}1PVorLgReMRMlYXLf+*c|hVZ7eR
zOE{FlmnK&5m4UA<JOxor9JZbew$+v(nnV+M@G7rFO4G5^@3;Q_)!MI3rv||z9=M(e
zCre6g#r49`w(jJ(yi*tdZ?QpnvTyF_YLUuQmUIGV@vLnJ?q4&jl&x<~e2VWZEZ|8N
zJh|066)lTO`$5tKA{ddtR4sglQWhl!Yd#2sE_yr+MQC7?;mWBpYJiUAizl1X?b9&E
zWg_iD^7PP1mpt7PGxX=s$Y|`%KL`7jKDuz9-kEgLM3LTB!vGI3OXE4r;UQTi&d+E}
z)+S!Sc!7cZ9$p1r;zAd_-eTAzR_x-+AL#q#0C|*<fB`}sq&t6zZqF>44YV*#;1T9&
ze4MZ{`a#xAvek@u0^O+&^EXUA9e(dQoCKV;gq<aODpJ$_9uX(Xt*KqSpWnrYySV*x
xo6y0OezalNq))yUu|(_L_&l}$0_CRFGR>{w8+@OBt;0nP8)?EAB(~sV>>vBopN;?k

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/utils/NextChunkRebuilder.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/utils/NextChunkRebuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..431f5868ded19ebdd1fe0639658fb2b249179c65
GIT binary patch
literal 2959
zc$}qH{Z<o46#oq*Y={dYS}=ZqR=^~H+iJB6NE;)RXablGShXz<%aANdcH`~@YhR%+
z(9=Kr1ooWPs^_#1(1&V!XA@(PU^(qccK6<y`}w<f?(Uy|z5WBhP1K|4LbryHjxc%{
z26p%^H!9pI8Y`PS!jcR<bGBp4d4}$IV!am;^lFIeI0BvFn&nmvUMv|^Ua1Ia*v_`c
zed*OLS@(odmv+TBmc_R+U8+0fyx6SUl`Y{h^!viwC5^mzQWrjXNo03;nR}8O%^jm8
zWzATko4H4H_6YiMRKtLdV;E#O5k#y!8EKb-u%zue44UmPRBQ5C5cWf*b3(@l7-9(d
z_IDy!&O~t%F%745oK`!>-X@=Mq$sLDBeo;gd8IC*l=)d5BN!#)ULzBRnRs@e(rkyN
zMBADvJ=-bHMsS|+_9Z2~>iV_{`{wvo6c;e2VO+-qF7ByELyhXO?Rr&Ckll#yH~J|1
zZUH;FR(U6MBr!?3?5gZmwi$-vnM8-sk6;>?G#ENQ!p9634_POMzG916%V(%k@s6Qf
zz!e>z;A#MCt->uT&h7Tp(k1Sh%8p}+*@M;(F#V~H>$pK>v|LAW+wmDrA80%AFoIc<
zt=LstQY{A65z#S^&lrZQye!hLV{v)kmL;O7a*iZ>cRG~eFe@D*W;kmWQu)Hh>WY~u
zWLB0pR#W*@Zlkb}Tg|2l3k-vul=|L86ErFToz3Jjg?+lmQ@PcJyqQ|Qy^&s`y>wwA
zAHgC6n;;wa))vgbWiFM!8v)geQQA}SL!ZmUI-RYwyF~#U&DxGwu2(mOSKyl!q2hKe
zURmd!t@!3*NS15@@Ot*YO%cj`ASYzW-CE@yuL>zVvbNeR$2$|D)1f@vIi+Fc3BO*U
zM18mJsrDS|?1E6-bDRnC4lWqNL4zqXdq8<sdjrhrj`rsYh1q%K#FX4B=Xk9t-D}!K
zhbyQU%5#O8{Ucz$GbRm#{{xu5Ad!No(y^7~{ft%jJmE;Q9fh~sBhH%|9v~2H>aTef
z!mc@FTZLcqY!Wep8Z6o>^WptXaY=>A5X;vcX;;O%?b`%W%5hxDl{4y)WY+bHhF?=j
zY^%n3>Uw3vr}h!9q#_VP)tc*29F*dXj>1pHrlBSZxi@&rw$VHarsdXz>dsrPE2)op
zt<k3b(H@kdu(6||tmX=3IrbJ-+u3!?qKR%})GTsKx*om6erO*uO~HoICGKohgg=&b
z-EzJ5{>igPQT1B~@qc-PG)<)Gq?)!A^cJHw57VfaU<`W3afFwyaNifch9?Z;hl*MQ
zm1X4pqV(cx2;)4xiMwbthj9v@BL#+A#C72u@#!{xhWOiU`~vY`wDC(AR9`Vfchg!J
zcWCV{af|d+_M^$)z><@{Li;(8&(gi0WPuY1(YHh|hL9s}s3DDItN;O}tkNV>F*0I6
z%n0t0sxtpQJwx;yoqUBph95CN#Bqk{7a0DD6rLxih&=P0L_%#o=?evC=)FA}_)IoT
zw0w>t50l&|s(`g1qEW09)s6c^>&?A9z9i~FV7qIm5o2FBErZlR3c$l4*++EIw@w2R
zHjEwu9k2$^g?>lZgYHT5B|cnkaTI#!@k_+j>P#s43$$05qOYTHEIb_xy};#}o>-3}
zuKkG7!I_5ER3NRz!Z9rtdW|_iNj(qhq4J&}gn=>2f1G|7>GLCjtCaZ+rl_vdl&^uu
zxE$b-r|?Yl;VY`IrUGptV+DAyfLafb>8JbGB-c$==kX0uA+mi18$^Z4dV;K`C}D-t
z2-x4mY8oOMP6q!Atv~H6{Cc}u*oD9Y^ft+vYJ@Iq(Noa1O;?1%DAHAh8|*UF;6Wnx
E4?(vJMF0Q*

diff --git a/mallet-core/target/classes/com/agh/mallet/infrastructure/utils/ObjectIdentifierProvider.class b/mallet-core/target/classes/com/agh/mallet/infrastructure/utils/ObjectIdentifierProvider.class
new file mode 100644
index 0000000000000000000000000000000000000000..dac80b35ecf31b3b3d9b2e895a25f972e3038fa2
GIT binary patch
literal 2865
zc$}?OZC4sc6n;k01qF>XQAv|DMtp<lR#VzkO;V)wt@si#*e2=A3L|b@b~w9(t^cGw
zr$54;Q<IZ?=nv?BYESPh1kgZ_ntp)2Gjs2ApSkngnZN#d^Cy4@*zZCc+BNus=s+jK
zl^4dLp<9Ms&^LBp@SJ4moHuP#K4fSgpU4K_M?gbY5Zwqe%;!W=HwycD(XcEob<^H+
z3|BhkoGd$BFH6&Mt3WGxZcB5|<j$re4$VAw7<$SsceZ#*xTX}&5ko3{1~4y*hH2}{
zukx1@wseH0JGChN$tjRIMX@J{UR+`5EjXfFYRr&mk->AUp)Z{d^Dx6fe1NMAA(zWW
z#Q7G8<kpOBrZIZ18~qs2Fc?Gx*BO%Uy?usoPLyq#w5)|AwPYJb&Twr!T|e23bWFQ2
zH?bNf4crLgCT=kd6paI(5_ZmzJEq(x%aw*LU52qHv8xmB&UI0dZU-@hJ5+d@D(>u?
zlDj1%#|dS$8H0DHR6(Laj9`>@!hbeh=`I}AwbNoJPs3oi(TxejG{l3rtBQH=5+_ZX
zte0<{N~bWR-Ov^A#|*QVKWhaN_2V8x+jG~C1OvM88SZQNJcwD$ooc?y#u&N?&7uMl
zABOu)wtlXnGHA=m%<^_}iHh26IrR3pvxZgXetf~eh8bRs{}26msfK%>o|?!q_);QI
zvhPisHeW9nce%4|>{?uHU*rrcYdEGFS0{aP-z14XJe&1G*O@xNH7@r>e$#MBIg&es
z8QgP3vEGONa?K1VGo{2v#a^YOHXBqP%19%3ux6C13_}XWE7E!;xKOvd)f$zcGSb|)
zR>z?_Oajh`vXkSBrUJUzivE<61w&+u2$@BmHC>Z3Cv96uLz*NHhFDrS1>G$v(d?-$
z{v@0O-KC9kA&*L2Pl;kl*o3TVu^@z`+8L!vQQY26eA|Vmc&6dGx^uo`h}NZO+K1wR
zR~1>gh8B%nr6qr9)P2>l0=jJ2d5gQzv=9g7Qj=zA6}U}wo47wqpMC#MwNn)$Me4}V
z)i&qH5A-Zjr}#mo^N}%4C%$6abg-7;y4=-}XBasbdkuRGxBlCeUgL^0-Ligqxd9)p
zW1b#zQZJ3#@Cae`G?N`xPoVduXN$fa<kNv9`7F@LqOXs>S7WchV(}AbvAZV-#U@YC
z_q&IbqW^x10HOHMhX5h<5SBvwl4fI-czlILz_V0d=2<Fpn`bHSb}W${Y9|NK5@-_S
zxQshhGQSa&N|cEG0WJO-*V>Sb#c#jChrmmGH0x9I5#MVJx8YaxdP`&8(s9IhOo8nU
zYzHV!1cOwUQHq}-rPbLcYHSl&@v7EME35dLhzycvn&y01qxAsT-<a`fbVDoh9gO@H
z>Gh_hLqvMK3F(j`J$Vk&LquelC`5_$2$3FZL3-nYq&Ga$n@vgg5$UNWr27=<>2r{d
z6Ol=xFh!(wB0b%L^y3SXe(dRQs7Cq$WmRel#KSY;PhR5F<C;J_J;5cs#QhbgTH*k<
qyu?-1Ew5WLUg$QSRD-kh-JxF(&3;4U@4f#Yu?zJ)GvvTgK;&Pd{L{Vw

diff --git a/mallet-api/target/classes/com/agh/api/ContributionDTO$ContributionDTOBuilder.class b/mallet-api/target/classes/com/agh/api/ContributionDTO$ContributionDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..d655f52d68091c150b0381c158ca81871d5eae89
GIT binary patch
literal 2679
zc$~FX?QR-J6g^`Tz!=Ab7~(WE#<kM|PC}Zt=?8Jzn8dXcj4j)B74=UC7~u)a4&7a>
z=1uw-t>ns5BDFs&^`WZX*<EbDOo*lYU}yI3z2~0$HN(IEz5WZpDt026z+?!4C@vw$
z5PQjwc;4V<J-=OfDXI=b@S!xN^N3+GlRcP17*iocqL@aM;eJ&$^SpkT=Pj8pD$}uK
zrR_*%KH1-1?t5QrOQR+%h6!0CN2N1QC1utNAzWs-c_u8k4P!@1(-GFwU#p^}QNoBZ
z+_QzVBdn&hZ4&LjYKgS8(@kzQL@jM9^NvZDX>zN@dLO|I;yS*o42eva-#wy7p1r6N
zQ6zDV;mQC!L#osrXYbcS7}qHgbxXBd??g*Gy%9x9JH0x@JdB$RxoRhg${GVN9mOI(
zVwmnSqo8}}|6mJ?%0UTVX1Fn;fDtU=W1Y887=F(5*K1Tt#{Smfl0Ar1J7%NEVTIvZ
zlQ#sBsdDE>=^WC|cDU)-48Oc*8iUQj5Gbk|^}uXNnxfopR)n?BD+Wp8B~|6d0k@=n
z_k{uHP!iG4OYc4z<ZFE(zU;+-Vq3yFRJ9#$@ur{=B1*fNQTe!_pP4;}R~uWr<%hqp
z+cq896r1Lew53i9fj>4)<#26l>%livv!WXLvNH9I6UcJE(JAd7%jcPMigqF9mnwQo
zj58wvNHgpxuNfHTGDBM=vZvZsRjf;$g1J6~yV`(I%EERwluajUY)vW0b}ZiVs$|aw
zu@*rQPeORAXJDOja^^;wN2(!wZ{Ap}^D0gDD~8{?8^%}kKsUHqGlacdQmWBz6$WXa
zXXuT`fcj6R{;Q#9TzrTkH;g^$=u>fnq28a0;nm2<+A6!99yoZlaLB=^#a-vyD$6oN
zH%(JmMT6V6pjJr^cN9X2;nr9Q3!&U|9Su{ZyU|moLpMzKC=j40U5vDw(6@=Zru>x-
zW?Dn^qnj2Cw`rHBm1#-t1ndu2?G8PIt}uwZ^o)86q<W85I@<9mX=&pEt=efQxAG@F
zejjR{^i+Ivy_<F+?`u$v7NeIWJ|pTHa~G4YL1N_}%)G(Oi}>sbuKcY%%()&W&+(8r
z^^kBQrz6nSW|upzlH}?O+D?HbX?Z}uFEt^Zfd_7AsSz~hJ2XBRn?`CVjnrFdEaIzk
zX?)nBu`o6bUH3s6i*KdzHNNq?WX<<5{{~Aha>rEbW2(k6rQ#S1C%84d@?PW2pEgbb
z4}HAvC_Mcw*^l)a8DJDz(nkx>Uq`L=2;aKv5@CX7fZ;LyzQ-oL#YrBfFV85(=h(tF
GuKy2b-kmD|

diff --git a/mallet-api/target/classes/com/agh/api/ContributionDTO.class b/mallet-api/target/classes/com/agh/api/ContributionDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..c186efd3e05951930c3cb0e2a478221f2b325946
GIT binary patch
literal 3052
zc$}qHZBrXn6n-vA*btTi351tYNG;VQKm)b5YG}1UYtir`P?Xk}Zjvi(N%qFw4Ws|b
z4|Ya|89JjM{NRi~N<DXXQ<BXRa5}@y-gEAGea^Y(^7lWdzXQ0B{TR9sQV>=VK{vy|
zOYKO@RWxHix5Z1sEHiX3>V|GVU<jo%y9%NVlV?Kf^-5(^=!VVBM?aN#&DMnxMT}wI
z;`SyttGZ<oYv<=0Pw7^ws+otpoHB$lXOL#9Shpox?qg7($|(96hSP;J7u&X}8~gdp
zZWR3txA#p^ul+B}Q4BI<OTr*S#1`fS@;yjkNWrj*Bt{snmP9qD?H}Z{nx0#3SRvOd
zI~xpLIzcqh6mCIKu+qesig8?J7;Hm=VWQA%wDr_czNTVQDklQcmFFoH*YOTRZ&O-?
zTZ`GJ7B?xzyn<=MtwR>mK6<IHSIXRs;RZr+YLoX=q>*8W+QKac!$P{y!C*eqUO#DQ
zM#U`V$k2gi9W0A7A(6Vk(5lqSshGzCwIctqu2n3`rn6R)_l@F9Ub6F<XH>|ox?$^8
zzG@ulmR_vzhlU|+O)6Qkh80mQio@KxFl1Nf8K(RS68#pX7ioXxI~DfQXN}5bb{WDh
zPW=Vl;Oq5jk()ajg~AXoh>}*>)l6N|9y4qo=oHtrj_@$_ZQEMua80W@Y6|W%Txm^2
z!6yvk=Lf9dA$4a!(1hd~w+}>lQ!}+Hr@=t+O#6|1bJzl>Qgl0y;chz9DTQ-7mNFYk
z2lSpZyH<U3rKvNRkZ`sg5wpdbQ(zi@zSw+~WEk-YG|I^k+ZJ`R#2@RjRztodZb?sc
zrPsM-uW?yvf~31Kh6k2}ur1rvYA(E1e>ZkwcnX@yU#a*Sd(^OJv6?R6UMijnLr<|`
zh2d2*8oF^L4tdTMe4-iU3b&>ULLAm>`F23t6=mux+$x!RjYd(kz;Z>itN<I&J9}@L
zAzneEc+PM~FX!7vYCd32=9^|Cy&Q2`qqHVyO);pehQUoII8MMMgF8w=iQ(p@U{b(a
zp2i?is;4WA1sdXAG}^+5%V&mmars;j?>6nb!SFtP@6d{ZCE!qT`6gT-L9aqbi5}uc
z@B#U~OVpnT5d}QTo`B8%g}&EN_ToJ!=>21^L0ys5ShztBNHRNfjCgkT7^B&_V@zbn
z!pE3;MTSDS=Y$b<T*c9g6#9^({fAB{jx&6Oj{#>VQ)kZ3O<wL~k|Ad&lL;eF`*DQ+
zC36u42?dJ^9youW0)1DoMCXHHG9|@8>L5io?-7KO%t<`i<$gjg49m2JWsojL&A&ZZ
zA=k{oC*_1h_`SxBy%XI0)sedAp(}p}>1llINiWb>a+T~U-UXy^SBtR3Ky^ht3<l{z
z{478{3;c2^^?5uYDXG3lUm0yQJ9CO#=jkV1nKvbfVilj$xdbu7h>!^;@r4&t&WkCM
z{SEO>2}L}M^k|?!<?}0#UPd{fZHM5MW-`$1#M_#^j<o=@Q*UQBf^|oK1DnnjXY`-c
zm$X|!*t_hq+nMibP6qJg4e;}}oEyflP2LlDhHvmKzQgx;;qbf2R{|QfaS>(wfU*Ao
DB*UtE

diff --git a/mallet-api/target/classes/com/agh/api/ErrorResponseDTO$ErrorResponseDTOBuilder.class b/mallet-api/target/classes/com/agh/api/ErrorResponseDTO$ErrorResponseDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..a51d6d4463b90c8254eda7841cad844dd47c8e83
GIT binary patch
literal 2209
zc$}@4`%e==5XZmEqgTplYZ0pj6&1Bbq&^TIh!0u`H5H8|7~@Y%+0c{gU30fJ@jvm;
z(4>S!6aN7JDC6wj@$Atw#2>n|J3ITC-I=*b|NQ;=8^8ie3G|`gz<`NC#28Ya`4?WW
zxwBb#yZ%|!Btz_}<yi6=Lw_#6HiS5a3?xhp!(^DPxs3wftQUCGD!lSM*LyGgrtA2k
zwEA}PsA92Y*&D)R7?M^)_>wo8<gub%wxnejN?eM0<>Iu7BvK6Vx|GeLyCE1@S#6|E
zjNmLoLTywfmo1+mUD>~NReF}QsUhb~WR$HzzI?tZl<tCwtUgcPYg?-xuL%R=4CCD%
zlE4@)sQ_JOc%3_X-*Tt-UNrf&G-cq5iL1EAkZJHOQFNUemme%yrx{()k@UDv|IJ~i
zieVrKZn9!IVx`qs7v3sgw}pzSTjTZ`_bjyzl>@SF(Us;ZCrLYbTkd#E{-mhX8zJlN
z#yjruhLFOeYdy}DPmJ45>*0W%5H`53rVJCg?g%oCOE>Vwa5fj2p+wbfc{Q<QsRWE3
zMa-xZgju1_Y1#GZb4@L}uJonHn?Z#9WDIi&Jj5ddk5#ojVVK<aV>w^kEfKm43UG<n
zr0acU_;xTTp<w`B=FWyK{K<;zZnc`-%kR*^)vrwvVg9LdwC@}$*AP+Uwq3QTYT|gx
zQ16JvF&WA2b(;k?J+a$ScIQD8QLC^`sOf%pSYUYuv+Ov+E85)m1r=K67)J(PFkJ5`
zWCj))E_FAh)*Be(3U#hN>K21EQs1RnpX!fVQajW#6UwZXacvy~<(g&%l1yo)cEEmU
zv+Fd*w9>#08qL4}H<2UB$W5NC)ZuxO%DFLhYnz7ek;l&kCgE{48`j7v1y!^ZEt0s^
z!5rJhsh*ihjR~2-Vg%Ds_dL@xQ^jwOIii`FXy$0o%*;V%Ml-X~%=0}nvj>@3&Ag47
zFu_Y?pbn4!!q~^DHnH0j);5KqP1kPY{0=TgI|}kXzL)m`?u5(|RfF2gM)7`P0_aA}
ohQtBf)mHa#U&}Gf>hffGK)-qV3j(A`AE%vX7{YVBL=hMM0VEmv1poj5

diff --git a/mallet-api/target/classes/com/agh/api/ErrorResponseDTO.class b/mallet-api/target/classes/com/agh/api/ErrorResponseDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..9c9d68c15a184aa4772e5abdd2273f5221145e06
GIT binary patch
literal 2273
zc$|$?TW=dh6#mBXdL3s&VmEHC^g>gxH?-RuP;i?<l9sx4(vn1xfTyuNinp<M&F;7o
z5<iKDR>G<jBz^!t3UOw36T7Li^~3C(ojKo`?_B@=@Aw}853!d+3KJ&M77Sz<W?%8w
z+-Y;~(AgCYKWH*!9=M(>*BK^C<%3CNF=--aVG0(*O2h9s{IKQluIoGw0zcRlVb}LU
zv9<q#VN$vs5lY_alI5B<-IH$H+2T@El&McF%wU!w+mf=o={E%ftE!8Fg$tNt$f=7x
z$z?BODAWe*_GI9ChuX+R3-e0Xq_;wTDAd`ag(Z!r*BeLs0dEKsD-8FN2(O+!*yy?K
zrU-Ia#zcYQb=krdTqU~FkKSjvQ>rDItdu|GtSnu#u!`%-aUQlJ$FF|OQdI%Juuwvo
zvLb%#@iqnJ?nhul@4u+O5)D}?|HAOBbT%E;4~dR*Qa)fvM-I%?Tu<!uI&~53^LksT
zg!v8LKH!0?{^P^6Y`MhyQZj8Sm~A0je)A;{ct=PP5XP)W31PTjDktL4OC{NzD~-sB
zuI?&Bu{1hf%zwZ9;ww5lu{MY#Ro$N73mW2ytNbmVrE*j0GfeGJYitV@E^;k%(r&XG
zzAr-=@NVRPIFrGn9KOd7CN?Z=VvFJOfJo5uRFlPoVhD9!{lp5x+hLzv@3ns<oJjF0
z_nK`HuGW12sMk%-cMRPBy(_jv*a+ON^n+oA%{C9i5jK8Je*L`;iNl)36NX!-!=rLC
z9V&xqP>GwpGHCD_DiB)JwDPoyv=$hws^^J7lM@t}`Ev@x1kJ1KW5vnDPgK6is+7=3
z8MkQ~rKoWY6x7Tlsi0<_-f6_?eLmio^qvDFZJSVQ^!Eqt8QQPd@4)P}K1_S1k7@fx
zA9;H*-AB=0H2PS0OFAihN#6|NL9gDR?|OvAO*nv-6bGgy#UiC8#bZKCib+~aii?3;
zBo_?=fz&~YAQjLhFiEc6AyaEwJ*CZO|Hksq@9^mxlGzX$6M53P8*AUDU7y;=xCFd8
z!`#%&tyqqj=V@Ht8v*|e_;W0H317tleL%Zno3+=D@%ef9i;>Q0;IjA{-_X4Zh{5Pb
zIXH#;F()VHWY~YfOmfJGEz-C=b!Zqoo#f5{eBm^h!{GdQFVBwz7smrHjRY@@12*uj
z*7^<=+S7EmOxaM?W5lfyHAd7HQBy=M@sQRW>93RBEFR-WJVh1H@EkSWI4QD}#WvOC
K4qjpxi~j>N($(hx

diff --git a/mallet-api/target/classes/com/agh/api/GroupBasicDTO$GroupBasicDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupBasicDTO$GroupBasicDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..2d4fa3c6ad2f85909af5375f817061f9d0bb47f2
GIT binary patch
literal 2137
zc$}S7ZEq7t5Pmjse2(iR#!XDp7I3MdwgWMJqZB7l;t&$a1XR;hsGrvM*53HMYu)Wd
z@K5?PT8SzWNbSc;{ZUnC?=A^W92Bb4-p<a>JoC)#?)>xb>puakVJnRZOgczpFoh&T
zc8~A#s>@Zk`lPid+J+&yDwQ<%7$!^QT?Z+K%g07Lf$KiiQW@bre9;y|BehB)&2X*j
z>0sy=q+b|tuP-_UrPWPE=7m;ZtlG+HILO%0GYku*#xZWwcv5w1<=tt_A?x5m2047l
zu+r9pD)08Hd?>4rY>0L4%l5{zC&iJ~dLZ47@Q8iHgEEWI10&sPL;9v>kry(^<03;w
zi5I5c3snC{Pcr0AGjXuQuykhhG#2r(P2>|wy>v3vxWsZ)|H~O%L4o1ofcHgRt2Q@3
zNz)_AH(VKFefvCEr&SEoP1#l41fF2Ha{^<vF+PuN^^5if+@2w&RJ%toiMs9(!dyct
zu@ekh!h6PBuCOK2ZSL-JPug{?OqiY|(znjQKkJkz&ibi5%kK}8ALaCNc*tv}X?VN;
zm=EK1_OUQM-FeDAJ`i+uiSyn`0_QH${~&thhd>!Q5Zh{B`ZDJFKq+lP-0-%#deGAS
z>W)_SjgeFFq|*`o5zmcr&*=RrPPMGaaH;eTXR=Ef9R*>SFO9v4>81|6w%C;6wHfhW
zvF3!aBYd-^eQGw@b*+tWJU)z$$e&B%ZW=YLI#{!>h5AtOIEYmHx-a5b(F5A#ZKJ)H
z48Oizh}bX!-Qud_3cuLUx*rV3yr{Dr?J<op|G9CpYmU6h7^2Qyw<(RNrSLt&>S!Ux
zokA&UU2E({;qCUc#>&*Nwv`fI-Q~V7=+NiK`8(L4W^}F^IM^I%>*GwRmqy0;lse}G
zwXX^Ks4Ih!#;&f?pms{~R5+5f^BGB1nwiy94#0j7O^ftThRPJK(LWOz;5t61neGWn
zw6e|}OoqW0mjA}g8#vE%(+BwAugdZtn63Oq8;Mh3`N$y#vr@#ed=$uPu98$Cc@k_E
z%Qm_Vn~ih1ftxf>gXL*j36lUEo5xB>FppbgWeL{8I?$%2G#^qronJ)BIilo*g<^+s
z^Awli3w#+@>@H<xowIMS_`LFpGJS>l1AH_dJjyA1RJ^b7b&PX|tnJ?HA;xQ50^Wr(
o8>1xfO=xu+--h!dVOdLt?`Yh|16t)sKSw+3RHr%~;t`hq1BPoNT>t<8

diff --git a/mallet-api/target/classes/com/agh/api/GroupBasicDTO.class b/mallet-api/target/classes/com/agh/api/GroupBasicDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..8ef6471b08049bf18258378b15243599dd880dc3
GIT binary patch
literal 2517
zc$}41+fo}x5IrLhD`bH{$i#%$U<VRO7}j=fj)h4K_@YE$0+<B*X(dh2SgRRjFO>5E
z`I|i0RdG>;tCB}o<)f1H>@FY)L6L{iT(<jk_vxM<{r%73p8)RTMG`Ue8R$<Tjsb>|
zm)5>z+LqiiH+fY#HHLvjA%(ZZ(3i{a7)UT&I}uv<ZF@rr>2c@bt154KLdgV@46}QV
z@>}k-aHpG=)8MsfspPyQ@#%{1>0`Z4!az!!9%8thE1%$Qd5(~K#r)17(ikx?nnDI+
z3=>t=G_Ae5X|;s;Sesb3Tv1)!eoBspCMk#z$oGV8mWAsTHOS=@#_<6|O7d6UO5K-@
zXO3XVoHlA;f??rILo*$_Wnb7e?j&&qeHo(kqZF><8biWUAsmC5E1wBg%%8TeVWv~K
zjvEA1x7_-Qs&QidT$qy9nn__6pAZxL7vHjpiCgFCv{`;ydC99@G5?%la7*k-%kv#F
zdAEzm#WT=K@@M5VEuDM~yi{bE-1Ma<n!F_Ug)1sHe;}pu0+Ap?wrW;X!(3NVmk=pT
zbt`QD+UiuA&2{IsSHUp!hkT{WLh^OLS>evMMR+>bs%qIgmLv2&I_&rAg1{%wA&OzV
zQ<FT4w1>7ltJ+wzTEX7H7YxIlP8#^C<60e6#mE}>>Z-P3IaZU?^&ubDx&yp0-@S>L
z>8AA9SO>30C9GkFJGuPXH1w={;wGExQNuyED0N-xwkl()^Xf&P=<o>bB+Cr<P96S_
zN=$Ak->LFPA}E25AQm(z!=-iZdTU%)3ehoe)c8i0mGWHAv07oO-1GpxOX7Q!4XmZG
z4(d5mCm}c?*-<Ew3f-s55embbb~c3ER}F54f=?`2v$;D{R;uB*dgSx8qOQVK?p7Vq
z@|4pquwq-T+XLgp`PMsnQIwDbeqb028*8z>bEc`#X=JIPmZaoPV3Sk4*<NL0;77W@
z7mD4$ZpRDLOO%on3gb3)_84`(7(Ea4K%ftw2D=>cG!KBGK=T}p1lSmYT}D3yG#m6a
zj+->*Y4;oH_R)N`Z~!*<9z*Y7>}CcJaOtnY+*=G6ZoWnK4GHvPA%X^yFm<yI6>*E)
zL9o)UuwbQ4#c+q#spup_&M|xzIKuv=A9{Y%20l0NC7s=+F{q;fsUnKz>mY(bFny#$
zxED%=(djQmEYfa1a3&U<CEnr6?g2i0O>5TXass2|#QjM6HqH9fC>&xEcpaE)7dDSQ
zH=_7P>1A5#p*{utej)W)d_z)NeUWDEZK5!Dh>y?G9}i`Y=}q8UJfQEIsyL&K4lsjd
z%8UjzBcI}hKQMe=K=BAM<ani5#biUe=>a%qtQ|gk5%@S(1F4626jTqRzY34_V;vOj
q82uiVY-gE<Mf!xsFzJ*?GmQ;wVhh_r?ZgNtjc1hn9sGpnnD`HFT2EmB

diff --git a/mallet-api/target/classes/com/agh/api/GroupBasicInformationDTO$GroupBasicInformationDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupBasicInformationDTO$GroupBasicInformationDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..55004f64311546e0970f2bfe6240e9f0acaaaf26
GIT binary patch
literal 3070
zc$~FXZBtrD6n@qhK#I|tXpA)kt7*8HNZ;S0X(PsHi)h7?rkQ?NVATzmUFP14ZT?Ar
zMml51nPjH@n3?{lPS0L05e0z{_5=6q-Fwb+p0np=`RCtPe*sv*lPCr-7{*Wx!w4~q
zKj%k0ZF6;y-Yz~DC66JrES2;gFbpQGLKqQ-_^DE^ZreLrDo;3%ek+NZC$)+o$}lI(
z3F#)P+^L9iLTPnRk!qq?_sq6gM-fKMxE*DfOlD6p^PVHs!F{VRf-#JT@oo$gxXQ3r
z($zFSI85`JOh0yXy|&6-S=v<l+NpBmd2Mfd;i3<#b!nG{!!RJr6laUStR`;}Oft+X
zUKKrP8&cO}n8po;A*0VQ(M~>s_ZTc$7Rr<RQaF8p-i#q`K%=Kt5hNHERlQmi&h~y@
zcy1p!@5eBY1%_Cw9mCZYlADyT1K|+M4;Yr3dRxNCeq1DDu#AhbbEaV|GA#6yrYKUl
zXOh3f@JsT1GTP6x>rOMA4qH}Xg6jOk7(T+s4A-l?A~IT)xc5YQhqQ7%uFUDE|C2+z
zA(c)>m#K8dvQmkhe~Np&X#2&aOWZDSN1FFwbI3cC#Bx1*87)BGe`*WYx-96?yvIwG
zEnW+#k8cU@P?vYOL%l*{g2K49Tc-lAicNJSU1_3xQ4<f9(w-0Jn)bAHwWurUoK|MU
z5bnZxqqm4>EPw7aNiHk4XUUG~y(IMEqFFK|ll?)GNyO8Q7#Xf5JJwk=uj@`ptV@%N
zn-@VX8B2o83D?`uE=~RMRjobOb9k+hKX)vI%_zRZ_hDpBJ8e-)PW?%Bq$?tD+vu=$
zUh=f_g5mepQwtOupc`D3ZQ(9twXW1_-5czTp(&US>d&(0udg%B7eHjVZRe#YX#8z6
z{CeS;^vGCJmRH!_gt-EYJe}J9Zp-X#eGdlZ3bSZHZz?66jLltFn6BvIFN{3H?Y>Sj
zj33Y3(w$W4Vs9v8jwbp5P03+;(nU+F0du|iG9E~}QG99nGU988!0-vJ(j=MLNu7ZG
z;j4X0&yc?v!e{i1H5BkUz930M4qsx(H{Qjd?|gFc4Mtxh{B&aE1n>NvTKp4NQZMPl
zU>n#}!yo`NE5n-MD_@&k!Pmx@aWankv>XAOBC+iM;Q_*i?Xpi}8V@d{aji*Xs&5+R
z(AsHC_oNZ;LSv>$W43P^@s2d&J!#D2n+s{&YSNhNn}#Wwb{g|NX;@uo+-}mi(>D#P
zBMqx3jc@TVsPA?9qiQ_NzDDY4>X_>Cn2O?<GIC7Eaf~}Bxcjn8+0VW$`&DED%r$BT
z^KGUR-YaS;bVHm85QhlIXgwm1MyBxC?@opd`sJ`gZxggXMqhrQSa-390&e^V!8h*E

diff --git a/mallet-api/target/classes/com/agh/api/GroupBasicInformationDTO.class b/mallet-api/target/classes/com/agh/api/GroupBasicInformationDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..92b15ee291b39a5dc4943c0e3a4f19b52bc9d444
GIT binary patch
literal 3460
zc$}qH`%~LS5dO}#kZr^pOd$ju9>FpXm%h^0lr%sR-0~_=T9T%%Y#$)7C0CM}_J8UR
z%}g0)$V~fVXZk<&u_wvFHU@i!8B2G&+Wl_t+r2&i{qN-;06v2eMF2q=Aq5iJ7`jii
zGc8rnjHA>J&zV-9p>0t&bZ3bnm{9j+gc(M!j5f=K!nUa!4!55EoZ}@&H;pi&3=i~t
zT({#z%{t}zxM3P|2ARgQWk;yRJPH|#Shj;<AhCXhx$9WEag<i~!{}m|Ftj3X0u@FN
zgR1Ab;pm4tx0;&wG0Yg{VwPK5hr8Udn>q|I%vT&XxEP!HL@<bVWDF@7#yy6~oLNk1
zN5?6xq^F)+X1TPi*?KNx9GX^96SS@FZ7~FNV!XSGjCGT!5LovWjAD!-B=}(Hy-t|0
zdZ1ujSVgbM5b8+<Q+UXrRBxK0uL>kXIXvQ)i;_^F3iGbIEz6i;SZ!q|lQ(@>F6)In
zx1vZQ*h?iiuONkY8N!a~ZG+*{#Cj`Bq}A&b2*mdkypInE@mRBuSIj(-rM8Ng5da@4
zc!ZCs@cB<=tw1!TTXe6AXDfTcb52@)!EkS<OqnS1jB%#hdbYry7>4P%PPWK(!7OIY
z)6}MEh{Kd-7^`>K`=wOt^eRzbA=jz6RZ~fJ1C_c@HRjRQwXPd{(=CBLjp7hhXXdoR
zzGmq{_LU*$Sf`*Kwnh>|$F8I0PB*lY>n~%Kp|f^7GM?46B5wmS));!OMNF0(+&MP$
z+nPm3gE|ofGg;5!+mAIw%2}@*8P*bNOYt`=Y}#LcqCsW4?K4x?>8h%PnYCxy|3u0f
zG&k7-MQxBeI`+F}*~;-}y2#7@n?juzt_<y)+;;qvP1RoM_ub2;>DZ2?l{{MQt~R`g
z;w8S5@k+t>_<>6FYH`aW+7H-wVTfcaC=9Qw_pBRd<|$8khHILUFK~Nu-84_jrQ2)P
zcNB+VmD@Q>FF9sS1+Nq|+irmI^7hqh`iM_^7{pIX&!<JRO<(oWbanqs*L6p_tYY+x
z&=VII7d_L|ax;d(EjKn!yo@!e9~mbMQ!UXYqfm1fH!`KXdd66wz8;|NCZSi{NHqV1
zq&85$r7=xU7_1Mj)GMx<CKlsOE$GH+Vxcy%h>}*qB0}^}1^5R+vICBj7hp4gq2mqY
zgWkvm+W(xbNS#8Ot4Q5K8VXg!URRVVV!sfRGv|mUXU{Q`oI6K6ITSj_L~=+v$MkDj
zD~Kg}54-C|DB^a+(Sdn%QA9mhC*5QEvgE~u&+!CsXM$no&O9c?OfVL7XM&lKI};2@
zSf=?Hr2lAvHW`C5R%ASNf6wU$baZrfB11+45+Q>yL1-Wx5Q4|r6r>nj+G5Nb0^Shx
zhLA_;7h);NXZxmi1YgqLn9F+Hjh?dd2FZg9%>L$DE%`YU?;g6rH+<^_8iiI)USbXq
z#(^4RL6_p0_;mHqb-mfZeF6BjCHF_zA}is(NTY~0oSeDDhd24hJe#-K3S%2z(RV?x
z#7Gbu9L5eMOMs^Qn55+Ih~2g!$wzEZ&;9V(9VMo&!;ah)cDx~M{I0N5*lhqiaaUNi
zA?)<sU?uFi{$FFC#t_*g@eR!mA^E4Vwzr6LS+5&!pc7}cUZ*zDeM?V2X%DC}2k|4a
Z$RQ6->mNb%x&Xy9NGCo59j7Q_=zmjg=XwAD

diff --git a/mallet-api/target/classes/com/agh/api/GroupContributionDeleteDTO$GroupContributionDeleteDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupContributionDeleteDTO$GroupContributionDeleteDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..94111cdb2a44a86e8032047a9c209e6cee5e65c8
GIT binary patch
literal 2426
zc$}?OZEq7t5Pp`JoZ~vN>k<>vmN?W<+kv<(ZK2IeOB_OsOh7nFh3J>{dF32F?^<{3
zsQi=u3@TAY0;&C2sXwaf?A?*Xb{ywJKHS~h?94OI%<Rto``^320IcD00+%phA(q5t
zOfsZj@dI9Vxonl6HeLx^Gfb{J($VV-6NTcQg*e0YW22p(>poMC)WUoCn=QK9Q8JDM
z!>yL5dfjR>=lHn}_u8VFlS<x^WS?vFv{4&50SieJdzxXkP&)>$YtNCbmEztMQb=3)
zIEf5CVc51+r_5XXW!`nlk4%h;l4MJm6nay*LW|Aar}@!K8$HKu3Xj2xC{orZ0@oCU
zjboPKo_)gI-&G+(wds$^$uPc}#2l_M%#FfeNQFUZ#Vyx`Ua{~gmF;}#B`}ZAP1&w9
z+$apP9{?`yWvJJ=Bo=Xl;cADs1%cXJ|KjL<l6=jjCPH_|0uA?vVXE%5B-cGpFf8^v
ztPbL>lYOkBn!;r7NU_uFG=#Uy8!l-wHDz;mk9&^!kCZXJ?+~@ewTo&yG5B>T&*DYG
zPuDfK+fR5mN+JD3=zZ0E#y#F4TaVINc;1uR>4>U4aD2yP`?@P0NU1ar_KDe%uIe;Y
zyS$^MIb(#IA9OlG?DKqC80y*uCYSAR648#b>=efK{z8ddZWxiFR5&jzImNXK_btPf
z!l}DCQCB_B7F&+VX<;<jvhgLr9pUS3<<po<Zz!dG?eT8dZ$CAO)dY>$bqhb4v-dN#
z@HnC)4^&%3fy3jt#ci#;*9^a(+@O(R2)fN>(-nTcrc}GvT^Y_`l%wg?DdsP0gY&-c
zkVg;|?z(kH3mS_X4E7mS8QZx+G;`P3?cAu*xW<YM$*PpXtGL|v1?}p^vB(y-7;c`c
zZWgxtF0s>0>D~*CsdFj1BSFt4a|Hzw&2}(+5y*KO!!WleX>O8KrY|#^(jnL%fypg;
zPX@|3zNB|DG(Z7G`qJn_39-QWIVOT&vrGSA`aP@{nW;m3^ml3LPt26w(89zJST=Ns
zz>H*AGAsqwYzDVYEE6P+J0wnlW$CjVPz5Z*b~&Iihp&i~q0t<oapePzY(OJ+4jN&R
zzCOy=X!55Jn<HXjDZd#*@GicMiu@xnFqrB0n14}vOT~GM>>)mTb4I<>NA>;=-$yw2
z$=a;Ve86~z1>h`{nFu9@dx6z`{1ANSiIcHpSfS?uD)g5jeTr5#DW`{cgetE651d7a
At^fc4

diff --git a/mallet-api/target/classes/com/agh/api/GroupContributionDeleteDTO.class b/mallet-api/target/classes/com/agh/api/GroupContributionDeleteDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..e1e8460ae04e03d175a842abf78271d463d6dd3a
GIT binary patch
literal 2788
zc$|$^ZBrXn6n^eP*pLQD0*$oQ5?b0O0lKADtA?Tl+7b;f5=61;%qF=5TQ+;+?uOC-
z;!p5HJ7b3#I-?(*@kgoW-d!LG0rFw9_nv#sbI*CslY94{e~<nI@B}}_prKDke;g4E
zFeF}?2c}`0&aSb^tHP}@49r`O<u5SwWpmp)q6{}roz|MRy&){e=kBv#s=VP_!igfr
zaCg@g%|@}7vAj&(boY5J;|OQgA^%LJ=}WU5$DkuF_a0)nnk}6ImwnfAb_==fC`K3_
zSA|0c3M71QODuDn`@C55E`c9J5-A;{ag5<AB~=x5!`$67%!XyWkO?le;0B<}Tk8yZ
zm^~5Fl2b`gMiTP9IL2{}Vf?(b7)F9PTCt5X_X|31Fs$^p|J3<Qi%rX}aW{tR=u1%t
zZ^ki!3`5ix0b>mF*-~%Y6mn<zmYBEVxQ!{o+%vtsB~jxH)4gLBCB)r0?jcLs;XgM`
zo9KAbGeApD>y=l$>KAg~Gu+s0I=)rsMd!fstcuN_I*#y7#k*{hE$S7qZ>$MNDzd;Z
z(HXGyYok4Aux#x*rr&g_zRC7(&386^fe>$HJFOip&TTXF2Yii`EQhZ(>lN;9nY1}W
zswAqWy=}UdoQKAKf6t;!dgg{9-3~)Fg-}Cf->mMhnhiDA@t9$_JzX82l3QEK#M~<P
z_e5>Obj><#;!-w`E~&E%IkNJpPQp(x+gR5tfr1%I*<6oxU;cj}X2!Bz<g5;@V#m?a
zA}c0jXU;5<u?<a?$&frYp0u3dcBieYc4B4GbgTTiC0jLdemVDLEW?#G?)j@+%7-W$
zI6jFJi$eIG@0yLEYu?BJR%2Mhx{i%FzQ!hjpYHAk4GD`1LrC|PV-$urt-M&yf!OCp
z;J9KsHJf`=B_Z~kjlx-K&jw00E_1KyS`A;gtqx1J>3Ll+US7O=+W{4}CW<YFOn5vO
z&O3kU%1F?YW{4LZhr22PPQ_1NDkUAHi#t8BqT`3Q%dnd(wJ&hS99<k5osAk&@;0J(
zj%EX3$kTh8o+#KT)GQ_M7xZC9`OjY9sgpH=`}7zz`;B7yq)+}3Z2E5uy@S4!8a%|6
zzh;hS!*Z6Nev3qY<}K21$h{vA=yzC!#%S|6GW4FKStfwPLwpFRkxZSbkxWs;BO1p~
zEVE?!h{mJP{v#mzvPkOqSjQ*85I&=YL5&bVo(PL8sDcvE(ohvq&s1Ua^bBcX&B5;=
zeXuOh*ieaSDxv5*T;Dmw`>&PPgODf5P?B!O&qMDydP}RGKf(vVYqfK$^V~@ldRS|c
zF2OIlgiiv$_Y{5)Psz(rrD!VKXny(#cg~AX2R<iMN3n<{T9>Rv7)@k>V_2q+NKhlp
zDU$yKiHiz~gos@<G=`AfaXcdtbi$^4fepI&`~vt0UMQax6qVK(eY|{0qleH!HML7R
n(ABZ@+t<EQI;G2laFQtF8*JlS^@q_2HHq&?Bs+MCA93w}SV)=m

diff --git a/mallet-api/target/classes/com/agh/api/GroupCreateDTO$GroupCreateDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupCreateDTO$GroupCreateDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..b68640b7ea7af16ea761184ddece6828590ecb30
GIT binary patch
literal 2232
zc$}S8ZEqVz5Pr6CbB=Lh<2G&@pf%uv?WA!jPzp{`8mDQ3+_b8zpo&lH^D5c;yldU9
zBl=JH8AU3J)JpIXi64cSy}KsyOOucfcRRZ~^UO0dyR-lN`{qvoEBGme3z%?_NaG?V
z8L}_<KCgOQ?N%SRUI^DPOfE|$%__r0sl4ML$#CsRX}j-vPqb7<_z!+{MbAjBl1MRp
zu6S1zWKigGza!cOrPWPE%7s?n*kvoH;2>=sPczJx8b_#2<4d($EALDpgRFxO)5zfx
z!!1{Lt9*B_%6qc<(AWK5-51=5^=FTZgVVLX^xDE_NLU^Wxl!~aW*HV;t!PT5h<I=c
zU(4o78gsbHFg;*MiHjW2)T=gRU}_FNVwitF;S}cai4Fc5!;LY)595`0a#XQG8lU1b
zhAUm(5p}IxZhn?#kEFnGWr)a~vtW&?FibV&uHvTeQ@W}{7R!y}fz*$MPLb4B$vRQj
zZ8FR>q!QcxZcF&jc*_ejuU+o#a9`SayqGY1lDOV({NI9-r;TwZ<vc*sO~c*JBi@Ti
zWgiK%r`u1sPe+ChG!eZ1w6BcpiY>J-18Moc?1}qIX~Pfe?&)qzcdFZ3*~>t<#bKjE
z!~x6o(r8)E5k-D5zr-&N#~sE$t%&Dxf3amn>ItQj%t<k6bW|*c%cZdgFxAw3-xV9u
zvcEJ4uw?ZKWLpGgQwP+RvTItK!1%lul`Y6jVmU=EZPmd&drN+#N*sBSYF~Fm>@2!C
z8{9S8f64IM@e>s*MxdKqwLK9O8(Mezz1sV3)~KPa!x;5n8pHi{;4a1xb?$jhX#};X
zHHMX;OpL8W$+o!_wpbWwODn9*kls>C_;rs5fuLhIJJ#O82DPCxWx>Jbz!NY|m0pcV
znd*?C7Y6iQusuAKsDXlBh)^z42ZVilXypb;RT`OHsT_d)9;$pn|H*JMg)ix!jucQr
znMUd`s2~v<KgC4oY<A&qOuvQmJU4ZK5B{nw{DGOuE83VC0n0}QF_@JsONNC|o6TU+
z`m#>4xJlv^Se}NZkSgF<wo4(6Iou*rmPUJo#^rZ3@*$1H8E8aF`sy%VyHXrOY>tRU
zsl0s(!LRX6oa7&ffyK<e#r*TiYf8>*<PY%is}u5_J<RvFxD(^tC2hMm^A6(;t^+5b
p%)}@Od>3ln#rNSjPn>`x>D1`Ek2=kAw4R}zb&BZ$9%2hu{{v_6H_HG3

diff --git a/mallet-api/target/classes/com/agh/api/GroupCreateDTO.class b/mallet-api/target/classes/com/agh/api/GroupCreateDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..efe79b512b874de19df9e4e024064178a2b84765
GIT binary patch
literal 2647
zc$|$^T~pge6g?|rWE>le0XHFOa2wLt1|mq)Pt&vk@<D4p3Y3<leUR-PP>{8*Bs1-Q
z=}+iGGSdt*WTt)WOn+3{yDJ$i#~2=D>8|cQ_nv#tuKdrxCw~I?0zW08A*N#>g*XNo
zGB3;{)38lv-`L_c;no=j7cIx~A27rU#a$f<hMQ+j>n+>f6qe(2_t7sk-t;ZuB#>md
z<(Lhgx4eAAbPstw?+9nkA?JLx<;!LHoP>^)Oq^zzC{)f+w|&=g_RGcH1V$KUYr>%g
z3M6pv0?Z+dBCBI8g>g(UOx8rhF!v7(vuPPmT+wPSyWI5o%FYJEfUJ=r`*voD@=gj@
zag8AzNlz^b+{v_!iskub9oHG=&rdWRHJ4hJUFU8RlZa($2scxhLY^Vviy%9J6)NY$
zm5XoJD{<aW;TEO|=fLz1mPMVIP4&lFm0=&Ga0dk%Gyl0|+Qe_6Z%{|>jp_?t^UK9&
z4A-|>j&C*is&iy{R@LSY9Y^@)X~%5QsER{lT{u!OWvZ+@VCUCnG-zns+ILL9<q{90
ztL2N43YR<PBTIZh__uq=se5k4U6Mf1sF8~0@by-s%H184s*$1)HPhZTT}#^G;(&i(
zQE4~&HHaY>4JBe>czWA6YlmxQQ`tH`iR`zaN*$ju3`Z*^w>9n`i2A1Kl45DEQ4uQ_
zGrXuxvH{cGgE-9*nTB2sRLgL`Q0zm$x7MjC<AolwRcFd-*XHk#6%*0j8NQ;$Hrm-V
zrEt3!FV;zNTeRF7e{9M5j75vTE5R79taHy_<5C;ch{5);m{}6S_k7oE2D9--22n|3
z4eL5KQrN_|r1G=U-Js1Og)oFvUTvc=yz1<N<s6AaZUl}`O{Z>iZ@MDHVXIj_Z}6Rg
zQg$octGQOw7jCD+vTb@^4~*yivqz4da1aS>(=6mET8<o&bZBSj$}yx?9f!LrB`3NQ
zJ>{Wek9O>(xa)Wx`Tq2Br6C2*SfFEEqccuJR(=lXUL<P}3?;hH(3JoigR-*nv_}lH
z%73npr%tPJ+@;GP>o<ytNuSa&*v#KZzk$A&9XiI9zh>Lku(V1uuaPOuzDDj9xes8T
zeuq_Pijof_Pxl3~@&O#~;X^<@$<mp6k|k=muVUIObF}giJ&!^AkAUc7KC0tm9iIYe
zd`>ThG(rG*A|zK<gfh@_P>g6!ir6AuX)WX&{0`B7ga`C&sKPW=P~r_H_l|MnrSh5&
z`vfGZ+f(>5^j@I5T-8e_co%r7GIu&JoU+hEuA}q;`>IFyd%*9P3crJg<Yg!-nyNNY
znmNJk^Wt-X&uOa@Si&;BmtBi9G9<xqq7+l0Mp#q4^anEi2*pFh9vT`)*xjpGArW-L
z<}L#pOz}}4_&6RbpC@>#v_^k~uu4z&poMCRN;=S0Tl&#=Un`w5d_y>+*uoCJ!>-ye
R8ljHjdlJbHc!nQw?SDAhVSWGr

diff --git a/mallet-api/target/classes/com/agh/api/GroupDTO$GroupDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupDTO$GroupDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..1216e0f67daa3afc2ea3e073ea4a1ec0192c9e85
GIT binary patch
literal 2884
zc$}?PSyLNF5dH=P5{fW{7+KDNg)JO$*c<0`ID8<3ArVIq5ux%lk~T2bYDTp?qT+v&
zpW#%IqROsH9#fScm2%H&5xNYUsyysY&usVCU-$I%>_7j${u96oeu`rNgHc2h7{V~a
z_zQl*Er-h^Yp3+WE^CJ2Wg&%r#4wnhEk+Szn7UBfZaB`a5>ngl+OK81u7#2@#2KbV
zB`v&kjk{I5l9o!|lcbt1HMChaavV`4jN4I$$!z`tv!GoekCtYOBN)SY6z?Z6fe#om
zWmU8I(Xqwr!g}tiM*Z3TPUc)#Z3w4gy9@)OLUFX=<rSgDFv)O7@|t}GE#ve?0x8^N
zh!}l_iC%Ise8jL&R+6S<Oi_Cwa6d_43bz<WI}BTFY3f*c;c0@OCbpif!=T<tAY)J?
zMn8(X4A=W*DvlXsO}=Lt*0SCC=?$@)Q}=wfI6);epTGj{G2E!}s-07^%=LlL$0T{0
zOHIKQ{|{fiCJZA5aU{8JxU@x9m&J0vJq5Y8bW<jl9+CBfODzhv-ju&6x5nFTA~{td
zXJdIG?d?XbWV`#k<oFe$%G@b(SD1OQ7}3Xq;=h{@Q@4cvuqRQoVNFL1nwP6vydJn7
z-?H_ws_b%?3Yg9&(YUqOkXqF2O?e_bVOYMb+fSubnzyRZQMHn)TH8vRb4|FJZle}r
zhvj0w<NII3Zr|;YrpeB<Q$Rud2i=%g)kA2PhnFMwtDDf+LnR|Jq_X`@NF}CKGrx4m
zvwcrRyr3Fx*<KeW52NR%_l+i*Z`+>UP#(4Q@l~a?r(Ire)`~YajPK(39{DJ?%%R?<
z?Z3bm@<dhbz)ka<uk*52?n{Q>+P6PYY=UlZS#fMHlUJ(RsK4{z_ZphL?4$m3zWaXa
zXbk~Gjyq04Xq(#TF2mzi4!Sa)6_pjXkTyNuj2%7MESPq>!l+v&Hl?)PoWniOrfMJS
z!ii#^VJ1`tq9}G;pZ!$n#%(HNnwt9n_1Fl#=>{Zez}!pzNcRXB?)$PuPo{1D8QrWf
z_c^URAjzVUnU%RSu-|=^&*?qvFUIf%y%S9Ze2K4Uq=tsC$*nQo!=O)Ma{h0OzCrYG
zV&n|({WUlL2d>S%q7Q>TV9BOI0A?h^p5Yr`n_a_0<I6Z1$G0SofF)^Iq-TkqsA0S4
z(@0_YoiwhW(@2J<VUpKNBXuQ>Df&|y@@Z6hXnc51<71yjBm|A--aTri-K<!Bh)of(
z=8itTf?(zng6VUDw?h-m^bpKYQS}ncv<N=Ag5XoE2F17<_)fjS%;DTA711f};3=i=
z6t~at>8nfXGu5ik9G(SuPbebuE!mCr8gsy9XvqLAf;C@j9nbx71{=O6!zMjD_<?2<
Rv_3{(_9(^ze#8N8z6G5Mv+e)@

diff --git a/mallet-api/target/classes/com/agh/api/GroupDTO.class b/mallet-api/target/classes/com/agh/api/GroupDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..ee2c424e9b2e910c1ef23b92715a20ae31159e5c
GIT binary patch
literal 3402
zc$}qH>r&fB6#mx8$T;E}Lt{vR5YyTQ;*#_dYML}$lF*t<fzp!nCff=YwzaM#GwlQP
zZTcgbDZ>nzX@7R6kJATedsdQ-WgDAJXIQjn_ndFf`Oew1{_CIf-vN9A9!3B?G9(2-
z^fC+`t0!uzq#8%5T`kAWJVWoYZs_&{hMsuhKt_mR@<M5=S}N^u-LN%t{imE(v2|{Q
z5N5cg=cjdRx~!T-EkA8=W5FQR>1@>&%VHje3`HE<&oCO#Tww0mrfwXi69*v-GTb)Q
zvepGEgkgsH95=|4mdOXJtHpJKwluq&Vjo5^CgUvyHxOlr<ajxy9u-n*MNd63d9|{(
zzs(TPiKwB57&4q95VjKvZsKhQNrb^L(i*4Gno=;0TMYfa80wHDmQoqrvK{5y3SvT8
z67I`*hauL^t5|KaQq@a&%?x7}JtLI$gn}gI7(zC8U0_JYGwmSKiB@+7!h(W3ND)Fo
zwF;{|Pk}`*L)Z`oiwf@I9@UceV^u9tU~`wKH=MVfJ=St|I`NEQVz+A8dRf~rPIODp
zmb6EP!ELopQi+$dyqMbJhN#Ch!&I}u{?8S^QQw|^WT<x4B;Qj_EHC?fTWv^*aPa}*
zFLt!p)9el71vkrTqs@A}xjtISZBBQyoH(GgyMzyBbVJ*!mb03<uTq4fws=l09jK-*
zWN%Tj3p#~6)}C&$;WHwdJj4DyTg??W)rup_SY;US`!8eN*D%}|WIU;9*8L{6P0cRw
z{ElkUHK1leF8%W6d~{398)rrE8EdYUx|6<wk+beKVu;5RZP{$TaKvsT-sT25ophtA
z=`~b4<NiM3ZPB6+&7rJe@uEtoK3f*M*Yv$EHtnlAyvM6%PJ667HB)2YjsRk~wxwD2
zrY35X80@XRC_^ip+m>yr6}Kv^!Crh5#<%!R#`g+-0GUo*1ZukZ@p$k|=muwNC=9O}
zsnm@VUer>q;#1YgmozJu;k;O_Tv}p{hT;;eX;#kED>gS96;?~CWwpV0-uZN28}+go
zLXKfv&!@$^koL9xwCL;f@<nKj)0m_&!=P*!hGsf0XcYcnQ?<z`GR$6y1sP@EBi>Gx
z(&Z{+k)E6Y^>7Iz;tizv`y};(;RE`9NFxMx9gZ|29=k3Y^w6OPAJII3`yDl74Vp_G
zH2Y{Zh>vNcN&1^?g7n=>o`KE%iT>A+4@dgWaP5!znlvD!g_<-Zq^MLAM}(N1J4GZp
ze~R(s!YL+`QRx&juN)ed>HnB>M3|fuFZTdFhePyhDog|9sB=6X;34451Z~Wjx%7yc
zOM{q+FeQBIpw{;8*Y}oa?-9)>ApJ|n1!auNSdp<N<1zgK{rv-YN(#dgodY@nWDl~0
zN8N@)*CeDdIDCyU_Y-hGJuZo#(TGYOzpelK@HsLxPdo4dC$P|K%pRWM-ItEmvX>u`
znPK{cvFT|q(pRj?$#cYkmyS=3%7Qb+Rq;3*CO)^?n9l>hUdj9}wn<BvFVk0e8%oZd
z<Gsu5UE)Lal!dT^FKA!z8e}Ah0B>NIvLZlJo=?H#Z-{gXDCi-!soe-Xc5f0>t+3<&
z7j~MeM{0qcyb7#aHv1jnV{PGQt`7fY2lyZk9G$Q5wR7XBvEh(rSxDYp@;3l+tD4uu
v{R-6EjDIiIu(#B-_Y9)-Fgz#UM(M;nG`zqO3eI|fJQ;;f*Wnl?7>ND{IgaP3

diff --git a/mallet-api/target/classes/com/agh/api/GroupSetCreateDTO$GroupSetCreateDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupSetCreateDTO$GroupSetCreateDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..cd81421fe6cea233eae5d12418452eb730b3e698
GIT binary patch
literal 2062
zc$}S7ZBG+R6n;iZx70#wm5TUQ6}2s3eHR6Mp^9QE8cQ(7Pt$e+W4ANS?v&_1@n>kF
zA<;xX-sJwMn|o%v$V(|GA7<z5>~o&;%sFSzzyE#z31AlUaU4RQgGd7Xh%%(!^EF;{
zxmqc{tiBgD!w{X3N}Br&eYyOygBZh^P0(W7bzf<zjPRa(sEL-5TE!4&xU}Nwc59)Y
zm43F#y@se~l~$9A@Y!nH*kfzQ;UHmS4>Anr%A3R$<4LtLonIb65-A5q5=i4H!|j@G
z7Wv9*k+)>=sf|$)rsN53#N(xxV_he6ZRys9$KZs5=#E>$lr;s3VVL2(FU&q-t(4;l
zjNk+%gWwFK<*jnI#+`O>lHv58YU3EiX?yuI43oK?s(MrBm(x_dYy#(Sp5b_tH$+LR
z8aHpGStZLiTp6F?{@-wR=bj-_(sjX*EK4O8+s&%*mUz{rlXO|vxVy|fY2U-ch*^~s
zb*g-@5>dS8U4rumCmXC7UTeJItx#U-g)pnS{)&6NDX3pb>e<(AWn@z<s5R+Jdy|hX
z@kl9cxNT(L_KK^URoy5qYGr$!c*k}+{bt<exs=;0*$2K=f7O}{=W_dy5H@CXr<4rG
za=R8dUeRr@Cg!D0P^OFHigh8LMd6!g+NXw3&1r3X<MCD}n|?BisW|T9o`Y%IkTaB^
z%|KGE>4pg7b$WE3*NpZ)GJM)v>=4)?ea2PY75-RR>qfgZ-7UPAqb=Vq@OR~%Q*B$j
zhZH65x)o^zjRP8XGu_GPRh3*gS!UTpmZrii%QGYvloDRa<-RYd8Af{fI+$a)_(yqg
z@Oazk-3?09x&x+4Bx$mP)*(AM1B(V1?ft=ug5d&LMcSD?DXfEi31DONj0T5MT%>2B
z1HdI*rk#F%<PZs*U!yMwGCckd27kbLn;uxl;a`REZx||krVo8xWSNdbNM<dojv*hQ
z*$@ggmJO1^IGF=r8QLajP116#+KE8M2(I*$aco0I=8t9A<aEmz*;hspSHo1^BRMug
z>IX*O7QRvnz9O@ZQ=j+9YU+1Zui<*gGev0oZD@nzJI(@ou?&SQ5!?t+H*qW2M{%3>
a7-8<vn#BWpOVfFhzC5HmJwgdjaN>Uj0tFrb

diff --git a/mallet-api/target/classes/com/agh/api/GroupSetCreateDTO.class b/mallet-api/target/classes/com/agh/api/GroupSetCreateDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..eee7dc3f2924a9324d7b7bcf1bfe66e3597a71d3
GIT binary patch
literal 2454
zc$}qHZF3q`6n^gVvOpjKl46>^1Z&y?dBNIRwZv+Z^aUj}hKNQ#EpR7nfxWo9Wb`li
zTl~<@*vU*fqaU5|N2%xTZW`Xx8Hd@u_uM__InR07v;6(f=^p?-$6*8td@B4=1Q2A1
zztE1gd|NY)^836l%mzbnQ#W+`A%icIt*QtyTt8PT_uB0}p&K?gAOBqEU0WAM2oZ)`
zN2cg?i;c8yr8}D0;*GQ+jCF(b)3u&0kL5lB6;bIs#&9W9ItQ-UrfwV+vegjg7;aeH
zz5pqV1d=M|qgcQthHG`v$!kZ=yw=t8PbHTMx3^8M*?i~VIfLr)qmcW&mIV2fNbg0l
zh|3f+Ic8WY^`rFz6;xbdxIfj|%E-x9Pj5H48Nm{KNvgy3D3+0C2-(7oo8fMzG!?Xv
z9Zi;mx)H?(SRtsUW;M4(gH!S@gepqQTT$FbhU(3K>S=9@;oe1deGH!0UhukI$o{}^
zWxr?GdWRQ{W8KngZT`qGgssWWuw=H|qEi#Cd|4Q>c?t~6!v+VxbO(*rGs88ST##&)
z!S4n>SJDk$?saP1JkSW2Az2c2tzFejUCQ2}-)`#UWch+<8DbS%tG9Nwu4Aa;9>eS)
zFBSJ07AJ9|=y$o@6pcO2)H<Br8FITa9R1se11V5zZqG10$YiH8o!D;_!a`<D-#D*!
zap(o?t0)sPb0d%FZ~)CI48zqSenUx&R7B6L^C!AYeQJd2hQwo-DRax-<+5}XeDG`*
z#kYj8E!)((ZX&I@Af81~#8)c5j-rHJs^d8$(@m{M*fU`W*UnHFUiHVU8^@x>^RD7E
z&1kf_wNetI)$0~U(>7`-8+V6WbyM%!!t7VrZflk`2II%+-Ur@tFYO^vBh7f@t3dOK
z=3|_$6hpLV7~FJxaf)+sQX{DNmf_|*#jWDIfq_3xl?vo4;|`5Zg=UF@q#VPvW=RTy
zAxG;fT_Lb}I8sth*r^&Sod&Q5Kh{b56+ZfrPVNM3^)JNUKs`)`PcZZ6+L<&frQGUk
z#B*z}k$OeyK5Wo^)-er}(;1{`&6AXN;qW2RhO?8DnX_}LeMI|tDF2cfeIpYp?yC40
zh~X0nrjR~J)1@7Ul7hpV3gOWIl&+ZKMdsea_zVwdzwWqK9Jir2SUNnx)t8RehL;U_
zPtaGP;A!8XRi3K3Q(OaHI!W$VmJvl=6)&O$eF-+ln7<GF_D<%v=?{Y9m~YZ5*@kkf
zr?@%EKIQ7XO=t)Y@dZ7X*$OZcWPl6!lJYJ=^B$)_?svqe1r+cQ$8^d9yzDOG(HPj&
z|AP%+%dy|a4y}IDS;Awd$coo1gAFUYX87!h(|rt2$v%NH_V5k%o%UA<ErAL(#R01L
H9+&?EkDV&c

diff --git a/mallet-api/target/classes/com/agh/api/GroupSetDTO$GroupSetDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupSetDTO$GroupSetDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..4a56b1b998a14012f5028dc28ee057d86692ffb6
GIT binary patch
literal 1860
zc$}40Yi|-k6g|^YmLhEtZ3UlbQGr(R{i>~6d^N#p#MBr+4KQg(mKm};H2P2c8JcLC
zXrdoY{87d`%huA;mm#xrclO+K&%JYJ`2FYG4*;`x7{>qx9YhisLX;u-j<52P%hht}
zdF`F38;0mzsic`>7|a)z9K;w-Zh#g$uKPkuWrX+WeO<JT)GCHJ!?|TociIb$tn{-j
z?lnattF*eH2%oKWj9s>N91apT_6WmxzOq4FHJ((<GlivLj3MdZU;-%|Vkp*itHhUA
zO1v#gPi%~;Fb`in&-K{z9qBfN$KZq_D6bysiYDS1#u;+HFndb00*)k*w$X<I2M0$P
zj_e>Ljtq|5j7~62=C_93`d(N{(LS6?AdAz)+2T!6)~e3UYiU-<@(owUXSlXEQ-ARo
zB4ynW3}Y3k#A2sa6W%Lcb7>`2(RJ=FaZlR!a4}+5B*mJp?7zkoW3EqH;r|Fms)pB_
z&v-kOk$fi1if+8%9&ZV1ERuBUWk(s=5({co`qC=?&=wDr(uUiP^X&$^x>eK7(xO(j
zDTz0?)#)GOCeNXoRl;yAzoTv<iy7UmD#PLYwzZB|b;qlV$1=#F$NQoM6T_nL%~S2u
zkxI^MZG7YLb~jajEQ%X(+{7&hw{0)nA@v&}q*~QY5k~5^$75bM+WWxpvA6mmuuJ-s
ztA;E5Tt(|<r#;gzc_&9(+il=)D_ie|O+6P<l)39xr4e+%?lN5IEkpn2=fm?k%cirz
z$(m&ahQxwW!YjMn_XX`ws^8DSeTK99%G<&GrVDF3DBW>gFiz81AD{y{KtH-}0xKQN
zL&1oG;S5<NnwecGu7Q0HV3YKW28&VT=$YsOa2DrirZjLKk-+&S27@5uQ@=3s9nPE7
z@EQ*MEKYsJXz>$$80;gP=sJXC*0Smt@&THSqF`g$AW0O-90r@9X^O@)4acgT3S^{r
zk#Trk#>Bp5q_>rk-c!Z}TntNjhve7@$?wR#DSn|6e8I#Tj(ysts>y#<E#XqgbBoaS
z+vqySH=G1^V;K!uBDfr&uHb4gXK;<?7-6o{n4y13P+<qCH8Pl^obKTP%E<f$;rqMg

diff --git a/mallet-api/target/classes/com/agh/api/GroupSetDTO.class b/mallet-api/target/classes/com/agh/api/GroupSetDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..0038aebc0493cb374edbf10fcebbc787bb41e3aa
GIT binary patch
literal 2294
zc$}qGTW=ai6#j;b7YNvZ9b%d^rVVkq*rx8iB~2UKxsYP)8rM?Vrv*l41MJY<#cKaT
ze@h<{sgWf|Y9A~0M>Rb&yN<cKks^C{=FEQQJJ&h<^Y7W80KUc#5%}QO5Qrj(IfnRC
z{X{Qyb@RA%z?;HqG0fdDOvAa$;LqicG=vy#UVv(YZg*c8ro*lKzchK@F@zaHgkkmA
z5`%uFl`-s0Pq#X}l`)06ZW2Dz7&!7+?jz6;m9}FHS98@1;<{rQ=5aZH6v6^S*5=Ot
za)psVQo~{tOSsB#ttomX{kUDy`$p-Z^rp_8ox?o_&GU`I9kN&zWKVKji(*+41eH+@
z?=Tc*aAk+~TLYup;#LG{_>+{}ccZw86^4)_++Y~ibJZC{<@{vqlH|Q8-p4H>Y3p`-
zTeLXCjY~)>Qs;IQtN4Hl$A2E^U7KNJw#Javy~b1CbjtZ38Ll4;OvmW)ig{w#Mx)E`
znWk`bSzKEttt)yB(J9r0DeGTmSQ%G1{Ix%-bSpQW>Tx-L#1L>pT&Nl*uMK()ZXN2x
z#*nOvrrtf$EknxQVZdn{M4g@)9Yd_{=*`Zq-d8FbK4zF7wM+5ra;Gg?`?{s~I5jd+
zX2;`s{c$8Ht>M;OrZ_*#izz)qjxFV;R9xM$%Gga9stXe`6BD24aD+{zlOa+U1FOj&
z7&2G!Aul#0l;KK^+s-bRS*BR#&hLACO9;nyEWPjM#a@`hP6YSyK*Pf*9)TQOxiDtA
zneu$`R2agIa~6i@!{Hd_iRkc>3w)%TtuD8-RUtZqet9w@lZvvlcDUWNjJ_kRVZe4*
zx9uq$KV5Ep<m!1D4dFZL9dAsO)f}KH6sIS}5UrRdx0E$bktQeWtKoZw+iw)JhWf}r
zod%`ixL|D3c=FK|_aP~V9IZK$=D?7rwLnh@Y!OOI$|-g!LZj0liU?qhq~GADKcHAR
z1uOoI*h^?nlHpTa`D^W5nwL_c_yY05+6$zf6Wot=de1A>5E+diL+b`f8J7+vd<dwW
zbeXB0>)Iym7vXzFYV;eF(C`uc12KF;AHqJugOIM<arjbDep3mQ`=8Pi^LdfE?=U{Y
z=d@o_=6%X+=q1umPI3L2Lalq*knaQy=r26<Cav;RE1cm5@JuCn7%U@-x)3j-1dZk|
zr>JLu-`_}m6<-lbs^6hidK)Sf&yby^pK>v;6B<I9G?~g)kdYt*T%uofzalMpJ_QSZ
zAbwduL631tr!2wC?($UH)Z5VpaaZYogKudK5GIX#3gz>9Wwc?Jr<`r6?qk>{{RAGP
Wie1!H`}>G3fjw%9eH`Er>Hh$^J@Ul>

diff --git a/mallet-api/target/classes/com/agh/api/GroupUpdateAdminDTO$GroupUpdateAdminDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupUpdateAdminDTO$GroupUpdateAdminDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..4db6ebd48834bfc2659d24a886c913ef9ac26be8
GIT binary patch
literal 1971
zc$}qG>rN9v6#fQEx6}d^1zT@aMQw{(?-wpA)Eh~yMigWGHEky_c01GTPEp^)$IwJW
zqKW=A@u7@owks7V)M%R7Gkf-&?|kPn(;q)Se+4jyJ8|@(-$5jS0Yn*+ulO1-xLmCi
z9#vk6s$q!EN+r!rhW>1B*+GoqXve7Ba^1&TDkHqRZ>pkcq*gJ+8BVQuy475)Wu%{J
zaIY?E8Ku=(MfRCW%UHGD$KfDhV-GQmWlJ64CF4o8GLu^##0ZiO_9ifjeGJo8-6-&t
z)dFwI!hIX#S+mBCn6EXYy7TnWWEb5+OS(1TF*qS9%JYv<B~5{17-PsO@j7to$=k9z
zkU+{(ig&ym9Aud2K{1Xr4%?iMFr3J4C9?HBw>(Onnn)mnV+;oxye^7bRk?XC%_{AD
z!<F$FF84;-US5VsQP%{+NJ%PDZZ#^xd&(;=X+}%B%H3t|N&6luBW6`ntl84PcY$J-
zw^7agAK=iE;nn&>-VA9b9}2UoYmd3d8-hlYC{H|TDI*(VQLRZ|+Kk>d#k^A5a67ZU
z9SK)AD!N`MYh}lpa3{AqZ6I#)9H>|(wwXQiAkdi6?dmh^&vxxed`Y*ws<<a@E~zdk
z=d2SUm4$B}XrB&gazSh38;>{Jsrw^QT#e%zt~<D4XJ?wS>4cJMP1i*ju{}=rc-3g{
zEyKG%yAv9=K_75cbA>-y(z@Pi&TOZ?lcTM57xR~;t+&ml84V$d+;x|v5p+an8SZy0
z$Iio%4Nv?WJCo@g(>a!7NGvKPyrRo}Ur-Yd?hNAKHp9ukDvE=JP4{CrQ@T>y#yCc|
zNFSZ<KKjw^7VJ`i90*nv4996#AjzyIzYg{xFgrodXrPQ@lAejS0Z!r+NjknbjY#19
z1pPsfv8nGE`U2<0=-@i`e9KRL!f^gQedyl?Hr{p!!R*emW5@>9Y#2Ek%LYjzPuoGT
zaS~Is&d_o!+o^y?Y8M*&f72NMYZ|GpG*UfjoW;4Yl+#4VMo4}^`bGXDmEa@B*Kz3m
zE>%r#RJDNfA<lKOw%>+-V|>O@U^kTE5G8^Ofz?G^3S=6WNyf<L3auIXQw9~bk47Vn
Mo0QWn%%h0(F9dDpi2wiq

diff --git a/mallet-api/target/classes/com/agh/api/GroupUpdateAdminDTO.class b/mallet-api/target/classes/com/agh/api/GroupUpdateAdminDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..3ae430780e609f93da39d6ab96bc828b64b0c9b9
GIT binary patch
literal 2397
zc$}qHYf~Fl7=BJJY?3CB1R9~$lG+q=fkxC;Z7Ry8muLtGl$q+MO>%~8lkADR8`Qtx
zZ}CGrV}}_!qaU5|M^)c*c4;o8gc%2R&w0;2@AF>I3;(=1{S&}fcp8BZehq;rf|z26
zKi7}-Vp}(lihH~+tOmo>1H&|&H3ok+cc>x6aH9{Z_S)@TVVDlL9{y72UB?h+2oZ**
zBTMwU<wn}D(;eMv@kZJd=88%9bgk#eW4Vt&LsZ(1F<i}7`o#N=Wtc~$++hea3^|kk
zyx!;-=0w6U5=d&8jbaX085ZlJQ`C=|MZIejA4`{>b{o3G71`Fo4uj@7O0f@^uLv?O
zx!#LnUJ^z69%#76aDM`EX3W_}&uBNe6~O}hNlO0*QQW{HL&y<sxD0o*l?lY9-1#g?
zvYSzSh+9O~)a~Y`XmEziCCJKB_jVLZ_=rl)f9mONo8jJM%>gfVYR`GyDdm1(xW3mj
z9izj`=CNTLwKiWjP2uRWEo_<Lw&>JEt5_AL?3@x6XjI|g*Y2>=t?X!BM&;ZgL%<Dr
zrec`9+UwM~b)XX)L$V_3dizkf3@Lku0jFsY_05S<GQ{>Bz24f^yGm8Vrwr4>_9?Dy
z?leVXSGV*Ir>j8JnbEl3ejEx;tGPYFu$IkD^5%k`B1h-4V>(0K+VaTV8mJc&GDGJ+
z(cuuAN;6%8ebKY({E;DZI6ualJ5q(=N|oErHkVbP7^luANqj>H$962e>*mXznZi~C
z5AjID<0zhh99`@iwcHGPK6xq(;o2Ds!^^?24D(pDc+mwu(alDi+nI_GtzNfuJ~QVP
zW#?^iyKWg>M_7Y^&9-jaV>o`i*!s{_^)eg6ca&Uj=9KzFg@#<5o)km0Y?|CsCOL(B
z?cGJ!@IAxrOC><V{?ObW2c=56V64*M^U+-JAt}cwtyz+$K!cdpJUt<>Stuzf=i`M4
zjZT9oAb@3(euJNWfI|KRtnfEtuc19lhEH(iujMmoT1xrCE5!55uaJ64a6eY)J*`wj
zWHf>_t#?RDyL2exV?gbs%S`QD*H&pi3*Wz_Mt|xO8a|<4AcoKAL)b@n5Ylx!4qpn&
zZz_dy|1Lc-pBI_?4&xp^r~R@r?^9+&ud(p#1lM0E)QXo4`A*Q3|H4DB(kf52{3+fC
zUZ^Awf@MTe7ve>fpt=6#81*#p`=!*EaGy|8{Q<4g+fcr6ip;z8Q!eIhLPIE#CR5o8
zG7@BfbM()HUy&9)pMv>65Wgs(pvO3-Q|91hcYZ8w>i^LOv8MFD#y7ME2(y57h4Oj5
mGTgB9W6m~I_c3geegfa3f^Ae)`}>G3fgNg!UF_ii3;zK<R~t|O

diff --git a/mallet-api/target/classes/com/agh/api/GroupUpdateDTO$GroupUpdateDTOBuilder.class b/mallet-api/target/classes/com/agh/api/GroupUpdateDTO$GroupUpdateDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..6c8ca1d9a3a55797c14332c7d665924cfbf0843e
GIT binary patch
literal 2473
zc$}qGZEqVz5PsHieU5P&<0dW*#dRPB+ezyZC~tWwjZ-%P$EoTPRPkwjJ|$b9cdfg1
zME?mt1Eioxtpp#D_)&=2JJ<1Bn-V_U&E9I}ndh0=o%{Qr7k>cQz<vS|Oj(E~aS1Vo
z)H8m}OD>m(rTxY;$JPw7bs>e`WSGhq4lKkOvS&`UuIoNhLTbl*@U!i7v`{jR1jC|e
z=7gVXbFbwzb5hA$l3a6*t~T3doq&a;Njt+ZpRb-_*0m?(;acHf8nZ}QcsGeOt}xuO
zRlCFwk4n5FN)J8N?flSba_wwC*<Tv|-0BLq>39qg(Iia+*i}Wy26sM*46ZUnC2u<n
z>GAw=Tw_?Vm84IiO~U+h6dBz2lemr#7-oh7`y}YoEmeiD*DTy%Sa`jp1hQB(<@u1|
zZhln4INeeF!a<rkyp+UEe9UmQ&09`cNt^2*g+8K{uesDjta1_TaTkW^x;T_vcRea+
zX(VF3Iw-U}P#RLYwn@>^vT9P`Y*k37)@?T&?+I_XL1&cB-2?6k^WEEw>LWqiSF8W^
zNKmHjF~Nn4z|7P&w_AI>)1#EybM%pFKH?r7D7p?r@5bY<)S~U|%46XR!~S{4xi6*C
zyniZO)o!R(sivg4N`$*K8q`M|imXh!G5@C=gWbIVOlG)EB(zr-dldh?vv8sGml|eC
zqbdKUaB_@m6;_L3E<f=cC+e!}*-k|m_E&}hZX16BsX4yhQ9ez_)Rt1(*B<YL{r6{M
zxSzll$`-cG<$FLaJ<B5Gv1&QJWZ`|Ra9b<yIm0i5E$ummpgUYPUB_RlD%I+CUVA~u
z15F<$xc^ig9rHt1x(89_u3Hz{p-K3Vp*&KFiJi!c<_25InVD+r&<xyQ1%~9Vl#W++
zx$ir4isvVySoogd=3CXm!rsvTXp$@a!a`>((twW8RGgwW{ZeQZF@J%;($ogSC&4<8
z7+Lxu(oTU^C9=%y6i>l^3tWoyjs=@ZEC=tv0V}vgmc|xtBN_xh4$=Yh%YR|!C9J3E
z=~KM(XL0#=TrU0^uo(r*gaJJ;vodUHtOnlfGVYjMCP@mP(sCLsLuQqp&*-rX+tq+Z
z2A>m_p|M8RpjsyJT#$HNMVQ#?C$@s}uvhsql#fxR?vhZ0*&LJh-YaPfL5ApCNDB-9
zMZbn-CqF^#bxIz#=gV_Me}%7mjoT!m26OHuvQLXARPYnheu9Nl<R(`j<S^Io<2O{e
z5NqAAA)6k=d4Z3BHzB2aNKuM6UK_;8*evdmjg!x}^i;4D_(te}X0c1!zC#r?T>BRa
CgKT&J

diff --git a/mallet-api/target/classes/com/agh/api/GroupUpdateDTO.class b/mallet-api/target/classes/com/agh/api/GroupUpdateDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..0fa8037634a7207772ab858a09b199eec933c5e2
GIT binary patch
literal 2860
zc$}40ZBrXn6n<_J*pO}@2@owsnkv;KKm!)E8cHqD7c{&G6vg_sN$$Xw&EB}XVe~&a
zPCFyR44u)B&h$rB&)r=@HiUp5HuojxJolXEJm=mwZ%_ULa34H|5W)%~Dtge%ka(dT
zY6U|x_X?Z5BCIMy@4Rm6&H_U?o7+(kWf(g%T5A}_hR{uiTaSLN@VcW5Gm03)Exnr2
z?MzLx4tO<V3UkUN(@eSH$Za`~L4hidjWY~qOJ|r{j-{J>#oSI50}PWDVbTUU6105@
zW*?GBDHv2Sgkgq}il`N|z5Rk#*9%W9(WpPGS2c$(Z?7|ibV@GKa&Ae`sS@EG74PCY
zL&Vf-oFR2SHfeQ3#VFomhz9~}LekPGlyuuED!9ooeQ_w`!R2B@H>%u<VGQ9E73qBy
zA7Gpz>Im<20?U>zhAZaI$18C@RPhnAgtM>N`%9uqnceJ;vm)K{Dkd;VGT^^7G=uV+
z>FU&S_ImjRuQ<ircMLZ+8>XYz_=<U`+j`mH4^2}zT9YwD)XL(ZuqI3?s3Jwy?y&t^
zJ?PZ8rSF-V)37LyLL24tfe4pc>LWv3ApE&(d*RQM)?UZl4oSizZlI)_e63L{b8B0p
z=%h$QMKg9ZOP6bZGve&)6zXU<!Why)S4z}(k8e3z<zQ8-yK4nx+aHWt!TmtbdXX!5
zaBA6%p3GLcvoER}nnkLnex<;+|33?tQ7cIrZ!cc+%s>T|vZr*0*=(*0MV<SD$Qa6Y
zkh*(Mt+ZV!EmCA6*wOx9v>8Bi*=X53lY#7j_RY%$7uymItHK}avao}}jP6J<hHGow
zc2>C*6|vKMdjBRCg>Y=g(&}CT?SWow#juTM3U*X{gKw!_&H}eQ?)|)c7iyRCDGI}@
zR%&$fP#o}rXZTbzs|L5nOF|qp>KCe^)luqoncEdhuRFqOHCQq<+wOqzy!+{a`^&FR
z6jZrky;_tvaxrk>(i4%OFHPSFgSujx+;UIml=W~&=_nw!Z(oT51(m>i*U6M><r!m!
zo`n$InPH^l14Q#FTJ?hA4vhu+qF{q?S1I|%xFfwH<S|Y25FuRbK{I+SKc??4t^OdN
z2#wSEW3Y*T5PuD2H`RBHYkyCjuKMLFKXHUae)0(E{L~RfUXf1(v-I0f2=X^YQD<nJ
zlefKxiBIq;;Lc<o%$>=2L+;Fr_#Vww|G!a+JdDq1o<`_jf{Z9gD)?N%yn+QFjxXrH
zc$nZoKp+SBDL-`6Odynon`b)YrMpPqK-gyj{@8~lEYn;vka43SUS4Bt_ZXR%uGOs1
zpNuU@FXtoQdWJ^1tK?5`3wY_C-D*77Oh@t4Ptt?=xP$v`;P)%JPv8kzN%wggWwg=!
z#0hd2`KLXbCi_u5#R~l|x$9xHkO>aqOQQO&D-SQGp8TIkbW5nmN9>@jA&+cEMLA`v
z6*hepSbE{`6$z)^dE_e2o(M`^V(Y=GYqN%RSG&}Z*r3@xgne}e`^4)jsnJlgtAZ9^
hyMklbB<v)1@f_dd2mI)EV~Eg`_=%MEGs>vq`hRdwiTeNm

diff --git a/mallet-api/target/classes/com/agh/api/Language.class b/mallet-api/target/classes/com/agh/api/Language.class
new file mode 100644
index 0000000000000000000000000000000000000000..112c1006baf4043c67abc9b67292d4ce0a7681cc
GIT binary patch
literal 1059
zc$|Gw?{Csj6g`gug<1wf9D?)5Hq@5s*mU~@TV@taOzO6zO0xLr0TsHG)|9f({z;A{
zZqaD=*+0s7Utx;EY|@_Gch5QZ-q-u%=a=sQwy`B6!jNluy$bJiEBu39F}T|q@Q#%P
zLsUf!afZmD!LVS=qE!Vip&}Xb>iZ(Rp+ZH9K`u337;oz)L;l@tv4S)*GEyq$k!6Ur
z9M83=Ax$@q`3bK$M64V%kF8cf+#GJnSWuD2ZHBo&gt|NEQMD8946K9q3|rcSde7ng
zes$u&41C+|R3|G4gV4XI;tm!W;x*f~gB==Ln^wNk8wtb|8nl=|Qs9z`WvqyS!yft!
z1x>$ZWHP@ZMfbcmO`A4s*V-TSnwI~DHyt`D&#0<jXO}g+7Izxlw}p7@5OsOa61gcK
zhRka#=z8r#?h_}le9=kJwF#7xMK@6zX;Y)X^V_z|9fqW7cU&F}e9B3h-k{%JYdPb4
z(*C*4+U#z3sJvo&1HWaxv_+q(tJIp%?{3g#=4dme-GbOWfG{aAQxq#jnHa?-tPt-Z
zMazWZQHD@HW9|~^PZTjcqHjFRNyN|NF(M&<lTe&0SysNl%}X%BkNm~g=&O!c&`~B_
z6?GZ(kAh13K_p?eK`0T*<<-S=6i)x+B;$#gB6Lbd@H7Lg(OU^6>lsC?&v+yq(Qu^s
z*f+2vX$Z+YiVh*0(~~8rh4ry)dn{Y}N~-K#=^XdYAcevGXc)*BcyI>g^tX*dwL!8X
OSw+UZJj3%4H-7>05YT1-

diff --git a/mallet-api/target/classes/com/agh/api/PermissionType.class b/mallet-api/target/classes/com/agh/api/PermissionType.class
new file mode 100644
index 0000000000000000000000000000000000000000..f57efacb54fab5e6df08def9eefc3ed5370ae777
GIT binary patch
literal 1167
zc$|GwZBNr+6g|({ty}G64g{GXic>a_6%>34NFXp1lJSxaXNVun!>FUAYf0CU_|2ar
zBN3v}@Yx?_yw9^K!|9f+r}y^UbMLviKYo7s4&WtTXb3T+DqhXx)dQ0s+2*$8*X(-T
z_S~HhM^+3Bs(~;f4B?fvjrC22k;4D^3!)%uASMd*Vt!@q-J9b2PF|$188Adz6={*U
zZlDhd1}$A)DZI{?7)Iar($<kgzlMZ?0o<f{Dvsw`3<H^L;gBD5)8TH_+}b;|Dgkka
za7)9mffR02t4l)OZPcjeF?Sl))_aEeOh@&q!|U~hjzlT&ZMVA6*+B?M{ZRvVFvbvB
zv|T$`Vi?SHSFUHvQG|7}I~qkS3PZd;Fz^r)!nquy&M=nA_Vi9&epA&|Z=Y=U6>Qhq
zY}EEFe~0fml$rTQ`)qH~WWlR&r_6m@NVIiSm)9)utxJs|v0()V-u^cCi4$19m?t=}
z3G}o@i%GX?<E_B+_idLu46%}3b$QV6>6?<tmgz_qD^7cDxxbdX*lXq`8bU954ZmW&
zvc<IhR|z?xwLD8p9-<Rhmxsmi0)(+P8Uhn3aeKrFQ$B+U;%6xuClo)uiTG#SxIpp~
zMGTYljL2^a@l%*WNb=_hMOII;$#V=|fC+x+3jYy3jTQ^j$Pt>NFT?alL8TKSk`S9E
zR0y@nsgW~`ob*uAFe6+@rC12F<m55^pU9HAgf7mjZOMcxEe%D!f$b_yD5YJs39Ymn
zZqg>Z{Y5cPzFNh_c5&`2)h6#MXSjC?MF!)l3^W<s56eJ5NBR`;lRuhCS+62adrnb@
P3DOU>$9#%s5}*G9M568o

diff --git a/mallet-api/target/classes/com/agh/api/SetBasicDTO$SetBasicDTOBuilder.class b/mallet-api/target/classes/com/agh/api/SetBasicDTO$SetBasicDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..03f340edbefef215a196822129d11f2bc6e3a095
GIT binary patch
literal 2085
zc$}3~ZEq7t5Pmjse2(iRuA7)pT5!Qo+X-=BX^WEpF{FuP0>U&E>W6A=Z{x-1UF&Wy
zf`8JV(MnX2Kx#i$>W`{Adv|%W9ZGb%+u7NfXP%k8nScI${U?AmY^5=QNe77xrjTUF
zKIi+q>T<PLebjm`+J+&yDwQ<r43nkuu7ecA<zu6rz;z#Msf_R*yl9Joky@pYX1L}H
z;}@h~=yR_pIt8WGO-06qR$#2!%4s;r*uXOk3#G;}YSVa9?bXV=)0jin!TTBH@Bu@m
zt@~BJ*RAq_tTu(&;J$3%fBL9+Lf#0Z+Yuf^!ZM(YBHX}8x7v`tsaed04Dz_ZkWu1=
zsdod_`@xe8xls-dE;3v=BW@atxMUOfh~au^IMBF+a#Z!p8C*euQ2V?m>RPqA`B9oK
zNxtFAa=!I0SfeV2>89LM+ytIr_<RUswK0^%w)#bTeQvLea;dG8f1<8C<T}@oO6&yv
zmhhhPmMd&!bep@o+>>@6D-)(GiS6<*@LR5hVyurOS3Vy={xp}DgF`+uO~c#0hkOw4
zvk!&o>ds^C@xGuxl(_yp9Q^;Qa!z(vo&?IszSvg#(w8y8drD~&VupXDtNSh8tL|uJ
z`-hy0!%jz>PkG)Q*CgkoH`THt!==)hj%1ZGI)Z1IFOB`v(oG$BZLulCLZ9$nvBre3
zBYd-^eHtLy4XurDJU)o-!=Fpyb{aLTI#{#4K(nQI973vn-4k)7s694$+i344!>=a`
z5F19ITU>Qq;TIcP_kzKgemTq0Ue6fwpBlrH@Knde5OwalO=(0eg}c<YC(AHe{gNF>
zYizl2a_FqFGL4~arG!^^x$g_Q=G>^SgZngM-YItno2N$fI8&PHkug4@X*fYcX@VY_
zv0$XJyQ}olh$ML`e3Nu?jif5A%xWqJV84f^MfxT~WeV5nn~4l?1E11L>7YbA>)gR)
z7;ItbZ_K=b^DH-gfcO5YEd7Dm%5QX#7y-*i4l$UOB9`T&Kvr{=qzcKCV6#}V(QVjl
zoXaw9(mD;6r)4Ef0&r{|D<Q!=J|injuol*V4lSkmkkV*=5hdq{k`oq+9mdU5T$;Z4
zBCgnN%E~%t-(c}s<rQW63iAi}a6EXFQ}(EMU*fA6=UcM2XS0VGukkVPHk8>IC4sL)
jt6TUcTo(z;S~7e`?;YHuU5@l~bh1Hps^bB^$Ho5uGr|k-

diff --git a/mallet-api/target/classes/com/agh/api/SetBasicDTO.class b/mallet-api/target/classes/com/agh/api/SetBasicDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..ff0e2ce24fc77829f491ad99a6898a858f2d53c0
GIT binary patch
literal 2468
zc$|$^TT|Oc6#mv=WE_LR5E7aTw1L((0hQicle7Us<JJ(02`$N!Y;W<#^2(J~O!@=*
zZ~BnTG{X#;X&*DwAJz7(B)~Q{<zc-So%5aBw`cwLKgWLpxQAy+#4uoBFoigV7{;Dk
zhn8tu^1$5TRmZI{46O($)P075Y;Mm$g5ma=(3Wr8+m4WmyANMfc}odLCXi&f<8kH9
z3U9V)xeZ>Mm5yALBs^R3l|I(%Bn+gq;Sq+b+0q$mS-C<U6momRNMp>vcnTRzFkGuT
zP18E4n^sGhWv*5&PgK`;A2SSUbL4&q;wxdBCE=-p2DqBS6s|F(B!8jS>b`6|aRo!>
zyg>ug4Ea7r=GxY)zOZZDP2xHRGL*=hDcr(shJ<oLD2ByssSi*gciyrFnN8tcyhk8)
z%d4+BHO_GJ0+6ECnM+|F?^BWZFTQ0{2A2A3v{`*zdCse<kbBB7Town?Qoc*(mb=oo
z(v4M=KRa&I(pA=o_X`X+c6_NslNaTo@I=Mt52SQdAQBYBcA6EZVQx86bA=RUx)pYR
zZFMTmXS>VTiyKt*FiGi>kbKK;R=B%s5uPrsQ?=|p%N2Sb9S*9xAn@tF`C*vq)FZzl
z-I21gs*O#n73>Xs$}rmLqJhslZqEq~#x}XCJGE`gwVIr633;&59p3+^xp(|?-I+YK
z(veQ160%j3BiAqb9_*%sOlEs<HRuGzt}ENdDCTrtuILjTo}ir-mf_=bhnHbpvh4V7
zm2U`Lov}9Gmoyf`l`Zb6O|CgX85lb0Wn-(3qdetWt*|U!dI;Yo@jXfgHdELFwUU`L
z&)qP;Q3R0+U75-W3d5`RBnWxvG`JZGKC)!Z=H6V%aT<QBM+wg>YR0W|uj-1Ha@=--
zHQVyM9vIIqw%*ZdqB<n-1H-uPmxcC*m?lcon4~^gl#;uFMNZLX&NIWnk912f6}N%?
zjt8TcC>1Ca#xk|*7`3$+^?U007{CX?E{hz^L!j<V^8$?o*aU)IMt66b4f-0#T^ftD
z`;Bx5Xug#{0$X^CkvA~*Gs8!?@>hQ0HAeGyUt{tW2@GN>f(DW>bsr8D@gcc`V5MDQ
z!AhHo;Uik7qLU0cM=TB;VgJ$(y{2gcpBVUz&c2{AtfK*`B8ukAAcA2qeWXM9DwGPN
z(_ac$q1|HOOe{D{yutPTBfRsH)~wCt1jfmUdy(`q&HB{HAL9n_GBDRJY@T{<MDdN&
zqjSH9`V8><rPSx~HA!jp6`HlTiTuJb?)1~23S~~yo4_}CK;Lz$;*2&rzzkNYG8)v3
ze2VA)!01H*#UsQp$7{V9Ga06v8vSX;+TkZJ10TnFAoUO%0ecwz2l!UM!~tn1==X%O
loiq(e`iRCT=@dybjcx3pjNO1cF~UjX2^D`2KjA5+{{y+;I+*|f

diff --git a/mallet-api/target/classes/com/agh/api/SetCreateDTO$SetCreateDTOBuilder.class b/mallet-api/target/classes/com/agh/api/SetCreateDTO$SetCreateDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..2f20be29263bc207e228227c4353fa4c0bc07484
GIT binary patch
literal 2711
zc$}?OYfl?T6g>lm1;+$Jf<u~zos_i3Jlt3M;!%PV0*QGPBig9#hp|0^iPtmM?ieNi
zq(7sTsE`t={aC3#s_LEHjqwW-q<+|)nY;I%bMKkEGynYi`cD8$*o~tP{SIOY3}BF9
z>;*sKIhU)0+;-`OC>w^sMX97&X6VmM?>iV`xO3{X)o|S%EtL`8<CkSoH&Ux1#2KcH
zuFG;-`so_?s-lusTFoi)PL~?Sn(aIe2MNnO!Z493oWd53C)L5i^!_kLG3MY(0^_*K
zFk9BO96vbB@w&_vg~@w@8}Vpwd#ZJ@+K_HVcnkwU5)9+r&=z<ifuu#fR1tpJlTq@M
z4D;fp^bNV~39q(M@!wH~#rhzDo4Ca=+7U{UhU5(+-CTjb1=M#ENLlw060YX&=`eQ(
zcNr$nsxgi<KD260F+Ay^)>)QQ=Fau>{y25PM+tn448!#ruZp}@Wo~|u=8$H-;mS}6
zKmI>#-60IaMR}mOX?TL+UPr`YOF%)B`!WU0bvd=_WmRtq7Wl{Vx<c5a1*ybVqgE2$
z9xu7VHia&8cb|LGt|Md297-y9zHpI7BbL=(-Fs1xk)q+{>L#y8$&76ZbEqpj+~YMt
zjY5f~b{opbn%GcB(w8>xS9S4FDQ&pz-k{xFT`TEoZc8iscM|SYXHXNdEpjE(y<-=w
zAla@d<rbB)+lk#{Z!gUDOE>6wy>Matfs&mv+{&CCN^V0&hda)2Ez`5f<3-)@%3@7g
zDXz4J&s%ST*b=^3*FGJ$W2;&l-*~(p?!G@dh(~ce#+rjC_D@}>4L#+M>PS~bL>2zL
zYrJf<_ln`y)~1XcL(p}uDz5OS3R+hi^)vtF?m)YxJ=}jPblw|ne|rRx=dN3nMl1~B
zDZ|fgI`r6qOmKQHvDtLX`D~XRN31oq9ivNZnjx{Fl<@K{_kBUleYFRHgDr;p?<J9g
zowj?gmn&VBp)>B%3ExL2YmDA>Z_%vJ-Za5Tw*(lbgL#&oRLgpX?nBs%m@Kn2%hAZJ
zC3^z)d*Cuh@4>)0gn4==LI-mFgho2m@F~&S;9c|wNleWAjgdESo{tZo;L=~&nLltj
z`x|}e?*dDP0TGy;+3XoU3%uE7d~Ufc$r!$%=`dK5h6nU~NsnW*eGsIPq%``1G!|&I
zsE#GR77%w=5fVF1VkeM`z2!?1A0y?yqCzcZrK_~-Z%exoFvQ-Yv~VN7Zfa;P*&fB-
zB=T^3zIjK{DN3+ENN}^Y=-cP2-CA_2BPDB@Ih7&R%;Z}#E?_Zglhp`z@(t3@v&Xc(
z$E5TzX>p9(C%D&J^N?b)**QyCj__7UKl?4&iS-)yf%DLk5n2r21zsz77>sGk(RwoE
X>Dj<DT8)!^l)e;5(M@dQd))XB8xxcs

diff --git a/mallet-api/target/classes/com/agh/api/SetCreateDTO.class b/mallet-api/target/classes/com/agh/api/SetCreateDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..78527d8f73fe2e22dfd6c06f4ec77cc85fa8c17a
GIT binary patch
literal 3111
zc$}S9|5F=96#r~UxR3@&0*%m0iIr*+2oZ~|8roW*w9)WI5>Z;eU6K{9BzN)d!qorC
zAKDoiX6TIm=#2hP>f5~|$%Q1MGaUPN_r1@)_u2RM<&VG4eg$w32O;<{q`)6W0K*KC
z=jySVt*QD!c9&NSv&t~MqUoA_pJ6DO+EWl@xY1VHYSwByhNj!xeDtEi8@6WXL4+9Q
zY@?x75}K8$tL71}CUis3=%k$}H*K*j<Pa2u#mS=#SCfS{Y|%C~{UDdx3u2sMk-yL^
zn-)sktmmuNzo3pFikO0lFeY)8VX9)(v+BWNR&8k6BDdE}uG)OPw9OEZPBO$U9xXuL
z2xCehT&Z%aVrnutv3@O#>v)r4yvr}5&jD)MS}j|kJqdFoj9H;RN+i{-lHoX@;4OxQ
ze!k6hPF9;*t;)?15*UinwatZb3-2%lZNu@FC`uOkLFG~xqZ25}Fj7bp%Asl<t{GL%
zFf#}xFN_w#$Y7C@g8$f5YZP&IfJw)>+vVrHV&_s%8Lsa(bz7_Rynd`%TDis_>bha8
zf?Ua9&8U}+qwJQUi{#2N%yt`;erkA)MvB^juG&qLVz}9L1uGq16by>}K0#(KD0K!Q
zuCpD5(0|+`Is2`&FTZ=9+GFrLOpg~doo_YkWp0*K3Q6RkQBiAqs;P;&yXdzMHHz<A
ze~uaAUPI!>H6AV6YUOBCZOFNT`=0W4d{*!Y!<g4kQrqPAp;6sYO|{M`YsrP<|HD8J
z?*9|<g0Q*n+i!X0Ndcwo6bZw7$y8sudX*JXIGOBGBl5w^cRfrUdCUy&!{Khx;yGIT
z<|&K|i#-!F+e2+|YKDqN)2#3fO<Z}jGrmOuM6cHtx9m+WQjK^TK7ZCDtA=4)wy8Fp
z%eKacQ3~M;&>R0{7++zZDzELK>D+=FrE5Z!S3XB!c-2XirXL$eJnJYvQT1w#TXO}&
zIBGWf=1r%e$m4bQ*)_~gg|(V$Sv@eG4L;rT47zs}#51B?Hi2Bn8=vcX*K?kSn;KGt
zzBql;^vy7Y^SaJW=@%zXCVC{90%|k2E=7+5?rE{TROucaWh_yH@zKNVM@+OklCv}$
z2Gs$LOY{Z7CLm`q(az*Z?F&PApJX3y5451pMLUk>GDb)a-~;;Z(8`~L5uou-`V?&b
zcZ|M<vL72c#g*SO=d&>}OV6Jml3qALJe@hgbb8u<f|*y+>$~)SjBtPuoi<7>E`$$h
zw(KC|BYX@<Nkqq_G$rE{k`srJgr9!oNRGGmZnyT9X>Wz(Y54x8V*(1I3hv3j2lNLz
z_#tga{d5WlA7l-(gB$s(<Rt=M9Fmy0&*5jyF><IwYaGEk9??vYl#uQasjrdPKgG?L
zQtz%yxga}A-F(B<UZPQ~D(N%44ZM`6cPa~R!j6i|O_bXB;~wVk0zY5MJcB2sCCpc7
z6y65Y^JkdvXYUXkY+X$dd3;Lyg24czi3o6#LK>2wS=XmP`WHk71r%@*d!*x}LpS}H
zYcbUc8@~)J{qn$Pln33$)0Z)J(x5QVw^@SsU4WmtJp3ljx1_X<9a$ZW(&uxMHsE*j
y-&>zfJ&P*vwW`^x;jQ0YS<?(f@+FF=_!{5fTYQJ_<+_hfi$bOJEu)GbF#QiU6}Wl;

diff --git a/mallet-api/target/classes/com/agh/api/SetDetailDTO$SetDetailDTOBuilder.class b/mallet-api/target/classes/com/agh/api/SetDetailDTO$SetDetailDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..d802c66d80feb775e8ded71551d8c4fa005fb22f
GIT binary patch
literal 2749
zc$~FWYfl?T6g>lmHI4~{1SfH6FvV%iBe?IT<<SHa3axoGCPb*8#`XvXuV<~@F-rbP
ze?}`&Ath4#u~L6j)jQ)2*my~xQa|j@?Cibg+<WewnZN&e{Re<WJWrqpy$)hY^r4?&
z_>dp*yvx;oeye;aDw?5xK`N=27<zM4yAI+E_s)zqo36X<Nu`DV^kqdfwDeRQ35E$-
z&B!2A=YCC8Gs;sB6`5wrO>LIVJOKwuLp#VYnk$}Rmb5R`{`}PL0ERH^;6@T7xXCbE
z@#=ZLe~{-5nJ)>wA~cuo%Fb4{{bRW)-Ky{zdSsRIX~QjgglaHHlStt<Lrn3yU>ND<
zHdc3&NE@qbRS{Ht8KySIkfmhn!F#eZ2=|g0M~0!#I-Ca6)Y8otWuPt1M@dW?nxqmh
zb>X0?YR`S?;6B5hi}Fn%iw8!z9K&Aje1_fGT(oi)NR;{`)F9JI%wU$`cAeKm!BZ8k
zUr2pGvp{pDDW}8#i@$q`VW1@U71vFls`lU<#zL`Ot{qaGl$u{6uUNsWlEY9@DzVwD
zmxaH>%dRcFSK;n1_oev`7i0QBQeJb#t8^Q&Jnj-=>Z%ZfCCw|f4c-Vt8Qu{3z^iU^
zpZb(~h{76w)>K;7#kx9@fizLSYKSLFd77L4v`yxE^|DvXZ+gn?PQuNecREGv@LZ1C
zg#T5Bv)W!6BGp+IN-)&p#d++DYJO$PzOtDzjO8wNC9}BpTDmaY%0+f)qU1IGiddB<
z-W%=ibH<t=HbtP<ynqhY;bqU$f%bW$Rp(%+AKxdihII!&n2q-%mF|o~sw1x^LaNqY
zT;&z*`L7s$X)j%9*aBVSs_Kd$TlBnIv+?fD+2Lq(k1+qac>ady*s38!fxB)=YB3+j
z2E%TL4iOc|$?77T&6wlZjBN+5`Lw5}{oi&%F0v^)GuM?8e!=BIAgF<FMnF6GiQ)dG
z#BosSxZ9#k={jr~V}j1^9y%iX=uOuX&3eqOV#jni(&-O|hju<k&!k<CTd#illc!mp
zMrKx~Pr!b&rk~Ke-!8`SDZP^|1AK<hX{2)tUm#|kpP|<VF*@@X2H(Kh8yPskwLhn4
ze#iCcU+G707g(z05Q3SRiJsw0Yt63XE5l_-hVeB`2f$J^Jfi0tdK?q&BO68v-x8Jy
zW1dEX>KNi%mbg2M7O`_m>{z+jTfP+WF;XrP^UkF))9sjPi#bkMeHOFYCD#XU<@(Sv
z#4aIMtEda7bulY*5dw}Ad8_n`?-6n`I_Zf^Cq3Do^rTIC3Ezbcwn_%ZdF&0cd(+3%
z7{^qjW771PvOdPd2|kV{YUMX}+INrfB*a`HLCwE(6y9r00q;UghlnvOTdM-$nK6r}
b){;@o3`K0x*9ff-(Vs2SZ=3pk2Y3GkQ&NfM

diff --git a/mallet-api/target/classes/com/agh/api/SetDetailDTO.class b/mallet-api/target/classes/com/agh/api/SetDetailDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..a7ac1b6e0c42552a416d25413e0069cc1bdf40ba
GIT binary patch
literal 3149
zc$}?PZBrUo6n-uOi)51kDvc&aZAb!`NbGxqO&T?6Y|*4*Y)$&Mz^z<acImQY(*M*C
z$xNNhn3?utXZpQ=r|r3S7X$?AhdN&F3+Fj6&pG#8{`~vsHvpfY9z_6S8iG1P2s6YE
zjORwqG_3vHHZR*wg(18mEaBc^7)xh%HAEOL9}8`@O!KiVESEd?UzB;n6}A;Ylwm<s
z=0$V9Za6hwnYV1~rbVLjrIss?<vI!tx-@&1VJclX)>(8NVeRKLyAhmcNRjG#^FMTr
zBaVcI2_2J|Vz^MY>p5e;nll<ASLE(GcMV~#?>u4%2ns3IWvyV7Es1|i#|2C?1TCY^
z84@Qwl2R9ST#`~}D!f^CgbG-mU)C{)d4`a3w_~E^3Nu#_O;>^6)^SCGb&J1n*Qzb6
z_QVkyt}@&h=5eZfv)U47g*#ECFqWYFrFCSGWr(=8=OV*Wx-d*tK65f8spW=_n^+<(
zRijy5vnv$*>?kc85_C()GTx!;;6JqtlLF3-fOOe?R65{gH=lXRaB;h3xuVWDtmmRB
zN+!Q&S+;9PMiqgkT`$?S+?H+0D$6s>^#gW(ZuEl2i(=n0+?GQzT<^=kN{@d#lqTug
z9n!m(?yrZFL=8JRPVk@#rfTvCJzo$O-)hxM+}Sb6b6H<@*)VqvN65W@7<8+G!k8IO
zB}1|oNEG<svqje^*EWrY+H1JSaIQBl4QoAD-1Aez{kCK$8WP*&Zq=?lHXOPRRMg~F
z<Nx4kSQ-Y?m+DV>$Df|OYbEbyFx*OKhLShvE)k)V=>Zo*wY!bJ&eT=B%<gRw{#SI^
zqfN2Yb$DDZ44D&$!%H+;v|CP@KM*p}@$NX5qzdXsTfFIRa#>)+N4VX*W2?69HeJVP
zc<F4O4`VNir+B8}8y(-`JGxfK?m8aZel$LWu2re6h2d2<A;NlY*Lcnod}vq|lQ&ZZ
z+pe`5qie$l%IaPB8>#Jd3#^$&vpGP=v(eUjdYqq=2!3F=CMtQ^*z;X|JFj|mzPlOI
zgA=2Xq%lKdmc|10>kZ4|j&g|;9TNlUNP}RwdMai#)Oy~~L86pGPnf!FoStaVJDHG=
z8?E1^T^J1S(fmG*2-pPFE+JnqHDB^)dXq4Q4`?00ha-_!6e3FBhVT)Mk7@T8VZ-uw
zLiRP-;vYEs2HIX?{58(}J{@dt&&h3e@er}>jYA}}HxDtBoemyiHai_U#KJ355X5cz
zJV)xJi3F_{XwK8_j%NTXG@w>8NTyaYn1EWzaK_Y11{72)>2QeffbPrBQHVj@rS&BQ
z{vk7A4RH;hYFJhO>+~tTct8?UAu<FqA%#IukV5!OeWuunA&`WkCpqS^^pM6x$R|+#
zwO8ZVz~{7+q|GaziQG3x?Y+jemrCxoPrW2PPOtVCzVtH9@>I(n;X3eA+3yz4cLLOW
zlH&AS7Y4u=fnQDqU&ba$N%#uQ(%VRO@d&wL_@pP($x#Gbctqbz9z%>aGQdeZrW8q~
zIp3#H_E*G41r+i%4k*h>k8t`a*I}w#ZSpi~8D(}5c;<BAIebag)DNCL4cM!q?U8|9
z8R*->Y1D^MR8l*5qV5(wlh~!zIzs;K>Al=uQ}9~CoT|@uL+F+BTEJH{CP~NFR55XU
b4+ABXQ31z~kc}ch*5cTwny=yjCZ_)dl~SwD

diff --git a/mallet-api/target/classes/com/agh/api/SetInformationDTO$SetInformationDTOBuilder.class b/mallet-api/target/classes/com/agh/api/SetInformationDTO$SetInformationDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..55a4b90ad24e8f587616bd8c442cbb0c55bc0535
GIT binary patch
literal 2982
zc$~FX?M@p<6g?9NYn&xe8VG3`$28E`CW-r*rUlXl5{jw$C?=#)e^g_8fQi>L?(P~j
zZ_>wTB}Yh!)c&lLhpKvKykNivETaDK&g|Vg=brmHe*5q1zW~hQr#LR4$3d@)i|At*
zdck*j*5hhByIOo9N+Cnvj8rmw$k3BYZ#sxEBw9)<b<bPVQiZ~Q@>@yNLa9{@afWeO
zPRbxz<$gt!lS-?*id2)udT7LEABO|im>pmkN#$FZh0vF3dpf<@k3kGMc+bT!-e<U9
z($y^A-pTTs%oaqLQ(M}va%1xG#_B|yWUel~vhW!$$TE3$$U<HdehecFw-m36Gl&`*
zS6z(Z8bhzqXBcj$8^d*mv@8o1$}K7UE<kU%NEpy~>y!~EU5w)+2B+i;9%^!6B!AfT
zr-AUvy=kL6;bIaWGYqJDwJ7}6tqtK<0|u5eUsEp9#=xbr2ui-R*>Nz%aO2ca#*x8Y
zlbL%Azod@Gt=;twl1_YcopL-(W%!AUPw^SU)he%ud96x3d?v#k+65t3A-Plge_6DP
zDAV)0Oqm|cOC?rpa5s3-v$@wL?rm~kn)gW98}3Nr`5=G38YO#6Z7!zI4>nK;d8x9@
zYZ1MnWfAV^@*4N4e5qH7>do~!)m&BN)UFJq@#JMqJW@)B7A`Oy<LPQqSF$TwnLa1n
ziQ|V35RaV9cWUSJd$XGAn8|lQoKEH5;q=9#+0u+lodH6+u~0Vyz;GqivC!fLUH403
zL7GI3wqe{eM+j#{1mU6%Xdn;GX&nZk&uh)B27`TAisJ|59W0wxTA@U>3`w=CD<ZPj
z?5+h~qPg;t;rGLdiWHlmi(HjG5lrN@uGDL%x7(3}ri?nM|C~R5vm9x=2x6XlUO|R}
zrs*2PukFD&DJv;io@IBEW;&a-HBil4G)Jw%;W23hhbH4JOEb7RrG!84@gNXX$zvxO
zbg;oN*;ViyY#zBYJE_t&+f=5}KS)<H&__?Y_Gov(Ts?M8L@QkncBRp8*R+-Q(~mB3
zFnmtCEUnB)GJ9ZuTD31MEVIuq>FG8Va35dMN|Ox_&}$E`qsNjMnfeC<Z{R#1?%%_u
zzcW*>a5?h_eduWe8*Ltlz|79DXZYG`v&;C#*fK_jFm2hgQCeo~-w?ntY-cQuF+4nx
z#+7{<qg~T5!E2{6b|#I)DKtLVr}1IeG!h+YB+jHUj&BLe(3qyxpgP9zO>4M4r%l7o
zfnmoM3){ChPWGs7@m=Iv3-kIb-0B+B6y5>m<e5ICDU=<2xZSnAv<+TlFKvBzgt@5F
zmk_gulW&lDo@r2pHmE!rl$!>HsX=ZvaC;ATIvZ;?LGqvp=J7bfU5xY+Ct<#(Cc|l{
oi3qh9PpsAgzPD?Juwhx}=(ma=>1~+ggY;#c;#j~_Jj1pB0AU5WmH+?%

diff --git a/mallet-api/target/classes/com/agh/api/SetInformationDTO.class b/mallet-api/target/classes/com/agh/api/SetInformationDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..1a2b9c4f9e0603f2a64a3c6e7f711cba9da27076
GIT binary patch
literal 3303
zc$}qHYfl?T6g`6<Ys`{>c?9w>CXiw;50{1}ZJj1fLQ>qCM}g3iv`N?YfEVl?y1Pd0
zf9i)usud}b+K-j`L;5q?-q~HiFKnbptmk#-%(>^@xx?T8zWoEh=MYi!AfO<qB7`u*
zz=3|Or^~vzpWfsJVHFv|_YBi;?lT0EsT~CohWMG$TD4r>5Qgb+>&edre&iU!j3CM|
zX%rKNov7&6AulFOVa}Umn#fljIW7B9C{X3G{R|_?+!^MUV;SatCbbj6WritJukbEV
z5ezb<j3PH3W6$7L7xP{WVOYV4icwr)xKR+5w7y?T>qka<i#u6!PgoUQy0W~z&d_6!
z3IlZnbAsqekZ~1Pag8A;IWojrosd>HRK%rK^o*dKPN<l~O$Mc4aorIXsgSE@^33KI
zo$o?StGI;^82Zg>CC{z(y=`t)YzCH<t4S3pc|c#0+Xc&TgP>rR;Z8@-rdwtnRgH3y
zTTy5T#3(-&RHX4CL&OoDKMc2%xsITjRI3OQ>LV4mu|!ZM-7Y;AMUv}gSE#Jqc}K-v
zd_sB1f2!(ba(b!TzB&f$`2${XGO6bb*EXx9euZbvW5YJ`W&Y4Kh2w6rWqiw`k{5^R
zHDSu6&M-_gZ`l6jsBzP)WOG)uI^SldU6ix!E&yegC)MSgVe&OM_S-r!k+~)cdU;2;
z3_12EgHFjHS`%ILp*-4h^upn)e&lXcu*`6&(Gvwv8>)fFNx=%kP#gYayULxCC~oK$
z-32NK#ACWyz|+MB6_vb~b_|~-Q=O@wo3iB7aI#J6xm7FMRAB0of{Dg!>o3t{1DYFK
zhAU0{PJ%~wdrMTU0)J}AFpRdaT#!(7LD#tLta2Gf@;iJ|VFw-w;n<F)A9)(um&14-
z#S46|;0F~i@rq)4M#l0~^||_67<%(3C=9Rb-8IZ(amdr2;fih+%iNyM32|6G>YT6s
zMw#}@eq|9>y}{$MZrg1zUUWXap+@+MM?m^48O4k&rJ1uznenS*rlIm>>M9+*5i$D4
z=(|qegnTpTn_*D1rpYarBqxE!&PyHzhYYtaB$$Fq!~56Hlp^aHW08t;50$VmV)Ch>
z{-^GUGM(BCeG#xBxTBbSO1fCYyIRnT;<of!bg`rtgW5h?4dEVw^uGY`4+8Wk0~^{K
zu-U)R{|?G-toIH2{+v4*U6P~ulhJ@2X|pxNw7D9_wD}sYYvaKhCbW@I4O7~9xQ3b6
zgc-nn_uQb%BZepvP_aP$2Q;(dor^E<5O8}^FXr|<U1U%CA8>op&!F3ro`&3>^eBu+
z)Q=<ZA04467*g<9!4voIOGXXQ-;XTWjECt65V$l40fL}FAf8ll1m!YmHOjoE$7_O~
zfM3yf<3!u~-?O$CUn55&scgdafINQ(ZTAi4esk^a`|**#gY?v{`qqoo%2`Ewi+MmA
z_cRzw$yCq8mu!%p*R?j=7lB_dwEZsD$x3d&N3CQV(PrP`<MZ~9dN!vKi%<l<p>?Tk
zh|xegIEqaQm;_DxoI={~h;?!(<RiAp-C_7TUnQklVaMJVHr^KY`uoC8V#^OqJ?z9q
zV5uxoR9iVsb&BalIHgW=tsZvfBAi0lcCDUahuR>mY510UFA?@HZDXmC*SC2t-e%4#
tUGh3NuXv^EJ2&YVc4=h@KO&C;is0D8K1z_KrH7ad!JvzGfHF*s{|`l%roaFI

diff --git a/mallet-api/target/classes/com/agh/api/SetUpdateDTO$SetUpdateDTOBuilder.class b/mallet-api/target/classes/com/agh/api/SetUpdateDTO$SetUpdateDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..2ab90a9f63b73236f20871388a224bf08f505394
GIT binary patch
literal 3207
zc$~df+fo}x5Iq9|2_X!|Mz({4L?YV~Hzl!i<q{j&1RQY*!Vu!*VI@t8u~s{(-4SK~
zNj@W~B1M&5l{}`(AC*ea?jlw~;*y6vXlJI?-KYC>&-T9m=k1>W7V&cwJ?IT16hj~S
z8Ae_ihep;ktV(vX_==YlL;r%Xgj!<gO=oro5Wzqg(HI61W0)z)TGpr>WR1GW7Pxv*
zFB^(K-Pue956cZ<mbuLkuGq3sUn>(%{uC%Lt;&2D*BB;Fg&Pgi+>*jl+<x}D#Oq2(
zD}oV*Nl{J;Cs{M>DlaE3Y0X-snk+Vy7VCW!Lm1Wh++Y|>2Y?F776j#GF&0Byr_dwH
z5!_}-DOne#3tVf%4`LX{U4}l_fMN73f>xV|A)(a<%iJm1!cSn5IHQzm&W`lxxdh<H
zF{E&hVW`Eh$zekYGn*HVa$z6DkPa&6Y);ByOflT<R;(y8n9+pIGE~y-l{x3^r`t_(
z8d>`}vpY)dmyO{Qe9CaEW>k4jS|vm633Wg_M;VrK7+(KB(VR757$}H}WvGTtOh0I|
zSjY#d+##lk#rY+&n!QldE69m{C@0GVFq{__-)Pi|+}<&YCf8jhONO~?*g~IuVMrYa
zVr4FWm1{>RkI&GUxvGnib*>I%dCRbk8mHc(Fop`sC{@>ux*uI)yJ0C&<7?KTaD<Nf
zO`SinEU66L{EqHeQ`U;In%$6=zTo6H)o#>8Xt7-GbdUcl4Z+G^(M7zqER>+1{9e27
zZas2k$X_n@9PFtp`|m62EyLY(cT-Y}DCzOea5LTU#zYIUVVC%d(0p7En$Kx%a<Rc3
zwJIGNDkIBMDo5Ey-Rmo7xE~u)Y+@^nAM|Tsn_A-(Ls*Bh%6%yBO|fE>l(gS4{2FWx
zU(s{AYFK5HJE^>s)kgjNS4E4Vu4@PNmjRJC9a~-<zKfh;ngyZwd;~iT)fOH)R3Poo
z#6>of6z<cVD|!={9Iib0`VR=a>MybkLu}2mxScZ%$KiBqZgjv4<41;jmtri8pIT;e
zCsq1B@RTu0)2D~t>izVjj|1BE=n3ntG%(#Y;jc8$!0?&7e@MS{;QR;!w9?lINj}$8
zf>x#_Q^#PxyDDF}Fj^SFm-LKz3it|N(@HZJ-;kCzo~Km@6`q>@gC4(iG>>~KzPa8F
zx-RFnQ|)bp4sr4sa(!;2*EJZM{u@K@Ftk59e2nXVX@r|DLT?v@u_nTp%M8PUtIe*R
zK*b4ak+uV1aaxw>_pJ^{GqB{QHjc+#!?<-4#+^%tp$l_1jPVP@NKhCZ82<3m3@2P*
zA1~oDoWc{Tq4rrmlUnj5wU1nc&?QpydThDb9$NCSL$WCX_c||kLDFdou-6T6J(%?U
zbJ-3ioo)+BOCFulkZwlul!VW);@^Ph<WQ?8-yyR<bwsE~)M-al<|AVKh&VaI{bNjb
z=H7!!HZR9_SoQs``g#-He7?mTaGuu*-)jhKuGVvW@2(l-T}?(zF%<BEPNO7`&_BDx
L@E-Q@5_kRuv8wjB

diff --git a/mallet-api/target/classes/com/agh/api/SetUpdateDTO.class b/mallet-api/target/classes/com/agh/api/SetUpdateDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..db8abc09cd528215ca297a98e575c15ac2b613c6
GIT binary patch
literal 3638
zc$~FXZFAE`5Pr^YauNj+2SQ8=G1LUxBnbLKX&qhzG-;jil8_eY3$m>yM{J#uWTyQs
z{R{m7GtDp)X4;RP>5po=cajs!u^o3how0m-r`_jvpWVCFpMUNC2H+Z+!-ycNA*Lga
z1jE=1^Ob4TOncLKWL1PyWk@V=n|s$8qPhHrh9tx3eWlfAt@c20+q0azKUS=U$Az85
zFvA&M&2TqUH=S*(nz4mFZ<A`K-1OwKl!u`~m)njq9M6^ZG1okY+ndGwMiNIEvYu%0
z${|=uj5ExU6Loi8JZ@A?&pO0n2opG_;kb@ToM4!$h`M2JZW(5S8*7&5W87K4&!BBO
zqS;s`CdS&FED3T^f~0kvln4=CmDBfhoWf~_xN@5zbucigmeFxWs*O}Fx8iWcn_Pci
zM;7N8MnkdeZQb;E%_wo#Qy}Mc<l2=N9gCDT6o`vn@nqX4x0}3HwVYw(5lvA&%<H%a
zgCXe&-&cl<xl%8vV*X%k66Lav5AY$OY?<!XqNtMlr~08ROQVl<T)`()ZPv@CS#ueT
zJ|=DZ-Y>tfDqb=FlwtZ&)Ao4XTDD(tmzQhSE!!5JDXDcOgEdhvi)~|7*s^Mi3^Sbu
z>pwNZMnh|S(>A@PLouB1NWntLzjaE1bnQCf&L67jXR4*Ynd>a9KJ$R+UMu?*(mBs>
zFvR?H94&F%T5Z<Lma}eB+_FqX#jI_Z4wv&_G3IS?BH?83L@-Q-4T-?Ocy!G(E88n(
zL(MgO&Tu3gm4@Zeh2zJe;melhp6{f#VtHGl`oMI|x<%zqZvFg!u+}T7|0<)B>1=0h
z?YSN*Fs<w#L554Yd{3Uc9a`f4Sgy+nRQL39$CcW4N|*>=O2I2y4529k+ZOlhh#`Mq
zvG-Xp2G9+khT%2QbSl<8E~{v~J@ShZi0;f)%k@?)S-r$yqSdFyZVTbLo?|xrT5*pi
z@O&61${H#<svx+T{Qw<5KSBI~37z<I3x(lLJB8eSCAKZYS6njfYRz)9B_Xz(jsAre
z7|Nq@C%Ei|)2^^sGhMd}#<Tvrhpyisi%HOxeKlxUMP4ncE>vu5GR071DTX=+b=wp@
zQ}j&JGegf=dS)5)W!ttK<)}p@O?0V84KEqa4aAoQH}nzFO_dVsE8{YCx(IcM1X8kB
zla!Jjm)5STRfbP#{EVI?*aXxpC7bXe8q|N)Nc|R36iJR?p|1rsTYBSbUc(5<aa^b8
z2EgKkq0yU%g|}dHe_-?-v?r;dw;1_-zBM}{XX$urIwq%u3p+>^=5{bunBT#4AsySn
zOd%cL!P!DOv4hz+1RBFl<v@)7M`#>H24gTtzC|lb{>HeCML<cCCZ;5xC@D!oqDqp1
z$CM;Pk1I)rmcSj7Cj<Q~k<og0jo#fQIfLlmw7sTbLc=}vTT;I-=m(4*L5Z}|2?7Ca
z4cZj69S95rgMhmg#q0@0Cz+ylGU5+0pXgN|13?!2|NU_Y_wj&cH<UvWwU&H`{FAr1
z@LK8J400&5H%?zP4+HJXG|E-2u!}k1wQ{CiS+c47Dgm40^eOYGi}@wsmx0W$V2!k-
z`2vm7+hpOwE<WmI@6(^$OJ)-5cuemlv2jKd8Q>%~0-ub)r+DF4r1}LE4-l!HlX3Kb
z@zfy3T@J@F1W7tYG#`YW{;#lS_OjOwJ2P0QS$sv6-f4Vx5M#emzwYZ>j^HB);AaPi
ze?s%8N_vKGAkR59SA0v-b0mVx?xZ@);j2iV<<2$#I+G_lvUiz<HNw}|cdFPJz9)?d
d{D3WRyudbUsKbW5Z6f5$1Oy$p1{`=u{{zJ174-lB

diff --git a/mallet-api/target/classes/com/agh/api/TermBasicListDTO$TermBasicListDTOBuilder.class b/mallet-api/target/classes/com/agh/api/TermBasicListDTO$TermBasicListDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..133c525aa4989bb9546e75b2d349bf134794b9e9
GIT binary patch
literal 2148
zc$}S8ZBH9V5PlYn&$tF$7Yu3B#7&&WHVN)anzk{d1t*k54vA_?74<{4wpV!L^R9Kb
zhmwENpV3OGkP@l=SgAj%>g?SC!8QmXYj0;~XP$Xxc6a>me{cQ*u!gNPCNSwBk--#_
z4A~capI2S3_Nq@?FGSlgBv+-9=03w@sl4kT#c<`=XghG-XId&FyoWE_Vqm0JDWn;S
zr0M$w=@<Ik>xoW5X?0tXb)gj)tG03)4l*|K48uaHaSYouo>Y6a^6oU|kah5W2047d
zaHp;NRle7)@`0@GP=pQc%XUNh=E2U>;;>>PkZwnK3{xQ)$}S2K80l86P0hkDWRS-q
zLq>_0rrr%y?<Y?(<VNW@xWsVzEDC8X;Uk;SWriE2;b`L$%+WDi$>1sq42yl<6LqcH
z-25y}mn7eCWr+CQ^I(mt7^a(YPjM4?g5l;6#%g0Y70RG?pS%)v-64m$hE!rZ=(mKo
z!&|PfMbT~U?s8Asb*xO7uCyFS;LdY66m4rHx$;G!@+bMd8XR(*X&T<{J>i3RoqZxq
zS9hLqkM{-L4&wjoFpbmdb76K@e+-n7eep=`OJBwW*Ok(S+jkRQP*?X`x>w!S%04Y}
zDh@jxaX#Vsc--^3DAB2w6&VVpvmwYdWposcVZJo>3Z|Pn@Y-Ti+PW_cL#$X2g4q_n
z+0s7so9u?x#y1`xL}%pBC2=o}8de>w*_T4CsCXPls(sxPak%L5Z1T3z-YbUR-YrUO
z7=dna)p3PiY-rsJ24h~+X^!^D#+d)o7;c;=-eU|==dRn7M$}UHo?(5Y7N?v@DQsVB
z>{j937PZF8)U+NcCA_-JeP7TmSUd&6!2@bY=c<K+%@ZAdoGJY&M8^1p8t4SIunGE6
zhXx~!U0tI=U6tgia3pExI!RTUnblMd!2SqLi}X!~$`o$UHxn7)Q{1GPdJamovd$e$
zhQSt=|G~^#IL~v_2YB!A%JQF>t^7_Ki4m}T<Pd{dDPmbZ3S>3cNUD%L2{wym8{LM@
z#<|?WZJMXS@-(f4NdS(`V<jY*$7f_^3D&|o(59s{A5t34FQVieQF6jUvBS7|ip%gh
zzKAP!kFv7P*|%7FUU^NKzQ+6kJ{%7o<&-@t-j}!&<9tKbc5n6&;|)Fr&O(`uQ4;tn
jw7QG0!+D9YtR=&@G`_<+t#YKFqn!<^QymZS11|j!4@o7z

diff --git a/mallet-api/target/classes/com/agh/api/TermBasicListDTO.class b/mallet-api/target/classes/com/agh/api/TermBasicListDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..11a9c1ada765a6298036be3c4bacdd0f30375d86
GIT binary patch
literal 2496
zc$|$^ZBr9h6n<_XYzToscu}iDY@sGW+-hxW8>AJ`N*j;@(xRVkk~`#@&E9lh82bbI
zZ~8%J>M(;d?Z?jequQRkyFd~`<iqCfJ$ue`-ky7I-v4{_7k~$NkwgrA2KrNoV}N1w
zB|qS%#qE7_OH`CoWf)kLw)B=5`f~YQ0||!dQ>6{xvNn~pJ>fihRS`{3Dm#HB!z@V}
zZdSV426yVBnzfa^V3T&X?0Z_Q-;*$q(w>JICUd1z*lo{|_I@$HJBTz!4UDCb!8pUU
zifWjAzh?5LG<V3uGIwRABwcTH=P5%xa7tN(P`)QEQ-3UKn8_5TaET#hi&x%C&A02%
z9LbP5>(;;(hI_qS&2|cweQ8yNlf-58WvH^(Qn-$3hJ>d=P=>p?QZLA2{%jx`DVxF#
zd`w6+?$%aRRWRK65Yn19oK0a4pHlzCuRgb^DxZJAti}J+@=H<iiuvaZgWGc7=AQ46
z<C`6IT|5J*ah8e<SGRoIlMS(EA4pf0E%DH{mB%$bg8o>lQC4+xL)n@^WH8fdu=889
z-Dob?+0|}@VdxKwlrBkIZ1|0`aCSK1=}xN(w|2QB^*$2zdo@Ym)4fZ>Fx75M!9@VW
z+a9mf*LgG88~B1@q&-dpU$q^qV?vCs3$LcCo7~|ILCmEv7CUo1ufp9^pY1H-33gj0
zjdI9VhWojE&&1E;ITd6g*M+dbkXY+D%q?VMs{O!4pGbI&cG_Kr{2Af-giCHK->Hbl
zQuk!CGwj<MhGA$!xZb+ZoS-rc98b8>Wu-jVb9giCh?^e34@vxpl7aOUHbA3g<}_$0
zEOHclWI_j}e2l{IrZs<QAE>%8L&YcDu3EyKEh$y^n_c>N)=-meRk#&LHa+FEDy&%C
zb-Q4^=<U62)I=>v;3w)rFh7f}12Ro?re}iY=9+B_CvYh!-Am_C!@$pURxgyjfxWiN
zq?;<WDOAQCn&B~;YcaYC=rTYbZU(y?^0W?sp+M_AJqfUJ1iOqL`Lr7JHI7^KEYR+E
zvhAbwdf^ak{vQm#gRz$xJjBr7h55G_DcpLCi8rLskJ}M6Fa%Ri<IoVFQ8)<RbSNx%
z)2?E;OYf;jlA+*e?goLd|LBKq+O&at2EHWOeR>9UHXu_(*?b*jFbJkaI)!gStuQ<N
zrHDn^Ed;^D0$Ji6F7F-Uqu2D#T0%}>jDmO&Y2Tq$OO3)2t^%(Ecdg3iN#sV9-xysz
zOI^%ofIlu|K8J5fOPep!s-sO5=8y2ndG=GG&PjO__zn;0yDn9n(MBhj!7_D5gPKuH
z@xq@N>6K7CLJVuX(v2|_VYzA2pH!?Be&QnVajXVfkMKBP52L>W-|MS5AniE)9#giR
krXfk6&@)0dYh;<mCbqDRoq#(r!b#&9HGdbs;5n}R4?inL1ONa4

diff --git a/mallet-api/target/classes/com/agh/api/TermCreateDTO$TermCreateDTOBuilder.class b/mallet-api/target/classes/com/agh/api/TermCreateDTO$TermCreateDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..980954149a6ef371a99d98298a1a30d754d1ae95
GIT binary patch
literal 2480
zc$~FXTTdHD6#fPruW?N5y5K-5!8D{XCc$mfJ0TZLD5S=TVniGDX>3nn;`NNRJ4Vev
z>Cb2-Dx^eeA1n1oRXwv_E`~KBmGZEAW@pd&zH{3%`_I3x{sgd$Y7#>jb`VS965<S*
z7krPGT&{LXPwFp3!!X3}N+r!bhT+2ewu1!2wPU4f*L9z2sf_R*{n8K}BehB($#9)^
z+Ii{c+uUo3W?pG^Taj|U-ZggHu9I+(vc#hd<AusGYR!03?JUi2k06bVgZEO%;(dn2
zhHjVm&Tff!WNC{C%AVjxtZqG->w8-1O1CLIhM4t&A$u0vB9Et#v#`mg_}Ru7_&&jK
z(<*lPj(CIr7UP2yrtl#{;?Ra6S2^isCEO1fuca`9Ji}$<apk+*QZh_c2FA7I;3I~~
zf$x);#hgvy4Tc{hQW&ul>D)OU%x`C@Rc@wGz&yj%HgActRt;``kY<-wzTwLF4Dub(
zpT(fMmUWXdovuhFs@-;7cw4;g3R`L2;O;i}q<s!IV`f*9gP#m$iEJO@S&iz-w}%<6
z8Qy4Z@=oYbW>c75-F(VD-WJrN<lM}&t}?PMHq@T<rS<(~M?6$Yo1jTZBU5p8yRKWM
zs#f;1Biy;uMn{N!mg|M+tpATlHVfyL>aFoE)$NjDx^Rv$=_QQrrJrG}5ZMyRn(lfH
zu_l8y=(At6>V#1hzFF5k&9uyl*2brgu+yuApN``}5)ZNBplmyRm6Cf*BGsO5iIA(;
z{A;{nwD*$X*OM(0D)vCvxoWz?pQ~uy>UN^Og#m`P^bzVmRZb7*zK<h>D0A1XNh6jL
zSYxR5CnBl}1v?{`*{%HX6tqu=^USVKOsi!^Lm;)Gl<>+f_kBVAH5LWy;4#CE3#G<E
zrSDLQQl)dKr%VGcO=lJmqdT1nv>LKwJdiYs14%=cq(c{-YG5eRszj36o#Fx5?}6F^
z-Q&S#9JlD6>M7th7D-YYkx?u#eum+IbbR4&jJ}5RJUeoL%YPLY{=k*uZ}ejL3|Ovb
z5Q5p2^_Ip^pv|t}Q_E#ZGWd*^BVaiacj)@uI&Zzb6S$EhH--W?mPlGu#}bbP#Al=E
z5j#i3PLLjU$d@BNI&<*Fz|gK9hBkTO&}`z*hBo!a&}Q&uRA|!|4$W5jD72X%w6E}W
zSn`$7c;Yo?pBMM3RQr^*eTr)z(+9X7P15UviK8y~2H%Ew4=82!UG6m2D|`%`hn5S`
oVic#<x=a6FR?gxc$pq=#r|S{Eqo*wGr|Hc)<!uAsV-u7A0arL!E&u=k

diff --git a/mallet-api/target/classes/com/agh/api/TermCreateDTO.class b/mallet-api/target/classes/com/agh/api/TermCreateDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..dea68c8bc8b745e463e73f38bd558f909520a993
GIT binary patch
literal 2743
zc$}qH`%fE35dPK=&X^<Ej^pB{1g9a5Z30fxBz>5s4Ujan=24(DBz>*zEnGO?xp!yO
z{!f+KNJU6QYJaTMKdSBQ-T^io4pJq~yR$p<?KiVCv;6(f!5;uV0#71>sD_x1I0hI}
zFZeF6nB3Z`tcr&1G#LhF49oByFhq-`4Gjr~E5}Mp9n)N~4a*bGqn{e0?HRU}K$77a
zt+Wb;TWE1-M>GqTZB1FET&Q<Exh&^NXwc=s!wi>-wPVyZ&oQj6YH1^Z5r!Lbt;4s(
zYv2ZvMn=O$9a&sr$T#d(g>P+Fc-yF~6Pr0la8JyyFEhj>JBG~ZGbP9yIz}ZzvMGL$
zzLQUK`Ar>{@fJhkkPkzy)_q7VSXUrdbd00GFyuMha!oE#7%tb&WL4GhHpBFp`x8CV
zY{xL0!b##Pq8Yl%>pI@S4I<~+z9$ToVxPlGr(KsYB^_l<63jMtx9998`FN!-%!0I<
z(lLz+rHc5m!%dgrRzI7rlb7o+M8m6=o>630JC<j(#DcYJxJKO+4=u~~RM-eGRWt2Y
z-QKAz*_O<?D#Q3mgY}==y+%(%aw=pc^a}g=yg>=%$7ZBvSYoNustaeG69t)4c7vN6
z+%cpaEXKTTgZK=udAzZ+$lGdJ!-qZf=F`zI!;lT5M9Pc8+qRo4+~F-j8BCB9CxdXb
z*%Jw^?xzdGonq;1*FsZ_LY*y!q>E|@3nwbK>q42`TVTN!!{`YLM=@s@>&K4vlWTUz
zX^6*$3U$x!v^<H*ZArM^qL4R2eh(ZrvDB<>doGn?+mE3;GJvHdma(GY3mvOiql7x<
z>iAI&I0q&SgY`ochL_!L8`iG9BPzb)6K*w4;ZD?Sd#BS5%eYg9GIi&L+i;AwXFJ^r
zb0&A)5RB*jPw%PkAo2-(NeLr6U-h`LRS%n4wX082(@oKrqc2b27=ylGS;A3d1O*}+
zmM9v&VYq&-plJB6=NSo8rQ7qBahuv{gxX9D8QI!tev705Fxmm`(3b$a2qk4?>sBN6
z>epyef2MJecH?-L(C?D;E21O;_sjcWlYe3O6|~LF;68@_oH~>)NU1!zhgA9I9&+WW
zJ><*z*dE4Sl4TV4==TDR^0W+w=#&KRlXTZd#(U~qIg{QnH5*la$(iIGRWr#ihWBZn
zN913Eifc$~_(1*9bCCvy=?w?cF+u`ifUH4wzON}na!}6ZBEHWLd}TizI2s4>F+L$l
z2B4s55cOBMy19>QzbU<YK^Wz4nqHcRf%a`0<*HUbzyu(bBR$H}Z{1f3{7%ygGaF)F
z1b#V}`84K8OPbHnDA^{;lLxqYmVM6GISP9M^LRx2GIDW7f^;xTE=3h+CEye<|Bh5Y
zhvETZNQ!0sa8s{4ic~jj?mV#cB;s)hr~LorG>%V0IE|eLHjXDsYXP6BdSvwP$LA_n
xV?i$W)|g+5GNVuK__bG4b;z)&(rO(W_zF+4iDzm(Lg;Bcr}X?9-{O1Z{{#F~P!#|G

diff --git a/mallet-api/target/classes/com/agh/api/TermDTO$TermDTOBuilder.class b/mallet-api/target/classes/com/agh/api/TermDTO$TermDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..7ebce3af7b60aff1534d55e84df115ee9ed7e5fa
GIT binary patch
literal 2583
zc$~FXTT>f16#m4;Yn<g05(uGgFacTvN!)9a7DyXND5U1nn4y#DlWeP?crAH$Wv2Nj
z{Tb~H9cGf5_OUblQJo&i%f)z;_@xitqm{n%oli$cXZ_E=um1$Ff>H)O==IR&qaP`T
zk(d047Xq#h3OnVOqGA|Q%Th`6h@m$>zwaT<aO)hj-3)?VEtL`B(_bp0VWd`RWEiGp
zH7BE7org71%_*(!DuU+9O=G9+I0Fy94Lis%mM@-jmP{zs!P5Nx0ERK*;i`{OTw}Oh
z(e(m9I4tmnEbNJ}{$y`wHnyux8B|5c&?Bp~iwkT;O<ZY=G0c$2`g=s#kT-lx;3h+#
z#WRd{O0%dBd}J*uQx!kk1kuLr^erD#$T6fXzR3>+!+7zc@M1jgNN)R>!7RfS6LJ*=
z+_F$MiU~Vi^6(MEwS<)n=8(6EoM$NKFK@k5eZowlz(f`E`=eAii$3n)F2jvFuZcCS
zD%|`i%^{5<!<C5`qW@h;r#BthnyymDhl^5)?Pk3!!aZINggr!E;lVx+rG1Yl`^=#v
zsk2G^mkNux?|1BIzB|XklHrxw7H`C1N4A7H)YV-c^17fJBMDQ_o65+#*i=U{l2+lX
zhIp)$Hm)QhThf89mvybMt(CoW#5;T0>5Q?>^I_86>Q4D`KKVepbYIH9<>b2Z?l0RR
z)mT2!fe>k<Tl-<So=>cYOi4GxiddI6?|$rg&jQJNTSR6<N7Uj*R<$+}-N8odXrkd1
zo@TI)?>ubSQs1O(pVLcqq-!FM(yIP-UNJg+#qjIJY{$SB=>}KTKt!`et!vH3yRSo=
zqpgJm_)o>ly}IpA#1v~h2ujijYJuM~Y@Mc{J==L%U14`}w%=KM-qGyaX(Mxp^ES1@
zsNMLRN{MhS;87%~)P~w=J?t>db(IbeKeT;UlA!b{YJo9Lt+R*PP(MBC(?Fvh+p?X_
z#+JIUv(#V7rX4y3hI=$BkY#pe;RNh=2P@Ds<t9`3gr0s2fKTxmS!y8o9DUCDIeK02
zvBkeJ_y*pK(SZ|O`D<bE4-75*Mhm?iWaBM|n9Po>YKAWynhoJg8_Nb6!F?JIfQ^%R
zK);9d^Q_tjPR0bjdaI1<r!vO7mSL0DDP!WjGO{G2$H`bCYgs)Tc+v&#OlB*vcNW-l
zr^HU<Whox@KzyCV`C-?b_QcOPryS>u<Lcm??wZq9&l%^8<6Ne{O|3FoCxCU%zQNp!
zg=0GYW6J$8rQw)lA7lCiA14QDRaf?`x*p-1nDYtMoL!qt;(Lt+;9ZQ9F=HRTb*RT!
fb#@MG?h-KKXLyDpy^YfRFs*FSId5Z^3hL&6QUg{r

diff --git a/mallet-api/target/classes/com/agh/api/TermDTO.class b/mallet-api/target/classes/com/agh/api/TermDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..f403148b8a4754593a6c9b8bae735539c46c9199
GIT binary patch
literal 2859
zc$}qG`%l|e6#i}!$00QkLP&v@5(>15fo62CcIjgU+LbLl28@k$FDJPrE{UDl4%+^w
z{jf?yNL1RS{Zgra)V6bN195OE(h%48^__Fi`OYJ6{yF*+z<uaRL=cq`Qy?MEkb0r*
zYsH3U>=rk8)wF61@q4<VI}aG5`NFo01jDsc&}zHUST}XU;nw3{s=VdsrjbCBVM4Fv
zbUWA7tUX@K8KyC35Hwe5JK|WZlaQf^XL}ij^5s*Vn~tR$yQRW*0{sk=q`LVIRXrF$
zTE?J)42Bp6t7fyP?beH0OD}Gb_|n!ILqsQMQXTJ<O?pL$URE%S5r&v}iXna07J<5=
z;Hp3+Yy7!jggh0;*A$E+$B+>CwzkU|vgJ+#%Ko{l<hp`MOfg(?EX}YRn$SY-mqRQr
z$+*FAJ>+J}pBLJCqsFZyrV&k3I136?%#bOL>DkRt$cL&foOMwsm{V{IMN&}L?E0cv
zBVUH!qF`Cz=M~(>`;;R5=eE|c8Psre$7^eq7rg3}3g0qZ*=QS%-sH>1zHaN427hE2
zrsGm#i%2!hX2skqu9}9(vJ%61x4_n~t)NgP-yPqxj)t6shAZ6fZAuf5nf|hF@YQy+
z!mTZhj1h@rR<*{qX6a(@AI6-zPL}m<I$CvaMQgdoGN_*Vf~Ly&G*Ew@aWWPdGGPW1
zc!fK4v$n2TT9Z@m(lb-t6rEfKc#<n#>M-2M7s4FvN--iolMhK6w<#=l)o(|LnHel6
z|B4O++T2KqTq}f!g5h$wnRJufG}~5{KhXu*ihq7f=%y-L<+iiJMTp4h_;E)|EtsZb
zQw6p>0`2}dzDi;nU(5JL!4Ams@l)$8k5b=wUxcBja;$~nWvBnTv2X72q6d7c8MOwt
zr^=?e*KVDkj=rGC>LqShExqNKRwrPwq1kqbj%Vk;9w>J|1POe{a8s|9M9(XowzSf5
z8!L5mC~Ctg8d(~nG{$I55ZTLy!7bM&PJHwQQ$_~GWBNj@$k+}1sDwc&d>$C{)J7xJ
zd?chryQlRBw2On`Lz+LLkpLTnyGx74{tg5+b$6yN?#|SoX-*Pa!pDf=4(<L%l;nYX
z>LJ+7YxKT?yp!%Z#HGJxk9U1yr_LN8rOqB8tIi!@R2_*OU`!p64lwbO<fFJt-#(g!
z4QYBMNAoANd*JCu$$ed{gm27Uc|M4hur=zggtakuCG3@G2Hi&fC8cp012XQ*c<BB=
zqAk#iMM4Zoq!y%5fI&(?;vOX_M6z%>$uf_cB^ra0&zkr3{(A5jPv}H2lXER2Z(d<~
z=MXo4cd>VUzQuQdew04*(epHmQ&~Mi9uVM204%6bJcv)l0R1FA4H2IOe!GzPZ7dV&
zj>}cVwKk#79O1pU$!9&xNhA{Z9AD7A;7?+-5e{Zhra%a#Mc*b#{R64<9FlyEA-R}=
z&+#xZbyjWm|Ej%u5`a#%qZd(2oe(P_!ebW`p2TX1@We%gC9Juqb$m&4jP9nf;YLyN
zYa>|6qDs2YyxR6E+pFtM8X3ZEL6pTae2*XSBYuL03Pkls=#>FfDaUJgjygvE1D66)
AYybcN

diff --git a/mallet-api/target/classes/com/agh/api/UserDTO$UserDTOBuilder.class b/mallet-api/target/classes/com/agh/api/UserDTO$UserDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..65f7efa9d400c069695b38c70a3ad9ddfde5da9f
GIT binary patch
literal 1959
zc$}S7U2hvj6g}g(S;shuaTB*qpmj<Lw$s#5pe^JB8n+>p+_Y*+P{q^OJ0w%DXRO_E
zME?mt1Eioxtptxq{3yho*=-WXs}k`rduK=Io^!uu{{H9n9{|?yT^<>XdB_%U0pkqC
zm;8V?0<QKNPued<$1seqN+r!Y!&tSp>mkQ*^#rs%2!f|tDkH*&KX*jmNUd_nGb~8I
zBBM%=hh5=Ulvc}%pq2K(*kilT!$ZN!PBP3^TPK`5CX{M#rM5ePX%s!YUqA^L8LoG9
zufg~B8@w+Y-$x>R@chYQVmAgd@I}awkv?T{imj!I%QDRtP{t*Otl~YvP#RUVs4E4`
zSyW#7LK*p!6rqO?7%rxW=P{3~HiK&ncdKVLNBProEKwU43b>As7%ugAS2VTiaPxyS
z`?QM;S0-ZE`hV=BN0fe3`;`84ODeHF=(R=ooVNp45Z&RyE)S*sPY$zYUy}Y}>%VJH
z+;>L8tewwsa>wva_c8A$vc<>3>}&ri52;r)TNJ{zX9Ma-PdriwGLkmJSAB6`DQ&nN
zy2y4t(7m?qHnz30b4k35XPu52hdl44jo<kqztFZ@>RmO}fe<;PV@igZYHCaJJ9-dy
z#HO^V7ZT4~7D(RPA~IV#qKjDE(Aq>M<o&oh(eyaJ%HwOScv!U~v_=V^&`WioyCPAE
zr)raTj1FHh{Bk<s1Q?TUapeahT5M_E9rWKlW<!p)9Vzf1TW4RCp|MOTnmh=0q!BAQ
ze8X`2Z3%{}U6uYCyIHZ<*V>Z{y2ff$w?|5euo>_u64cVEVP6kTh8yR~*~7!3CoT<2
zuVM_w0=*d-y2E4irB{k}8T-sQJLl{;EqYr)&7oa`EVC!|Be35b?1lp|_x+f@g&2TO
zP$f$j6E$R=^D`#{%r5<f$v5y`lqQbw-k<fQ-!WDH)kSfZtQ<QeWOiqxWT-ndo5GUS
zvLZ#?r0oP)nanb+TeLhI?XnA_OtEKN7%OBgt7nC0obYHCv9Nb6?76bAw|ZsLV^pD3
z&dcZKoIA}q=QuybXGyKssfgBj<_+dw)DNjfhZOE1E+65;bb+|^GsmUBjn5OVRa-5x
xrPDmGQ32k?R7#k#_`;#S#2shnahGh4F!yM!<6DQ#&@9d4KJ{P&53q?V{{m@O$t?f?

diff --git a/mallet-api/target/classes/com/agh/api/UserDTO.class b/mallet-api/target/classes/com/agh/api/UserDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..49e7cf94b39d4b3014d426032bf1548dd672e54a
GIT binary patch
literal 2293
zc$|$?ZBrXn6n<_JvLP%agivYGHbq*Kr8L&Js-e{aeTjw?fuht;o8(GvlkAPV8%BSC
z|Hcn?Mur(WqaU5|M`_R9T}n1=8D?^G?%n&G_vfB}|2zH*z&$)qBZjz!gpM&J8L}_T
z1GC&Ut^M*AZ%VtxkX#X#aPKq3i=|x+DTb@3p!%TO-IT&|x&82$ChxmKS}CL%u8USd
zIE9{RcX+E{No(06XrVE1)n~O&LxZl|PBP3EYo|81U0YcDmD27wGRSI}){(;u!%S25
z%I1E%Z1zR@nZxb%ou>>jK`~~B)N7KImFldHOL&JNVVOP7kUQ%_p)TvVqEKnk;+89Z
z65Q7CF2h2Ex5YrN4n()b?KI{Q&ruz(=_uejL&}xDWrk9*7Ga=LIva#C@V<^k+#myO
z(`m2C7KJ<a76Vm<|3F6(CF%|Td0=)O1|u3h<n3wW1#h~Q(sPFStpR1)<5lZGIHJ+z
z4=hW%rs|!eYT1>&hU}E<(o*fMFkBl|*!i^|R=Qgp?ZDYYqgqVe@zc%JgvINFUW3~^
zCV5c(l1;O_YuZAcgO3TfEy&$$WVQ^G+pgK{Y?yryuHjRLsc>8x?uJ-?(y#0WciXbH
zY1%{<Vlz2e9L@U8Whiy6;j@9^X0a3%*9dDU%zQC|2i^m#j=Y7Tt}z+raBxK*L)N_F
z6P>r^z;5zKLRC!<BDk$!3=?(kxEoy6n&MBMJoN0Ul&<62X5X)clS$%98dZFw;aeRw
zY!DMp9oc?$f;a*dhVjOU6^56?sR-*pc6iwbJ~6FUmph9!DLaGy`D6(c73bEu)3in3
zmG&@Tt!p|?gpD81_a1tTK{ZpLk&+Xwikcaf(~*!NBGJmznxlGFEsNWpTTUrYg&VAa
zXno^CiEH>FG)|+S)FB^?J2b9h^!np84{0LO-k?(w3`-<$(Mo~Mz&qvC?DOOmPtpyI
z+GQkgn@+!xjReUB;|Of&A56Z2wwD_}!o=Uk(jlgdTZhOS%ZHeI>G>-Mew3XL>EH0R
zDWZ=6Z>Qp6-cI?Ac{}Afj*n?S3-&)j5*jiZKGE<Q{pj=Ov?f(HAT1Ey&te=*9aS1%
z(3*$`8N$2!5*0eDEDD|<is=>R_m1%1AGBvfu_iH1n3Vv1hot(d8OOK^C~zzUR*C68
zBuH$Urt-ZA^#$Pf3#k`zpHNDDg`|o$Wh@=z=G*iy`It9#P2nqiP4}u$V~h?e!5kh?
zS(VXp5Yw3PC#KFzXe_W8!I!*WXhyzIDm832e-X2cS{J1}cM;_=ta_+5tdmU8-8>$8
t{D}vw3Nzd1wa@BDw6cVFOja_eV-w$D3)>#=V`L|T9b(Kge2+a`ehmN)>cjv5

diff --git a/mallet-api/target/classes/com/agh/api/UserDetailDTO$UserDetailDTOBuilder.class b/mallet-api/target/classes/com/agh/api/UserDetailDTO$UserDetailDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..8913d8ca8862dd17297f0295f72afb05ee73b51e
GIT binary patch
literal 2894
zc$~GCYfl?T6o%j7X5*SbDG;E<F@+S{Bsjfa0%-#dfz}ubgea=iYHUwo;`NNRJ4Vev
z>CZ?dDx^eeKUV6Gih5>khuB_hQ>h=kbJ=s=dG^eiGydoG%Rd3E;YkF2=nr8aia`u9
zj6LJ0Jne9GoZihp69vOCv?`S}_Zj*V$)ga$46zHNT-9;*v{Xj84}UF)iji7{5n-5@
z#kln1W$u<lF|M?_qsTO#uNpgT`w@f?wabn$OeV4yng_;}>iAyrXc(gy3*p@;#_=A*
zN<o*?{P-lzD>D7q6K+NrE}hKb?qbtuy(*oea2fh!k-q3H<*X*%FeVw2vM7|1zewSB
z!L$(9qnO4FL*&AXVZ0qVjQ1Iqssy8WS@a-$BZ`<64mW(lh%=;JaV$OKavRMIH@zr*
z5XAx(>2q6sDY!LIBg=v!P~eW8Ce{xb7Dbt2)`NT^ilhY{^c_N2W|+BjJ0eKoj@{W6
zhMy9x@ox{?Wiu_rK`Am$S$sE&kMJ?W^)fGs4Xp~?Jdx&vdY<9Rcntb~g=n8*7}(H7
z3jJtSDv_&}^TIvkc}Li+u~J9em3Ca8955%6Fz;rsmf^I{dfS&JuP!ojV0fXl!z*>1
zu^nMfba9Wnl#z6@3GL>7RoO^vt5fMoOa8nf9w?=apJ<*vXO1rCbt#?G%2ox^U2JuF
zquAt`2|D~&|B6S6zzzEkN`raZWw?>(;7oR5qieVf6N$hyh#csuTM(Pl-})y16>Cl!
zIpLWt?NOl}Ti4pyqg$!P-y0pmb_Czy`w+4=$9E{C7mG-Bs!O82RxRx}dBJG+Im2&n
zhqP{36W!vf=m>8yt97Yb>3j~F9PNe&nE#k<y)l{&L|tNoJI;ahtIjUN&&`1d+J%HH
zuCd$ki+XEEjUs9Lt!2*6`L$_{B^jdIN(pzv;hrZb!zO~32;qR?R!?CH;c?Tg7i3Bo
zWz87#R4@CeE)CL?E-vcz+3Uk^WA&D5wcjTFaoD#W0>dZNOH<42OzIr$ci-$&dJg%M
zVSGl<Xw3kh;|ppjweTedeCK`i`-@L5|BaDX2t6GiKF2$MrI!D|wbToG(cdOERdc9|
z*`B3l_{z6t*YLGn%Pum8d(<5Uo1$jb{{sPpEbXd~F^&6|VoWqJrh3M(L2JjD?urrX
zfHB*^nClrM7Kjn+im`xiF2%Unz?knD!=_9-#zI$&WQS<nYG5q&jFAkCMzSl$w|G#`
z?@jvSXIGeeh1Ap38Rg{}CB+%-$Qgy>3`^&@{h~wK&%H_eb!^l%Gjtg2yV)SUmvp4i
qNpZHWI6ykq>LD@OHibvNCBqi|a@eEMIL(jJn;+;~_i>0L%=`<9G^RcP

diff --git a/mallet-api/target/classes/com/agh/api/UserDetailDTO.class b/mallet-api/target/classes/com/agh/api/UserDetailDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..46847d9f24cead633520e03e032baa23d0de067e
GIT binary patch
literal 3340
zc$}qH`%~LS5dIEZmT|<(fGLj>hexr^!y$d7ttn}Mq@gvB0-+^o)5`V*4s6MlWTyR}
z`a?5Qh8Z%`{@9uRPkro3a==F5%rJv|x2xUncE8<Q@%O)He*pLlMhtBTsR(OO5Mk&(
z)Q|OSSvU5xTfAsmC5Fg?Fod(n5K5(YRYVy^&yCh=<?^N}42N5felGH=BTOTT7{eV=
zN(wt!(XAt1N*bmyYmjNOP;;bO?qg7)$zwYh`cwIH%x%XK#(pln8$}mGT9mlqh?jy}
zEdZnFVVJ7f+%ohEZ)x1ikhS=}upLX6VXx>;Yo~sO30~1fxrJpr2JnuGK@CF~W*97*
zm8`yhkkzXq`;;PF;SPbU>})W!2_m`sLjHM^vX=nwY8b_BhS)g;4DriMN!vRb#-weu
zp1)L1Xqd!%gx;JdG48=QqQdFGqF$D27b&G7Es+#APZiS)b618x(I73=M7hMR7%~XO
zslVnlWO0{*a!fB&qCAzq5-gX#oSTHXr{R5kKrjcoeXwknDE!fDVOFKrM;h+qW9nc2
zQ%x`140o^dxp4AE;gA=dT>2Tq@K()`6s;P^!WM-xe`pw{<I-r$qLs}`!92>Yn})my
zIfmQK4m-b88=YRHnoE5->8mtN)e5>Z3}KI<uDme#daY96){ahr$j*_TySgQ$>?_00
zfuN{{uc3yaW82Y-M{9c3byBgy(Ak)TipLGZ!;4476NcV^(8+d<I|pWIQ@5yBX?jo$
z6V2ScdD%dqTJXAz;a)0zb=ZNONxAf;0=mo{ZmUgm=t3Vbv+?5juSnT|=9ZITpssAH
z7v1D-vt||fW8v1LA;LN7!EkGx+s+!7Wusgp^&#B7WSWk=!BvkpyDNfcF+9h2D!$k7
z0zXjiod;rhO!{&9E)4C3Its(9i>V6Z*gWD{&+v(El*-(m$eZR-t$KZX`i`>8SGZlY
zMAb2^iw4VO-L?ZTo?m}@!zl3Cj)M4^6{XzyILy_jU9Ne;<=p8--;V@6BlINc8K-B8
zL0dHpZn=?hVx=#rQ&b!>OuiLED#{Jt#2`~DrDu$J8nJCOo)pC8w}JMbkQ4#Kr?lqi
ziGuaQmEv;#x3Cy%X+fWW78dCi7%|c+SU{NmV*vg^i0pua%qiIPU+8!ZbuZq2id%oq
z)TK@-&DN!EDGi3}V%!y#y4WYh%=8HonVA!eWM)s0%nXK4FrFDyPB8U~&I)0Xeuvz1
zV-&H5BswvNZi*<5Jn0_Ln?)}!e2#~JyORtvcjqxFcapJ?yOYd>-JN7W!4mCh{f{6c
zDh5<6t9a!8eL=rKM@MHTR>`PeA!HCH2n~b-Lhx9dgpz<uTY`B@o416#CG1i9r94XU
z*}m$x9bZvy%w;|4Mo(3Fjm+LDW`1+67X6yZYW2{^cFnh*r&Vgz%o%0@Y24OeEa}ob
z6Q8ag`pB*axX%N>zLooZY><_7U!YY+8_i6g;lr!^6Q0eRYDKY$uj#!cSYaf{1c$Ii
z#gd>|KPDyfI}+C=r1*#d{oDti-BDudGVI7rVaEbtlQ)H(#C8De_)THcfzeLg3|7I8
z>;DwHw1&whgKuc}5{iEt8)u8Wm(9Ad0G+(6&AN1e-M94gk#>(da{xc0fFerZbpAf%
StZSoq2I$7OL*NJ%4E_(1UA7DW

diff --git a/mallet-api/target/classes/com/agh/api/UserLogInDTO$UserLogInDTOBuilder.class b/mallet-api/target/classes/com/agh/api/UserLogInDTO$UserLogInDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..27631b832e07263561eb539894451031b5e8170b
GIT binary patch
literal 1887
zc$}40YflqF6g>l_TWW!Vg00V@RZBtYTYTVyDuJY+5ycokP1^~K-Oe<-Q`CRr&(K6e
zqKSSq@kbf&Y!?Ap5Yo)v+1Yc?J@?L?>95~kzXO=Yqa?b}?I4yy58@2zH++qkT&`A1
zPpWT3%`n98N+r!bhVH`HvV#P}sZG#g+jXC6sf_R*zpIIsky<5?WXOvqmu^n_xhD4-
zqMlP)T~vh5Rolic+j$ZWQZ{lQ!*HRpNxNh`saEccE%#yoX$ONT4B;@tL`^qKd}X!7
zTe9@R7hXlL%&SMwpX9f`%(SIj7al`TAcA3NCv^hD3>RA5_up!-{vVxI#nBWpRzhOK
z$H6g%%x;2`$l`=e?IeYXNG&SaA=;ADDdaH9aJ0!AqO4Voo0rn8(#$tp8J}Tle{4IK
z7-D5z7YqXxsl;NtSry)MUUh{nkgjoenS0W{hl??@Dk<J%<se0;C^Jzzc~FwRCBtit
z1>Oq9q!)x))%B;`<4r-`M#4@%Ybzt0VqUFDUs~PoTjHTo+Hl*3gh*Fh-K^?HX;CZN
zsl=QA*Xb|gHqV}_Rl;zhu)A_%OBmfrkl{!nvgFAn-S%o?R@x*6x4KVSG*K)H-^^*B
zPFi|KYvUV_w>ruC1999);wGjX+_HUfoAhtSkZMggL>Q{mDzm(1wD+Fj!`3|rfgRF0
zuIjGv^A)Wd?N&tR?B-~z8v%b^`S;4$)_WmEnY-?iG=k3EU54x1>JZTYh2Y>$vx(fs
zX`5za45@jggjaTHP0%JCj_`EwfZ^P}a(6JZ?JkRg()HH?W0dZIE;^uH^rO2dm}LUn
z6O1?*&d{txmf4l!I@qTGc9x#;U@?w7JyRV3&fz>+I(@i+Sm68&-9eDy@t^4X2ItjK
z?>Y|sD2{(YfAJ%I=-xp#(s2mM?98fTC<JKMk1-p|21%nx(_XL<GUGHRXgF5wcpxLQ
zhm0c|GDh|-BNHhj^IsVkF&UQfHp#IO(%+DMRs2jP_>7Tt9RIjSRnvc~TEeA}XNu7F
zTmJ^fSDXU&V(AZAVz?ZjuHb55v$#e!L73|_?$947sIXns8d=<<obKZx%E<l!zq`g(

diff --git a/mallet-api/target/classes/com/agh/api/UserLogInDTO.class b/mallet-api/target/classes/com/agh/api/UserLogInDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..86557dba6b614cd30632e57d984c367ba24c07f9
GIT binary patch
literal 2295
zc$}qHZBrXn6n<`A*iD*15@>|hwo%iPH%ReaQ>z798w~*gnW=u-BzMR*o4s*&gZdZz
zEq-Wc>@Y)T^rJKWDD~XkO-W!AJLACaz31+8p7VMS{Pp+Q?*Kl-VH_cZ6+{w<VvZs8
zR6EhChGrgD_jy}b9frAkx~V(&8N!9)kph+B<~gW2G>ko=n+~@g{?z6JM;E4wI76QI
zHQmVRcCN2kJ>JQg!dx>6oofvpc`WyFC`d@lNrtP1#yRbQW9jB`t$3tjfnjx^+4hg*
z%zx0ukVZzqVggIJ%COuP{i=4{t!e|k`mN2ahB&U9+lRXhQP(?$%w?OB<c$QDC4)LL
ztl%0$Wg1_8T-Y4yMu%H*tRS4B9N$RbCT<azBRmTX>xITNs#@`~N0Q~O1m4Cw#M0I5
z?w06qh8we3>Qd=;0(Y=V734n*HN$48&QKY%yW4uo+fJ?c9mDngq3P&-UN=v4TW=Zs
zfoTdylVv8pRKpPcmgrTR!jzp*W4Luu;qd3dq|$0Yp@T}#5b*+CXy_(y4*M-`9csiV
z%O={Iaim$gl>Nhq)76Ro+Vl_^k_V2~?(Jv;S4Y8n6CFRQPiludUD4UoEUnL}vxzl-
zF|1b~Ct_1tUiBI77K&3H3F;SeZmAGZeD~VbFI<nY0x>b!#r`LT_<<N&ZT?7?xk-;(
zT$gBuD@|@YJ6xufJf9m~_td5kj_p|5z{`TYFo&%;w((HGqXfRhV=D5wJ<H3BZ`W60
zh_yy649~}1*Ub~r<5ds%STj2YxAP4ldc#3L7hG19?X=D9wxtgoVT}W}47#iV9N*8j
zK5^sx?5X&QVcwk)wb2NmIh3L&%aEv>CbwL3oI+g;sHTEFhTE?dwSxVLi5di@@_1lu
z&~ysX)ea#eha9a1lIFlrq_sqk3bqJW%E%!$6QR&)6lFwEA?X){=?5s6PQl85BKZ=^
zlT7RsSN^Dsq<JZo$}f;ARbC+boZw-s(R<!iRmo@^Ia=3A%6W9C;x6Fsq|40Rd9H2H
zei5O6NR9por4_tOzd#c2(}!4y@F1k;b_$^^T)(LXuKOR*lMMNhdG8oL#7DHRxaLEy
zS@k7Wo}A+PGZ(eyXG6ZzG@3v5(HpeNQ>Ao<H-TqvlE=X^qJ#(WBTCau{v<#>2mJb4
z>UZ!dp``jfTBWyYseFd~H2tiHd6iHVHPU2mwxWy#8Q>Cy6n06gzE9E8Z%EAwDC#o?
zbjlL^>@Ek=X8#{;l>P;g`uFiUtr5bk;0qTO@_S{nVV48W9=P4duu1x9)bTYM*m2uG
QL~Lm^sVR2x4GysKFPI_p<p2Nx

diff --git a/mallet-api/target/classes/com/agh/api/UserRegistrationDTO$UserRegistrationDTOBuilder.class b/mallet-api/target/classes/com/agh/api/UserRegistrationDTO$UserRegistrationDTOBuilder.class
new file mode 100644
index 0000000000000000000000000000000000000000..f8e15ebbc52373c1068f285342687e88e57c237c
GIT binary patch
literal 2236
zc$}qGZBtW66n+*0H>5#g3K+EsQKL<Q8v9-qXeCOa6M+Fs$LXg{vIA>wb~E>GX#FSs
z8Fq#aGdk0L>`Z@Dr)O_&MDUtq^uyk>EYEq)bM~A)`S-t<e*sv=Mgn6PcMwZr0+S4>
zXZ(;?T(0&jTlHt6VHhTtq>^TZVZ2z{a}a09oq#sGuDh+JGQxZGTSIh=)GCey!>3(e
zc#5}0Ui$eq_gbQvS6bat<dCm-jXk#e1RNx7@M(s*V(o-^*LYIx-!JV=VFoD&=aWd|
zV}^ST-LCNcg9`7+%1;zzN9;@Ac-)45_++aPakko(Zc}&+@xCgC^xLuGm?PmG?)$%L
zuQ^1xm31MBjMWtH`^0gHp&;5^x+A!Ml0??JPXrDQ78n+WWS2k=SL}6NWw;x0U89_o
z_R>`QLK4?;gW*D(w?tK|1~)%Tb3i-aaAkakAK#b%?IVU*RX6F@XKGT3&2GCcyeGWw
z26fO4?(T6<+P}lYm^qN7V5#>0#ip3sQT_B`l+(M0H(HN*Cls1`EX;v!ZgY>CiXH)p
zUfAg>Bimv_9ZFx?oSt{Y1EsVH=m?Rjxw>7~t;(iW_5l%Z;jGhZ##5dXb*qHoT5)I|
zL>f1`mo>v|F|sO&UETE>VolmyG7&7dtrIbA3g4`2pT<FIRcm7ronGqx%p~q7u!Lm?
zE4HV;qijw>Np+}OB8=E;vo+o@+I!CM`<wL%fj!c7u9~j!3pK4<-Ok{yJLPEaIs*Pn
z?d)7T)ukatmAme)G=c`f1BR`r>v(r_6#JuPncd9y=Yib^k9(Pw7?K-G39stXKLr)@
z(!0qVJYu*$(&ae#;nYNqg3=K0fpLY#&KSM^ar)9YrQMhvVS&vCc9ItT6o4in?J8uM
zJt-f9{Sm;50f+_P5`B|B0LoY-OAi`15euAmf-u0`;y;*v1?Opc>KGsWU0(bX=gKbv
z6=%ujdk!I)-C30kw*oXfhub!m4U!^lz!ca#nLD&Tqvcq&cLEui0WxO$GUi8?k%^R%
z87d<?K*q(sjLRd-$VSS@4wdmaz6dM2LZz}1W?v!qw0uOBIHGGf!sTP+UkoVl?CS!5
ziLXMgC98sL`c0mfxCRVjN{37_d>x>^!MB0U;V#)YVeZlT9;*R%j5;=lD&_VNYgos{
F{{cN%9cKUl

diff --git a/mallet-api/target/classes/com/agh/api/UserRegistrationDTO.class b/mallet-api/target/classes/com/agh/api/UserRegistrationDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..c9adc9524190623aa2777a6a41b9df148e2af9a6
GIT binary patch
literal 2666
zc$}qGZBH9V5PlZF+~J&yu?Znih?6>vUm$MMCT(Iu8z5<DjYEOZl72edD}3R6>)xGd
z`=2Vck&2Lr)PAhgAJt~|?i_4#!AOz3-rd=m=b4$Eo%{E{<G%nr!1Dw~5K$1-5JQ|H
z^+G?;%cgGal{a}q*iDA`qG1{C5<?_k*ioP|%$+FJx~91y49n&AqhA`l;~K(Jkzlyd
zb+~QmZJsrpY+JYYc{6JXYr!IeY`yDBv0NvhK$GN2hKu>?3G$X}8`fT>u%lv(;5xeF
z{7n7~fm1QgkmGILFo$T4B7+G97d1@c62p~-XqWZ9R$1>D<!9vkCf_q0*Vbi3tJ_Z*
z)Lujk>9_rqaF;bqODwhLtQ3BzVO9!bo>L00Fx(%)l?#zAcMY@2?F8l!Nz>I`)9?{;
z#N`U#1BN^K>JZ>c;cdqy*vA@fAWvW|-D$0eCWV+g2iTglEovxXp2~#()YVOg;qGwD
zJ};iuU+{)oDLiMG+3Z@b(dKK`f#Dc+lRva9;d({{o2r_kT^IZ1ny_TmRp`!68*KmD
z88o^VQc>rT6m}S*ej>)IhQ({$cAeYXI&sL`7Y*Iq(QQNS17Xx{8ANz>XzUEhEmv>s
zuj?JpRKXVm&#rfysdetQL~}#8spRN+5qR!&yl)N%f>!E&tuQR*3&Z?5qt?jPiF`=K
zc%5MF)N}2-M<xbeNN~iE*b-g4!5<qkVN)T*H>DB7g&KF<buLp*;lz85D77qvE44d*
zYMik+o+Pk_Zxnp1p^9}Xi4$7ePgX!5m@tgidngPq`y(){1F_G`zTy+zYMR{1RfX8^
zcFwMuz)%+7Dt8*T(Q$>{udrfLKM2A2@oe^i*BT^I1$ClJy-rl=HJXaoT&Pc`X-v_W
zVbInri`yPIr?{uzebEZ2+^?T26AFG9=>K7=bY;FWZc+amp&k)IT6S4lFVHRyhMP2(
zX{cZsc)PUhokKKchiK4>z9gR@O3c9T#2ck~sdxld`UlBZP<GR!N4W6!d~f%G+%5EW
zDY+|_4v{X-A7ZMwaEO_gp8vN!{;0>1Mgm!A#Hiv^*#UhPe1<!Kx010kZ{^1%SJL+g
z?$Vm(|0S4$jDpYoACOGq9vvnlWDT+dS@`jhz7$b_lgyt+{BZBn$V7rn^#6~df<;=(
zEMz@?^7|F$c8`$#!_&GQ<WT;P)0gBypnZ#GDOHNcxC%(+kpX2Hu;!}-0guzSV=2V^
zI`G@M%uD!^w50hW&C*-7SUN`GUG|f{&YOIz_zDl{T&6F^Xd?rhq>v&WXgTmHR{Rs`
zvjU0*h#~bgfgronp|Df$3p*PMJM(_9F)VxbD_EsDN;-3R<key%sL;XJGaVwE4Us*j
hks|5W#E?M^8~6^J*z#V;2ytYvO%?bI-(we-UjuUFMF{`^

diff --git a/mallet-api/target/mallet-api-1.0-SNAPSHOT.jar b/mallet-api/target/mallet-api-1.0-SNAPSHOT.jar
new file mode 100644
index 0000000000000000000000000000000000000000..883cc7397b7a80eee8bfdf6a525002afabfba844
GIT binary patch
literal 58902
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
ME*jv0tYK{H|3hnL!~g&Q

diff --git a/mallet-api/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/mallet-api/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
new file mode 100644
index 0000000000000000000000000000000000000000..65c29e0d163996d01b44c2f4366b3a89ad7829fd
GIT binary patch
literal 2150
zc$}40!EVDK482d<U--O#Si5PeRB6+i-g03H%aD=~0XgjNN79A?1)H7{8{0hF&!&+>
z&AOkOO`?8Na-L4y>=kE*zf|vVquI@(Z@GGEdZzW`Llb+Sr}ko)vN*D_n_0(GXJ^gT
zC+~zdiWwotObG9i=XMY|GYi=v0bii-@8xKe_?lM;yyw|mw#xWb!s9On+%VB!F*$+4
zv}0N{85kd24MJ;+w)&ltg<V59lqAIMGVuNpkELxck(5DY0cMT@UkD@|<6-=kY9MJ6
z(YS=e0r?Agzht;p>S)P}RN+5xAW_9d5_G)^B#KT1p&hWoDTRa%f$*x7wB~w}qsDGI
z%I<)6cTJaOf<I`53k4Fodk6_P8glDkHIMlPv7&e<Lns!`!F{_D@<+rBZK=^Sv2g=@
u0r3gYShq+n+P_hYa|cwc%PWBlJ6ykbbI@ltST7|r2(hB<i6|)bX7UG;WfklI

diff --git a/mallet-api/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/mallet-api/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
new file mode 100644
index 0000000000000000000000000000000000000000..ae366ea76627d1df99beb49c21d353a6e5c70b2f
GIT binary patch
literal 2450
zc$~GCJx;_h5QTdrjsgdu3jv`>MnsV9+zig(^(y|+*jZ^??#8{CqylPQ>E9>6Z{EoL
zojp{RYM+BU($}XQW~Nc{iCxpl&KPdpIM_(b!tI7iuvMH6L$W72lXW>-@<+R^JV{>5
z8@FDV8b3@gx7(KMtNuSlwwr)gzp@Xt3AK<DNM>S*P>awAcFuiHO~U)S8^wAErDiDk
zl{}+R+*1wCD0CohC<r)ettVjOO!fmRYL6mWBV9{Q6>8C5L`Z={nU!)k$AI!mDI;Go
zY79cH+AXF_frMEfFr<$x5!t+dzyK-yYOLsz#T&LY4{j6|<bMDuu$zT5=Wi{21Kk{)
AZU6uP

diff --git a/mallet-core/src/main/resources/mallet.p12 b/mallet-core/src/main/resources/mallet.p12
new file mode 100644
index 0000000000000000000000000000000000000000..9ecc39bf0c081c720b69dcf1a29723b39574033c
GIT binary patch
literal 2728
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
G&OZR`z{=DB

